%%
%% This is file `notesslides.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% notesslides.dtx  (with options: `package')
%% 
\ProvidesExplPackage{notesslides}{2022/12/13}{3.3.0}{notesslides Package}
\RequirePackage{l3keys2e}

\keys_define:nn{notesslides / pkg}{
  notes           .bool_set:N   = \c__notesslides_notes_bool ,
  slides          .code:n       = { \bool_set_false:N \c__notesslides_notes_bool },
  sectocframes    .bool_set:N   = \c__notesslides_sectocframes_bool ,
  unknown         .code:n       = {
    \PassOptionsToPackage{\CurrentOption}{stex}
    \PassOptionsToPackage{\CurrentOption}{tikzinput}
  }
}
\ProcessKeysOptions{ notesslides / pkg }

\RequirePackage{stex}
\stex_if_html_backend:T {
  \bool_set_true:N\c__notesslides_notes_bool
}

\newif\ifnotes
\bool_if:NTF \c__notesslides_notes_bool {
  \notestrue
  \RequirePackage[noamsthm]{beamerarticle}
  \RequirePackage{mdframed}
}{
  \notesfalse
}
\bool_if:NT \c__notesslides_notes_bool {
  \renewcommand\usetheme[2][]{\usepackage[#1]{beamertheme#2}}
}
\NewDocumentCommand \libusetheme {O{} m} {
  \libusepackage[#1]{beamertheme#2}
}
\newcounter{slide}
\newlength{\slidewidth}\setlength{\slidewidth}{13.5cm}
\newlength{\slideheight}\setlength{\slideheight}{9cm}
\ifnotes

\newlength{\slideframewidth}
\setlength{\slideframewidth}{1.5pt}
\cs_new_protected:Nn \__notesslides_do_yes_param:Nn {
  \exp_args:Nx \str_if_eq:nnTF { \str_uppercase:n{ #2 } }{ yes }{
    \bool_set_true:N #1
  }{
    \bool_set_false:N #1
  }
}

\stex_keys_define:nnnn{notesslides / frame}{
  \str_clear:N \l__notesslides_frame_label_str
  \bool_set_true:N \l__notesslides_frame_allowframebreaks_bool
  \bool_set_true:N \l__notesslides_frame_allowdisplaybreaks_bool
  \bool_set_true:N \l__notesslides_frame_fragile_bool
  \bool_set_true:N \l__notesslides_frame_shrink_bool
  \bool_set_true:N \l__notesslides_frame_squeeze_bool
  \bool_set_true:N \l__notesslides_frame_t_bool
}{
  label               .str_set_x:N  = \l__notesslides_frame_label_str,
  allowframebreaks    .code:n       = {
    \__notesslides_do_yes_param:Nn \l__notesslides_frame_allowframebreaks_bool { #1 }
  },
  allowdisplaybreaks  .code:n       = {
    \__notesslides_do_yes_param:Nn \l__notesslides_frame_allowdisplaybreaks_bool { #1 }
  },
  fragile             .code:n       = {
    \__notesslides_do_yes_param:Nn \l__notesslides_frame_fragile_bool { #1 }
  },
  shrink              .code:n       = {
    \__notesslides_do_yes_param:Nn \l__notesslides_frame_shrink_bool { #1 }
  },
  squeeze             .code:n       = {
    \__notesslides_do_yes_param:Nn \l__notesslides_frame_squeeze_bool { #1 }
  },
  t                   .code:n       = {
    \__notesslides_do_yes_param:Nn \l__notesslides_frame_t_bool { #1 }
  },
  unknown   .code:n       = {}
}{}
\cs_new_protected:Nn \__notesslides_setup_itemize: {
  \def\itemize@level{outer}
  \def\itemize@outer{outer}
  \def\itemize@inner{inner}
  \renewcommand\newpage{\addtocounter{framenumber}{1}}
  %\newcommand\metakeys@show@keys[2]{\marginnote{{\scriptsize ##2}}}
  \renewenvironment{itemize}{
    \ifx\itemize@level\itemize@outer
      \def\itemize@label{$\rhd$}
    \fi
    \ifx\itemize@level\itemize@inner
      \def\itemize@label{$\scriptstyle\rhd$}
    \fi
    \begin{list}
    {\itemize@label}
    {\setlength{\labelsep}{.3em}
      \setlength{\labelwidth}{.5em}
      \setlength{\leftmargin}{1.5em}
    }
    \edef\itemize@level{\itemize@inner}
  }{
    \end{list}
  }
}
\stex_if_html_backend:TF {
  \cs_new_protected:Nn \__notesslides_frame_box_begin: {
    \vbox\bgroup
    \begin{stex_annotate_env}{shtml:frame={}}
      \mdf@patchamsthm
  }
  \cs_new_protected:Nn \__notesslides_frame_box_end: {
    %^^A \miko@slidelabel
    \end{stex_annotate_env}\egroup
  }
}{
  \cs_new_protected:Nn \__notesslides_frame_box_begin: {
    \begin{mdframed}[
      linewidth=\slideframewidth,
      skipabove=1ex,
      skipbelow=1ex,
      userdefinedwidth=\slidewidth,
      align=center
    ]\sf
  }
  \cs_new_protected:Nn \__notesslides_frame_box_end: {
    \medskip%^^A\miko@slidelabel
    \end{mdframed}
  }
}
\renewenvironment{frame}[1][]{
  \stex_keys_set:nn{notesslides / frame}{#1}
  \sffamily
  \stepcounter{slide}
  \def\@currentlabel{\theslide}
  \str_if_empty:NF \l__notesslides_frame_label_str {
    \label{\l__notesslides_frame_label_str}
  }
  \__notesslides_setup_itemize:
  \__notesslides_frame_box_begin:
}{
  \__notesslides_frame_box_end:
}
\renewcommand{\frametitle}[1]{
  \stexdoctitle { #1 }
  \titleemph{#1}\medskip
}
\newcommand\pause{}
\fi
\bool_if:NTF \c__notesslides_notes_bool {
  \renewenvironment{note}{\ignorespaces}{}
}{
  \renewenvironment{note}{\setbox \l_tmpa_box\vbox\bgroup}{\egroup}
}
\cs_new_protected:Nn \__notesslides_notes_env:nnnn {
  \bool_if:NTF \c__notesslides_notes_bool {
    \newenvironment{#1}#2{#3}{#4}
  }{
    \newenvironment{#1}{\setbox\l_tmpa_box\vbox\bgroup}{\egroup}
  }
}

\__notesslides_notes_env:nnnn{nparagraph}{[1][]}{\begin{sparagraph}[#1]}{\end{sparagraph}}
\__notesslides_notes_env:nnnn{nfragment}{[2][]}{\begin{sfragment}[#1]{#2}}{\end{sfragment}}
\__notesslides_notes_env:nnnn{ndefinition}{[1][]}{\begin{sdefinition}[#1]}{\end{sdefinition}}
\__notesslides_notes_env:nnnn{nassertion}{[1][]}{\begin{sassertion}[#1]}{\end{sassertion}}
\__notesslides_notes_env:nnnn{nproof}{[2][]}{\begin{sproof}[#1]{#2}}{\end{sproof}}
\__notesslides_notes_env:nnnn{nexample}{[1][]}{\begin{sexample}[#1]}{\end{sexample}}
\cs_set_eq:NN\__notesslides_inputref:\inputref
\cs_set_protected:Npn\inputref{\@ifstar\ninputref\__notesslides_inputref:}
\bool_if:NTF \c__notesslides_notes_bool {
  \newcommand\ninputref[2][]{
    \__notesslides_inputref:[#1]{#2}
  }
}{
  \newcommand\ninputref[2][]{}
}
\newlength{\slidelogoheight}
\RequirePackage{graphicx}

\bool_if:NTF \c__notesslides_notes_bool {
  \setlength{\slidelogoheight}{.4cm}
}{
  \setlength{\slidelogoheight}{.25cm}
}
\ifcsname slidelogo\endcsname\else
  \newsavebox{\slidelogo}
  \sbox{\slidelogo}{\sTeX}
\fi
\newrobustcmd{\setslidelogo}[2][]{
  \tl_if_empty:nTF{#1}{
    \sbox{\slidelogo}{\includegraphics[height=\slidelogoheight]{#2}}
  }{
    \sbox{\slidelogo}{\mhgraphics[height=\slidelogoheight,mhrepos=#1]{#2}}
  }
}

\bool_if:NT \c__notesslides_notes_bool {
  \def\author{\@dblarg\ns@author}
  \long\def\ns@author[#1]#2{%
    \def\c__notesslides_shortauthor{#1}%
    \def\@author{#2}
  }
}

\newrobustcmd{\setsource}[1]{\def\source{#1}}

\def\copyrightnotice{%
  \footnotesize\copyright :\hspace{.3ex}%
  \ifcsname source\endcsname\source\else%
  \ifcsname c__notesslides_shortauthor\endcsname\c__notesslides_shortauthor\else%
  \PackageWarning{notesslides}{Author/Source~undefined~in~copyright~notice}%
  ?source/author?\fi%
  \fi}
\newsavebox{\cclogo}
\sbox{\cclogo}{\includegraphics[height=\slidelogoheight]{stex-cc_somerights}}
\newif\ifcchref\cchreffalse
\AtBeginDocument{
  \@ifpackageloaded{hyperref}{\cchreftrue}{\cchreffalse}
}
\def\licensing{
  \ifcchref
    \href{http://creativecommons.org/licenses/by-sa/2.5/}{\usebox{\cclogo}}
  \else
    {\usebox{\cclogo}}
  \fi
}
\newrobustcmd{\setlicensing}[2][]{
  \def\@url{#1}
  \sbox{\cclogo}{\includegraphics[height=\slidelogoheight]{#2}}
  \ifx\@url\@empty
    \def\licensing{{\usebox{\cclogo}}}
  \else
    \def\licensing{
      \ifcchref
      \href{#1}{\usebox{\cclogo}}
      \else
      {\usebox{\cclogo}}
      \fi
    }
  \fi
}
\newrobustcmd\miko@slidelabel{
  \vbox to \slidelogoheight{
    \vss\hbox to \slidewidth
    {\licensing\hfill\copyrightnotice\hfill\arabic{slide}\hfill\usebox{\slidelogo}}
  }
}

\define@key{Gin}{label}{\def\@currentlabel{\arabic{slide}}\label{#1}}

\newrobustcmd\frameimage[2][]{
  \stepcounter{slide}
  \bool_if:NT \c__notesslides_frameimages_bool {
    \def\Gin@ewidth{}\setkeys{Gin}{#1}
    \bool_if:NF \c__notesslides_notes_bool { \vfill }
    \begin{center}
      \bool_if:NTF \c__notesslides_fiboxed_bool {
        \fbox{
          \ifx\Gin@ewidth\@empty
            \ifx\Gin@mhrepos\@empty
              \mhgraphics[width=\slidewidth,#1]{#2}
            \else
              \mhgraphics[width=\slidewidth,#1,mhrepos=\Gin@mhrepos]{#2}
            \fi
          \else% Gin@ewidth empty
            \ifx\Gin@mhrepos\@empty
              \mhgraphics[#1]{#2}
            \else
              \mhgraphics[#1,mhrepos=\Gin@mhrepos]{#2}
            \fi
          \fi% Gin@ewidth empty
        }
      }{
        \ifx\Gin@ewidth\@empty
          \ifx\Gin@mhrepos\@empty
            \mhgraphics[width=\slidewidth,#1]{#2}
          \else
            \mhgraphics[width=\slidewidth,#1,mhrepos=\Gin@mhrepos]{#2}
          \fi
          \ifx\Gin@mhrepos\@empty
            \mhgraphics[#1]{#2}
          \else
            \mhgraphics[#1,mhrepos=\Gin@mhrepos]{#2}
          \fi
        \fi% Gin@ewidth empty
      }
     \end{center}
    \par\strut\hfill{\footnotesize Slide \arabic{slide}}%
    \bool_if:NF \c__notesslides_notes_bool { \vfill }
  }
}
\gdef\printexcursions{}
\newcommand\excursionref[2]{% label, text
  \bool_if:NT \c__notesslides_notes_bool {
    \begin{sparagraph}[title=Excursion]
      #2 \sref[fallback=the appendix]{#1}.
    \end{sparagraph}
  }
}
\newcommand\activate@excursion[2][]{
  \tl_gput_right:Nn\printexcursions{\inputref[#1]{#2}}
}
\newcommand\excursion[4][]{% repos, label, path, text
  \bool_if:NT \c__notesslides_notes_bool {
    \activate@excursion[#1]{#3}\excursionref{#2}{#4}
  }
}
\keys_define:nn{notesslides / excursiongroup }{
  id        .str_set_x:N  = \l__notesslides_excursion_id_str,
  intro     .tl_set:N     = \l__notesslides_excursion_intro_tl,
  mhrepos   .str_set_x:N  = \l__notesslides_excursion_mhrepos_str
}
\cs_new_protected:Nn \__notesslides_excursion_args:n {
  \tl_clear:N \l__notesslides_excursion_intro_tl
  \str_clear:N \l__notesslides_excursion_id_str
  \str_clear:N \l__notesslides_excursion_mhrepos_str
  \keys_set:nn {notesslides / excursiongroup }{ #1 }
}
\newcommand\excursiongroup[1][]{
  \__notesslides_excursion_args:n{ #1 }
  \tl_if_empty:NF\printexcursions% only if there are excursions
  {\begin{note}
    \begin{sfragment}{Excursions}% TODO pass on id
      \ifdefempty\l__notesslides_excursion_intro_tl{}{
        \exp_args:NNe \use:nn \inputref{[\l__notesslides_excursion_mhrepos_str]{
          \l__notesslides_excursion_intro_tl
        }}
      }
      \printexcursions%
    \end{sfragment}
  \end{note}}
}
\ifcsname beameritemnestingprefix\endcsname\else\def\beameritemnestingprefix{}\fi
\prop_new:N \g__notesslides_variables_prop
\cs_set_protected:Npn \setSGvar #1 #2 {
  \prop_gput:Nnn \g__notesslides_variables_prop {#1}{#2}
}
\cs_set_protected:Npn \useSGvar #1 {
  \prop_item:Nn \g__notesslides_variables_prop {#1}
}
\cs_set_protected:Npn \ifSGvar #1 #2 #3 {
  \prop_get:NnNF \g__notesslides_variables_prop {#1} \l__notesslides_tmp {
    \PackageError{document-structure}
    {The sTeX Global variable #1 is undefined}
    {set it with \protect\setSGvar}\TODO better error
  }
  \tl_if_eq:NnT \l__notesslides_tmp {#2}{ #3 }
}

\endinput
%%
%% End of file `notesslides.sty'.
