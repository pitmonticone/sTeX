%^^A meta-comment
%^^A  An Infrastructure for Semantic Macros and Module Scoping
%^^A  Copyright (c) 2022 Michael Kohlhase, all rights reserved
%^^A                 this file is released under the
%^^A                 LaTeX Project Public License (LPPL)
%^^A  
%^^A  The original of this file is in the public archive at 
%^^A  http://github.com/sLaTeX/sTeX/
%^^A 
% \iffalse
%<*driver>
\def\stexdocpath{../doc}
\input{\stexdocpath/stex-docheader}
\stextoptitle{The \sTeX Package}{stex}
\docmodule
%</driver>
% \fi
%
%
% \begin{stexmanual}
% \end{stexmanual}
%
% \begin{documentation}
%    \begin{sfragment}{\sTeX Developer Manual}
%      \input{\stexdocpath/packages/stex-devel}
%    \end{sfragment}
% \end{documentation}
%
% \begin{implementation}
%  \begin{sfragment}{The \sTeX Implementation}
%
%   \begin{sfragment}{Setting up}
% Setup code for the document class
%    \begin{macrocode}
%<*cls>
%%%%%%%%%%%%%   stex.dtx   %%%%%%%%%%%%%

\RequirePackage{expl3,l3keys2e}
\ProvidesExplClass{stex}{2022/09/14}{3.3.0}{sTeX document class}

\DeclareOption*{\PassOptionsToPackage{\CurrentOption}{stex}}
\ProcessOptions

\RequirePackage{stex}

\LoadClass{article}
%</cls>
%    \end{macrocode}
%
% Setup code for the package
%
%    \begin{macrocode}
%<*package>
\RequirePackage{expl3,l3keys2e,ltxcmds}
\ProvidesExplPackage{stex}{2022/09/14}{3.3.0}{sTeX package}
\RequirePackage{stex-logo} % externalized for backwards-compatibility reasons
\RequirePackage{standalone}

\message{^^J*~This~is~sTeX~version~3.3.0~*^^J}
%    \end{macrocode}
%
% Package options:
%
%    \begin{macrocode}
\keys_define:nn { stex } {
  debug      .str_set_x:N  = \c_stex_debug_clist ,
  lang       .clist_set:N  = \c_stex_languages_clist ,
  mathhub    .tl_set_x:N   = \mathhub ,
  usedeps     .bool_set:N   = \c_stex_persist_mode_bool ,
  %writesms   .bool_set:N   = \c_stex_persist_write_mode_bool ,
  checkterms .bool_set:N   = \c_stex_check_terms_bool ,
  image      .bool_set:N   = \c_tikzinput_image_bool,
  unknown    .code:n       = {}
}
\exp_args:NNo \clist_set:Nn \c_stex_debug_clist \c_stex_debug_clist
\ProcessKeysOptions { stex }
%    \end{macrocode}
%
% Error messages:
%    \begin{macrocode}
\input{stex-en.ldf}
%    \end{macrocode}
%
% \end{sfragment}
%
% \begin{sfragment}{Utilities}
%
% \begin{sfragment}{Calling kpsewhich and Environment Variables}
%
%    \begin{macrocode}
%<@@=stex_envs>
%    \end{macrocode}
%
% \begin{macro}{\stex_kpsewhich:Nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_kpsewhich:Nn {\group_begin:
  \catcode`\ =12
  \sys_get_shell:nnN { kpsewhich ~ #2 } { } \l_tmpa_tl
  \tl_gset_eq:NN \l_tmpa_tl \l_tmpa_tl
  \group_end:
  \exp_args:NNo\str_set:Nn #1 {\l_tmpa_tl}
  \tl_trim_spaces:N #1
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_get_env:Nn}
%    \begin{macrocode}
\sys_if_platform_windows:TF{
  \cs_new_protected:Nn \stex_get_env:Nn {\group_begin:
    \escapechar=-1\catcode`\\=12
    \stex_kpsewhich:Nn-1{-expand-var~\c_percent_str#2\c_percent_str}
    \exp_args:NNx\use:nn\group_end:{
      \str_set:Nn\exp_not:N#1{#1}
    }
  }
}{
  \cs_new_protected:Nn \stex_get_env:Nn {
    \stex_kpsewhich:Nn #1 {-var-value~#2}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Logging}
%    \begin{macrocode}
%<@@=stex_debug>
%    \end{macrocode}
%
% \begin{macro}{\stex_debug:nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_debug:nn {
  \exp_args:NNo \clist_if_in:NnTF \c_stex_debug_clist { \tl_to_str:n{all} }{
    \_@@_:nn{#1}{#2}
  }{
    \exp_args:NNo \clist_if_in:NnT \c_stex_debug_clist { \tl_to_str:n{#1} }{
      \_@@_:nn{#1}{#2}
    }
  }
}

\cs_new_protected:Nn \_@@_:nn {
  \msg_set:nnn{stex}{debug / #1}{
    \\Debug~#1:~#2\\
  }
  \msg_none:nn{stex}{debug / #1}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\stex_fatal_error:n,\stex_fatal_error:nnn,\stex_fatal_error:nxx}
%   To avoid dead locks etc., we throw errors and make tex stop
%   entirely:
%    \begin{macrocode}
\cs_new_protected:Nn \stex_fatal_error:n {
  \msg_error:nn{stex}{#1}\input{Fatal~Error!!}
}
\cs_new_protected:Nn \stex_fatal_error:nnn {
  \msg_error:nnn{stex}{#1}{#2}{#3}\input{Fatal~Error!!}
}
\cs_generate_variant:Nn \stex_fatal_error:nnn {nxx}
%    \end{macrocode}
% \end{macro}
%
% We check an environment variable for debugging and 
% set things up:
%
%    \begin{macrocode}
\stex_get_env:Nn\_@@_env_str{STEX_DEBUG}
\str_if_empty:NTF\_@@_env_str {
  \clist_set_eq:NN \l_@@_cl \c_stex_debug_clist
}{
  \clist_set:No \l_@@_cl {\_@@_env_str}
}
\clist_clear:N \c_stex_debug_clist
\clist_map_inline:Nn \l_@@_cl {
  \exp_args:NNo \clist_put_right:Nn \c_stex_debug_clist
  { \tl_to_str:n{#1} }
}

\exp_args:NNo \clist_if_in:NnTF \c_stex_debug_clist {\tl_to_str:n{all}} {
    \msg_redirect_module:nnn{ stex }{ none }{ term }
    \stex_debug:nn{all}{Logging~everything!}
}{
  \clist_map_inline:Nn \c_stex_debug_clist {
    \msg_redirect_name:nnn{ stex }{ debug / #1 }{ term }
    \stex_debug:nn{#1}{Logging~#1}
  }
}
%    \end{macrocode}
%
% \end{sfragment}
%
% \begin{sfragment}{Languages}
%    \begin{macrocode}
%<@@=stex_lang>
%    \end{macrocode}
%   \begin{variable}{\c_stex_languages_prop,\c_stex_language_abbrevs_prop}
%
% We store language abbreviations in two (mutually inverse) 
% property lists:
%    \begin{macrocode}
\exp_args:NNx \prop_const_from_keyval:Nn \c_stex_languages_prop { \tl_to_str:n {
  en = english ,
  de = ngerman ,
  ar = arabic ,
  bg = bulgarian ,
  ru = russian ,
  fi = finnish ,
  ro = romanian ,
  tr = turkish ,
  fr = french
}}

\exp_args:NNx \prop_const_from_keyval:Nn \c_stex_language_abbrevs_prop { \tl_to_str:n {
  english   = en ,
  ngerman   = de ,
  arabic    = ar ,
  bulgarian = bg ,
  russian   = ru ,
  finnish   = fi ,
  romanian  = ro ,
  turkish   = tr ,
  french    = fr
}}
% todo: chinese simplified (zhs)
%       chinese traditional (zht)
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\l_stex_current_language_str}
%    \begin{macrocode}
\str_new:N \l_stex_current_language_str
%    \end{macrocode}
% \end{variable}
%
% we use the |lang|-package option to load the corresponding
% babel languages:
% \begin{macro}{\stex_set_language:n, \stex_set_language:x, \stex_set_language:o}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_set_language:n {
  \str_set:Nn \l_stex_current_language_str { #1 }
  \prop_if_in:NnTF \c_stex_languages_prop {#1} {
    \cs_if_eq:NNTF\@onlypreamble\@notprerr{ 
      \ltx@ifpackageloaded{babel}{
        \exp_args:Nx\selectlanguage{
          \prop_item:Nn \c_stex_languages_prop {#1}
        } 
      }{}
    }{
      \ltx@ifpackageloaded{babel}{}{
        \str_if_eq:nnTF {#1} {tr} {
          \RequirePackage[turkish,shorthands=:!]{babel}
        }{
          \RequirePackage[\prop_item:Nn \c_stex_languages_prop {#1}]{babel}
        }
      }
    }
  }{
    \msg_error:nnx{stex}{error/unknownlanguage}{#1}
  }
}
\cs_generate_variant:Nn \stex_set_language:n {x,o}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_language_from_file:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_language_from_file: {
  \seq_get_right:NN \g_stex_current_file \l_tmpa_str
  \seq_set_split:NnV \l_tmpa_seq . \l_tmpa_str
  \seq_pop_right:NN \l_tmpa_seq \l_tmpa_str % = ".tex/.dtx/.sty"
  \exp_args:No \str_if_eq:nnF \l_tmpa_str {tex} {
    \exp_args:No \str_if_eq:nnF \l_tmpa_str {dtx} {
      \exp_args:No \str_if_eq:nnF \l_tmpa_str {ltx} {
        \exp_args:NNo \seq_put_right:Nn \l_tmpa_seq \l_tmpa_str
      }
    }
  }
  \seq_pop_left:NN \l_tmpa_seq \l_tmpa_str % <filename>
  \seq_if_empty:NF \l_tmpa_seq { %remaining element should be [<something>.]language
    \seq_pop_right:NN \l_tmpa_seq \l_@@_str
    \str_if_eq:NNF \l_@@_str \l_stex_current_language_str {
      \exp_args:NNo \prop_if_in:NnT \c_stex_languages_prop \l_@@_str {
        \stex_set_language:o \l_@@_str
      }
    }
    \stex_debug:nn{lang} {Language~\l_stex_current_language_str~
      inferred~from~file~name}
  }
}
%    \end{macrocode}
% \end{macro}
%
% Loading babel:
%    \begin{macrocode}
\clist_if_empty:NF \c_stex_languages_clist {
  \bool_set_false:N \l_@@_turkish_bool
  \seq_clear:N \l_tmpa_seq
  \clist_map_inline:Nn \c_stex_languages_clist {
    \str_set:Nx \l_tmpa_str {#1}
    \str_if_eq:nnT {#1}{tr}{
      \bool_set_true:N \l_tmpa_bool
    }
    \prop_get:NoNTF \c_stex_languages_prop \l_tmpa_str \l_tmpa_str {
      \seq_put_right:No \l_tmpa_clist \l_tmpa_str
    } {
      \msg_error:nnx{stex}{error/unknownlanguage}{\l_tmpa_str}
    }
  }
  \stex_debug:nn{lang} {Languages:~\seq_use:Nn \l_tmpa_seq {,~} }
  \bool_if:NTF \l_@@_turkish_bool {
    \exp_args:NNe \use:nn \RequirePackage
      {[main=\seq_use:Nn \l_tmpa_seq, ,shorthands=:!]}{babel}
  }{
    \exp_args:NNe \use:nn \RequirePackage
      {[main=\seq_use:Nn \l_tmpa_seq, ]}{babel}
  }
}
%    \end{macrocode}
%
% \end{sfragment}
%
% \begin{sfragment}{Group-like Behaviours}
%    \begin{macrocode}
%<@@=stex_groups>
%    \end{macrocode}
%
%   \begin{macro}{\stex_pseudogroup:nn,\stex_pseudogroup_restore:N}
%    \begin{macrocode}
\cs_new_protected:Npn \stex_pseudogroup:nn {
  \exp_args:Nne \use:nn
}
\cs_new:Nn \stex_pseudogroup_restore:N {
  \tl_if_exist:NTF #1 {
    \tl_set:Nn \exp_not:N #1 { \exp_args:No \exp_not:n #1 }
  }{
    \cs_undefine:N \exp_not:N #1
  }
}
%    \end{macrocode}
%   \end{macro}
%
%   \begin{macro}{\stex_pseudogroup_with:nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_pseudogroup_with:nn {
  \tl_map_inline:nn{#1}{
    \cs_set_eq:cN{_@@_\tl_to_str:n{##1}}##1
  }
  #2
  \tl_map_inline:nn{#1}{
    \cs_set_eq:Nc##1{_@@_\tl_to_str:n{##1}}
    \cs_undefine:c{_@@_\tl_to_str:n{##1}}
  }
}
%    \end{macrocode}
%   \end{macro}
%
%   \begin{macro}{\stex_metagroup_new:n, \stex_metagroup_new:o}
% List of all currently existing metagroup identifiers
%    \begin{macrocode}
\seq_new:N \l_@@_ids_seq
%    \end{macrocode}
% start a new metagroup at the current group level with id \#1
%    \begin{macrocode}
\cs_new_protected:Nn \stex_metagroup_new:n {
    \str_set:cx{l_@@_#1_int} {\int_use:N\currentgrouplevel}
    \seq_put_right:Nn \l_@@_ids_seq {#1}
}
\cs_generate_variant:Nn \stex_metagroup_new:n {o}
%    \end{macrocode}
%   \end{macro}
%
%   \begin{macro}{\stex_metagroup_do_in:nn, \stex_metagroup_do_in:nx}
%    \begin{macrocode}
\prg_new_conditional:Nnn \_@@_exists:n {TF} {
    \str_if_exist:cTF{l_@@_#1_int}
        \prg_return_true: \prg_return_false:
}

\cs_new_protected:Nn \stex_metagroup_do_in:nn {
    \_@@_exists:nTF{#1}{
        \_@@_do_in:nn{#1}{#2}
    }{
      \msg_error:nnn{stex}{error/metagroup/missing}{#1}
    }
}
\cs_generate_variant:Nn \stex_metagroup_do_in:nn {nx}

\cs_new_protected:Nn \_@@_do_in:nn {
  \exp_args:Nnx\stex_debug:nn{metagroup}{adding~to~\detokenize{#1}:^^J\tl_to_str:n{#2}}
  \tl_set:Nn\_@@_tmp{#2}
  \exp_args:Nx \int_compare:nNnF {\use:c{l_@@_#1_int}}
      = \currentgrouplevel {
      \tl_if_exist:cTF{g_@@_#1_\the\currentgrouplevel _content}{
        \exp_args:Nno \tl_gput_right:cn{g_@@_#1_\the\currentgrouplevel _content}
      }{
        \exp_args:Nno \tl_gset:cn{g_@@_#1_\the\currentgrouplevel _content}
      }\_@@_tmp
      \bool_if_exist:cF {l_@@_\the\currentgrouplevel _bool} {
          \group_insert_after:N \_@@_do:
          \bool_set_true:c {l_@@_\the\currentgrouplevel _bool}
      }
  }
  \_@@_tmp
}

\cs_new_protected:Nn \_@@_do: {
  \seq_map_inline:Nn \l_@@_ids_seq {
    \tl_if_exist:cT{g_@@_##1_\int_eval:n{\currentgrouplevel+1}_content}{
      \exp_args:NNno \exp_args:Nno \_@@_do_in:nn{##1}{
        \csname g_@@_##1_\int_eval:n{\currentgrouplevel+1}_content\endcsname
      }
      \cs_undefine:c{g_@@_##1_\int_eval:n{\currentgrouplevel+1}_content}
    }
    \bool_if_exist:cF {l_@@_\int_eval:n\currentgrouplevel _bool} {
      \group_insert_after:N \_@@_do:
      \bool_set_true:c {l_@@_\int_eval:n\currentgrouplevel _bool}
    }
  }
}
%    \end{macrocode}
%   \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{HTML Annotations}
%    \begin{macrocode}
%<@@=stex_annotate>
%    \end{macrocode}
%
% \begin{macro}[TF]{\stex_if_do_html:}
%  Whether to (locally) produce HTML output
%    \begin{macrocode}
\bool_new:N \_stex_html_do_output_bool
\bool_set_true:N \_stex_html_do_output_bool

\prg_new_conditional:Nnn \stex_if_do_html: {p,T,F,TF} {
  \bool_if:nTF \_stex_html_do_output_bool
    \prg_return_true: \prg_return_false:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_suppress_html:n}
%  Temporarily disable HTML output
%    \begin{macrocode}
\cs_new_protected:Nn \stex_suppress_html:n {
  \stex_pseudogroup:nn{
    \bool_set_false:N \_stex_html_do_output_bool
    #1
  }{
    \stex_if_do_html:T {
      \bool_set_true:N \_stex_html_do_output_bool
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% We determine the backend:
% \begin{macro}[pTF]{\stex_if_html_backend:}
% \begin{macro}{\ifstexhtml}
% \begin{macro}{\stex@backend}
%    \begin{macrocode}
\ifcsname if@rustex\endcsname\else
  \expandafter\newif\csname if@rustex\endcsname
  \@rustexfalse
\fi

\stex_get_env:Nn\_@@_env_str{STEX_FORCE_PDF}
\str_if_empty:NTF\_@@_env_str {
  \tl_if_exist:NF\stex@backend{
    \if@rustex
      \def\stex@backend{rustex}
    \else
      \cs_if_exist:NTF\HCode{
        \def\stex@backend{tex4ht}
      }{
        \def\stex@backend{pdflatex}
      }
    \fi
  }
}{
  \def\stex@backend{pdflatex}
}

\input{stex-backend-\stex@backend.cfg}

\newif\ifstexhtml
\stex_if_html_backend:TF\stexhtmltrue\stexhtmlfalse
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Auxiliary Methods}
%    \begin{macrocode}
%<@@=stex_aux>
%    \end{macrocode}

% \begin{macro}{\stex_deactivate_macro:Nn, \stex_reactivate_macro:N}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_deactivate_macro:Nn {
  \tl_set_eq:cN{\tl_to_str:n{#1}~-~orig}#1
  \tl_set:Nn#1{
    \msg_error:nnnn{stex}{error/deactivated-macro}{\detokenize{#1}}{#2}
  }
}
\cs_new_protected:Nn \stex_reactivate_macro:N {
  \exp_after:wN\let\exp_after:wN#1\csname \detokenize{#1}~-~orig\endcsname
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_ignore_spaces_and_pars:}
%    \begin{macrocode}
\protected\def\stex_ignore_spaces_and_pars:{
  \begingroup\catcode13=10\relax
  \@ifnextchar\par{
    \endgroup\expandafter\stex_ignore_spaces_and_pars:\@gobble
  }{
    \endgroup
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_keys_define:nnnn}
%    \begin{macrocode}
\cs_new_nopar:Nn \stex_keys_define:nnnn {
  \tl_gset:cn {_@@_keys_#1_pre_tl}{#2}
  \tl_gset:cn {_@@_keys_#1_def_tl}{#3}
  \tl_if_empty:nF{#4}{
    \clist_map_inline:nn{#4}{
      \tl_set_eq:Nc \l_@@_tl {_@@_keys_##1_pre_tl}
      \tl_gput_left:co{_@@_keys_#1_pre_tl} \l_@@_tl
      \tl_set_eq:Nc \l_@@_tl {_@@_keys_##1_def_tl}
      \tl_gput_left:cn{_@@_keys_#1_def_tl} ,
      \tl_gput_left:co{_@@_keys_#1_def_tl} \l_@@_tl
    }
  }
  \tl_set_eq:Nc \l_@@_tl {_@@_keys_#1_def_tl}
  %\exp_args:Nnx \stex_debug:nn{keys}{
  %  Setting~keys~for~#1:^^J
  %  \meaning \l_@@_tl
  %}
  \exp_args:Nno \keys_define:nn {stex / #1} {\l_@@_tl}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_keys_set:nn}
%    \begin{macrocode}
\cs_new_nopar:Nn \stex_keys_set:nn {
  \use:c{_@@_keys_#1_pre_tl}
  \keys_set:nn {stex / #1} { #2 }
}
%    \end{macrocode}
% \end{macro}
%
% Some ubiquitous key sets:
%    \begin{macrocode}
\stex_keys_define:nnnn{archive file}{
  \str_clear:N \l_stex_key_archive_str
  \str_clear:N \l_stex_key_file_str
}{
  archive .str_set_x:N = \l_stex_key_archive_str ,
  file    .str_set_x:N = \l_stex_key_file_str
}{}

\stex_keys_define:nnnn{id}{
  \str_clear:N \l_stex_key_id_str
}{
  id .str_set_x:N = \l_stex_key_id_str
}{}

\stex_keys_define:nnnn{title}{
  \tl_clear:N \l_stex_key_title_tl
}{
  title .tl_set:N = \l_stex_key_title_tl
}{}

\stex_keys_define:nnnn{style}{
  \clist_clear:N \l_stex_key_style_clist
}{
  style .clist_set:N = \l_stex_key_style_clist
}{}

\stex_keys_define:nnnn{deprecate}{
  \str_clear:N \l_stex_key_deprecate_str
}{
  deprecate     .str_set_x:N  = \l_stex_key_deprecate_str
}{}
%    \end{macrocode}
%
% \begin{macro}{\_stex_do_deprecation:n}
%    \begin{macrocode}
\cs_new:Nn \_stex_do_deprecation:n {
  \str_if_empty:NF \l_stex_key_deprecate_str {
    \msg_warning:nnxx{stex}{warning/deprecated}{#1}{\l_stex_key_deprecate_str}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\_stex_do_id:}
%    \begin{macrocode}
\cs_new_protected:Nn \_stex_do_id: {
  \stex_if_smsmode:F {
    \str_if_empty:NF \l_stex_key_id_str {
      \exp_args:No \stex_ref_new_doc_target:n \l_stex_key_id_str
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_new_stylable_env:nnnnnnn,\stex_new_stylable_cmd:nnnn,\stex_style_apply:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_new_stylable_cmd:nnnn {
  \exp_after:wN \newcommand \cs:w stexstyle#1 \cs_end:[2][]{
    \_@@_patch:nnn{#1}{##1}{##2}
  }
  \exp_after:wN \NewDocumentCommand\cs:w #1\cs_end:{#2}{
    \cs_set:Npn \stex_style_apply: {
      \_@@_apply_patch:n{#1}
    }
    #3
  }
  \tl_set:cn {_@@_style_#1:} { #4 }
}

\cs_new_protected:Nn \_@@_apply_patch:n {
  \clist_if_empty:NTF \l_stex_key_style_clist {
    \tl_clear:N \thisstyle
    \use:c{_@@_style_#1:}
  }{
    \clist_get:NN \l_stex_key_style_clist \thisstyle
    \tl_if_exist:cTF{_@@_style_#1_\thisstyle :}{
      \use:c{_@@_style_#1_\thisstyle :}
    }{
      \use:c{_@@_style_#1:}
    }
  }
}

\cs_new_protected:Nn \_@@_patch:nnn {
  \str_if_empty:nTF {#2}{
    \tl_set:cn{_@@_style_#1:}{#3}
  }{
    \tl_set:cn{_@@_style_#1_#2:}{#3}
  }
}

\cs_new_protected:Nn \stex_new_stylable_env:nnnnnnn {
  \exp_after:wN \newcommand \cs:w stexstyle#1 \cs_end:[3][]{
    \_@@_patch:nnnn{#1}{##1}{##2}{##3}
  }
  \NewDocumentEnvironment{#7#1}{#2}{
    \cs_set:Npn \stex_style_apply: {
      \_@@_apply_patch_begin:n{#1}
    }
    #3
  }{
    \cs_set:Npn \stex_style_apply: {
      \_@@_apply_patch_end:n{#1}
    }
    #4
  }
  \tl_set:cn {_@@_style_#1_start:} { #5 }
  \tl_set:cn {_@@_style_#1_end:} { #6 }
}

\cs_new_protected:Nn \_@@_patch:nnnn {
  \str_if_empty:nTF {#2}{
    \tl_set:cn{_@@_style_#1_start:}{#3}
    \tl_set:cn{_@@_style_#1_end:}{#4}
  }{
    \tl_set:cn{_@@_style_#1_#2_start:}{#3}
    \tl_set:cn{_@@_style_#1_#2_end:}{#4}
  }
}

\cs_new_protected:Nn \_@@_apply_patch_begin:n {
  \clist_if_empty:NTF \l_stex_key_style_clist {
    \tl_clear:N \thisstyle
    \use:c{_@@_style_#1_start:}
  }{
    \clist_get:NN \l_stex_key_style_clist \thisstyle
    \tl_if_exist:cTF{_@@_style_#1_\thisstyle _start:}{
      \use:c{_@@_style_#1_\thisstyle _start:}
    }{
      \use:c{_@@_style_#1_start:}
    }
  }
}

\cs_new_protected:Nn \_@@_apply_patch_end:n {
  \tl_if_empty:NTF \thisstyle {
    \use:c{_@@_style_#1_end:}
  }{
    \tl_if_exist:cTF{_@@_style_#1_\thisstyle _end:}{
      \use:c{_@@_style_#1_\thisstyle _end:}
    }{
      \use:c{_@@_style_#1_end:}
    }
  }
}
%    \end{macrocode}
%
% \end{macro}
%
% \begin{macro}[pTF]{\stex_str_if_ends_with:nn}
%    \begin{macrocode}
\prg_new_conditional:Nnn \stex_str_if_ends_with:nn {p,T,F,TF} {
  \exp_args:Ne \str_if_eq:nnTF {
    \str_range:nnn{#1}{- \str_count:n{#2}}{-1}
  }{#2}\prg_return_true: \prg_return_false:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[pTF]{\stex_str_if_starts_with:nn}
%    \begin{macrocode}
\prg_new_conditional:Nnn \stex_str_if_starts_with:nn {p,T,F,TF} {
  \exp_args:Ne \str_if_eq:nnTF {
    \str_range:nnn{#1}{1}{\str_count:n{#2}}
  }{#2}\prg_return_true: \prg_return_false:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[EXP]{\stex_macro_body:N}
%    \begin{macrocode}
\cs_new:Npn \_@@_start:#1\_@@_end: {\exp_not:n{#1}}
\cs_new_protected:Nn \_@@_end: {}
\cs_new:Nn \stex_macro_body:N {
  \exp_args:Nne\use:nn{\exp_after:wN \_@@_start: #1}{
    \_@@_args:e {\cs_parameter_spec:N #1}\_@@_end:
  }
}

\cs_new:Nn \_@@_args:n {
  \tl_if_empty:nF{#1}{
      {##\exp_args:Ne \tl_head:n {\tl_tail:n {#1}}}
      \_@@_args:e {\exp_args:Ne\tl_tail:n{\tl_tail:n{#1}}}
  }
}
\cs_generate_variant:Nn \_@@_args:n {e}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[EXP]{\stex_macro_definition:N}
%    \begin{macrocode}
\cs_new:Nn \stex_macro_definition:N {
  \_@@_prefix:e {\cs_prefix_spec:N #1}
  \def\exp_not:N #1
  \_@@_params:e {\cs_parameter_spec:N #1} 
  {
    \stex_macro_body:N #1
  }
}

\cs_new:Nn \_@@_prefix:n {
  \tl_if_empty:nF{#1}{
    \str_if_eq:eeTF {
      \tl_range:nnn{#1}{1}{10}~
    }{\tl_to_str:n{\protected}}{
      \protected
      \_@@_prefix_long:e {
          \str_range:nnn{#1}{11}{-1}
      }
    }{
      \_@@_prefix_long:n {#1}
    }
  }
}
\cs_generate_variant:Nn \_@@_prefix:n {e}

\cs_new:Nn \_@@_prefix_long:n {
  \tl_if_empty:nF{#1}{
    \str_if_eq:eeT {
      \tl_range:nnn{#1}{1}{10}~
    }{\tl_to_str:n{\long}}{\long}
  }
}
\cs_generate_variant:Nn \_@@_prefix_long:n {e}

\cs_new:Nn \_@@_params:n {
  \tl_if_empty:nF{#1}{
    \exp_args:NNe \str_if_eq:VnTF \c_hash_str {\tl_head:n{#1}}{
      ####
    }{
      \tl_head:n{#1}
    }
    \_@@_params:e {\tl_tail:n{#1}}
  }
}
\cs_generate_variant:Nn \_@@_params:n {e}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Persistence}
%    \begin{macrocode}
%<@@=stex_persist>
%    \end{macrocode}
%
% We check the environment variables:
%    \begin{macrocode}
\stex_get_env:Nn\_@@_env_str{STEX_USEDEPS}
\str_if_empty:NF\_@@_env_str{
  \exp_args:No \str_if_eq:nnF \_@@_env_str{false}{
    \bool_set_true:N \c_stex_persist_mode_bool
  }
}
%    \end{macrocode}
%
% \begin{macro}{\stex_persist_deps:nn,\stex_persist_deps:ox,\stex_persist:n,\stex_persist:o,\stex_persist:x}
%    \begin{macrocode}
\str_set:Nx \c_stex_mdfive_str {\pdfmdfivesum file{stex.sty}}

\cs_new_protected:Npn \stex_persist_deps:nn {
  \_stex_persist:Nnn \c_@@_deps_iow
}
\cs_generate_variant:Nn \stex_persist_deps:nn {ox}

\cs_new_protected:Npn \stex_persist:n {
  \stex_if_smsmode:TF{
    \exp_args:NNe \_stex_persist:Nnn \c_@@_deps_iow
  }{
    \tl_if_eq:NNTF \g_stex_current_file \c_stex_main_file {
      \exp_args:NNe \_stex_persist:Nnn \c_@@_sms_iow
    }\use_none:nn
  }
  {\stex_file_use:N \g_stex_current_file}
}
\cs_generate_variant:Nn \stex_persist:n {o,x}

\cs_new_protected:Nn \_stex_persist:Nnn{\stex_if_html_backend:F{
  %\_@@_prepare:n{#3}
  \exp_args:NNe \iow_now:Nn #1 {
    \_@@_check:nnnw {#2}{\pdfmdfivesum file{#2}}
    {\c_stex_mdfive_str}\exp_not:n{#3}\_@@_check_end:%{\exp_args:No \exp_not:n \l_@@_tl}
  }
}}

\cs_new_protected:Nn \_@@_check_end: {}
\cs_new_protected:Npn \_@@_check:nnnw #1 #2 #3 {
  \stex_debug:nn{persist}{restoring~from~#1}
  \file_if_exist:nTF {#1}{
    \exp_args:Ne \str_if_eq:nnTF{\pdfmdfivesum file{#1}}{#2}{
      \exp_args:No \str_if_eq:nnTF \c_stex_mdfive_str {#3}{
        \_@@_use:nnnw
      }{
        \stex_debug:nn{persist}{outdated~stex.sty}
        \_@@_maybe_not:nnn
      }
    }{
      \stex_debug:nn{persist}{md5~mismatch.~Not~used}
      \_@@_maybe_not:nnn
    }
  }{
    \stex_debug:nn{persist}{file~not~found}
    \_@@_maybe_not:nnn
  }{#1}{#2}{#3}
}

\cs_new_protected:Npn \_@@_use:nnnw #1 #2 #3 {
  %\tl_if_empty:nF {#4}{
    %\_@@_prepare:n{#4}
    \cs_set:Npn \_@@_check_end: {
      \cs_set_protected:Npn \_@@_check_end: {}
      \iow_now:Nn \c_@@_deps_iow \_@@_check_end:
    }
    \iow_now:Nn \c_@@_deps_iow {
      \_@@_check:nnnw {#1}{#2}{#3}
    }
  %}
}

\cs_new_protected:Nn \_@@_maybe_not:nnn {
  \bool_if:NTF \c_stex_persist_mode_bool {
    \_@@_use:nnnw{#1}{#2}{#3}
  } \_@@_not:
}
\cs_new_protected:Npn \_@@_not: #1 \_@@_check_end: {}

\iow_new:N \c_@@_deps_iow
\iow_new:N \c_@@_sms_iow

\bool_set_false:N \l_stex_in_persist_bool
%    \end{macrocode}
% \end{macro}
%
% Is called at the end of the |.sty|-file:
%
%    \begin{macrocode}
\cs_new:Nn \_stex_persist_read_now: {
  \seq_if_empty:NT \g_stex_current_file {
    \seq_gset_eq:NN \g_stex_current_file \c_stex_main_file
  }
  \file_if_exist:nTF{\jobname.deps}{
    \group_begin:
      \ior_new:N \l_@@_ior
      \ior_open:Nn \l_@@_ior {\jobname.deps}
      \iow_open:Nn \c_@@_sms_iow {\jobname.sms}
      \ior_str_map_inline:Nn \l_@@_ior {
        \iow_now:Nn \c_@@_sms_iow {##1}
      }
      \iow_close:N \c_@@_sms_iow
      \ior_close:N \l_@@_ior
    \group_end:
  
    \iow_open:Nn \c_@@_deps_iow {\jobname.deps}
  
    \group_begin:
      \stex_debug:nn{persist}{restoring~from~deps~file}
      \protected\def\persist:n{\iow_now:Nn \c_@@_deps_iow}
      \catcode`\ =10\relax
      \bool_set_true:N\l_stex_in_persist_bool
      \cs:w @ @ input \cs_end:\jobname.sms\relax
    \group_end:
    \iow_open:Nn \c_@@_sms_iow {\jobname.sms}
  }{
    \iow_open:Nn \c_@@_deps_iow {\jobname.deps}
    \iow_open:Nn \c_@@_sms_iow {\jobname.sms}
  }
  
  \AtEndDocument{
    \iow_close:N \c_@@_deps_iow
    \iow_close:N \c_@@_sms_iow
  }
}
%    \end{macrocode}
%
% \end{sfragment}
%
% \begin{sfragment}{Files, Paths and URIs}
%    \begin{macrocode}
%<@@=stex_path>
%    \end{macrocode}
%
% \begin{macro}{\stex_file_set:Nn, \stex_file_set:No, \stex_file_set:Nx}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_file_set:Nn {
  \str_if_empty:nTF {#2} { \seq_clear:N #1 }{
    \exp_args:NNno \seq_set_split:Nnn #1 / { \tl_to_str:n{#2} }
  }
}
\cs_generate_variant:Nn \stex_file_set:Nn {No, Nx}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_file_resolve:Nn, \stex_file_resolve:No, \stex_file_resolve:Nx}
%    \begin{macrocode}
\sys_if_platform_windows:TF{
  \cs_new_protected:Npn \_@@_win_take:nnw #1#2#3 \_@@_: {
    \str_set:Nn \l_@@_win_drive {#1#2}
    \str_set:Nn \l_@@_str{#3}
  }
  \cs_new_protected:Nn \stex_file_resolve:Nn {
    \str_set:Nn \l_@@_str {#2}
    \str_clear:N \l_@@_win_drive
    \exp_args:NNo \str_replace_all:Nnn \l_@@_str \c_backslash_str /
    \exp_args:Nx \tl_if_eq:nnT {\str_item:Nn \l_@@_str 2} : {
      \exp_after:wN \_@@_win_take:w \l_@@_str \_@@_:
    }
    \stex_file_set:No #1 \l_@@_str
    \_@@_canonicalize:N #1
    \str_if_empty:NF \l_@@_win_drive {
      \seq_put_left:No #1 \l_@@_win_drive
    }
    %\stex_debug:nn{files}{Set~\tl_to_str:n{#1}~to~\stex_file_use:N #1}
  }
}{
  \cs_new_protected:Nn \stex_file_resolve:Nn {
    \str_set:Nn \l_@@_str {#2}
    \stex_file_set:No #1 \l_@@_str
    \_@@_canonicalize:N #1
   % \stex_debug:nn{files}{Set~\tl_to_str:n{#1}~to~\stex_file_use:N #1}
  }
}
\cs_generate_variant:Nn \stex_file_resolve:Nn {No, Nx}

\cs_new_protected:Nn \_@@_canonicalize:N {
  \seq_if_empty:NF #1 {
    \seq_pop:NN #1 \l_@@_str
    \seq_clear:N \l_@@_seq
    \str_if_empty:NTF \l_@@_str {
      \seq_map_function:NN #1 \_@@_dodots:n
      \seq_put_left:Nn \l_@@_seq {}
    }{
      \seq_push:No #1 \l_@@_str
      \seq_map_function:NN #1 \_@@_dodots:n
    }
    \seq_set_eq:NN #1 \l_@@_seq
  }
}

\cs_new_protected:Nn \_@@_dodots:n {
  \str_if_empty:nF{#1}{
    \str_if_eq:nnF {#1} {.} {
      \str_if_eq:nnTF {#1} {..} {
        \seq_if_empty:NF \l_@@_seq {
          \seq_pop_right:NN \l_@@_seq \l_@@_str
        }
      }{
        \seq_put_right:Nn \l_@@_seq {#1}
      }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[pTF]{\stex_if_file_absolute:N}
%    \begin{macrocode}

\sys_if_platform_windows:TF {
  \prg_new_conditional:Nnn \stex_if_file_absolute:N {p, T, F, TF} {
    \seq_if_empty:NTF #1 \prg_return_false: {
      \tl_set:Nx \l_@@_maybewin_str {\seq_item:Nn #1 1}
      \exp_args:No \tl_if_empty:nTF \l_@@_maybewin \prg_return_true: {
        \exp_args:Nx \tl_if_eq:nnTF {\str_item:Nn \l_@@_maybewin 2} :
          \prg_return_true: \prg_return_false:
      }
    }
  }
}{
  \prg_new_conditional:Nnn \stex_if_file_absolute:N {p, T, F, TF} {
    \seq_if_empty:NTF #1 \prg_return_false: {
      \exp_args:Nx \tl_if_empty:nTF {\seq_item:Nn #1 1}
        \prg_return_true: \prg_return_false:
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[EXP]{\stex_file_use:N}
%    \begin{macrocode}
\cs_new:Nn \stex_file_use:N {
  \seq_use:Nn #1 /
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[TF]{\stex_if_file_starts_with:NN}
%    \begin{macrocode}
\prg_new_protected_conditional:Nnn \stex_if_file_starts_with:NN {T,F,TF} {
  \seq_set_eq:NN \l_@@_a_seq #1
  \seq_set_eq:NN \l_@@_b_seq #2
  \tl_clear:N \l_@@_return_tl
  \bool_while_do:nn{
    \bool_not_p:n{
      \bool_lazy_any_p:n{
        {\seq_if_empty_p:N \l_@@_a_seq}
        {\seq_if_empty_p:N \l_@@_b_seq}
        {\bool_not_p:n{\tl_if_empty_p:N \l_@@_return_tl}}
      }
    }
  }{
    \seq_pop_left:NN \l_@@_a_seq \l_@@_a_tl
    \seq_pop_left:NN \l_@@_b_seq \l_@@_b_tl
    \str_if_eq:NNF \l_@@_a_tl \l_@@_b_tl {
      \tl_set:Nn \l_@@_return_tl {\prg_return_false:}
    }
  }
  \tl_if_empty:NTF \l_@@_return_tl {
    \seq_if_empty:NTF \l_@@_b_seq \prg_return_true: \prg_return_false:
  } \l_@@_return_tl
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_file_split_off_ext:NN,\stex_file_split_off_lang:NN}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_file_split_off_ext:NN {
  \seq_set_eq:NN #1 #2
  \seq_pop_right:NN #1 \l_@@_str
  \seq_set_split:NnV \l_@@_seq . \l_@@_str
  \seq_pop_right:NN \l_@@_seq \l_@@_str
  \seq_put_right:Nx #1 {\seq_use:Nn \l_@@_seq .}
}
\cs_new_protected:Nn \stex_file_split_off_lang:NN {
  \seq_set_eq:NN #1 #2
  \seq_pop_right:NN #1 \l_@@_str
  \seq_set_split:NnV \l_@@_seq . \l_@@_str
  \seq_pop_right:NN \l_@@_seq \l_@@_str

  \seq_pop_right:NN \l_@@_seq \l_@@_str
  \exp_args:NNo \prop_if_in:NnF \c_stex_languages_prop \l_@@_str {
    \seq_put_right:No \l_@@_seq \l_@@_str
  }

  \seq_put_right:Nx #1 {\seq_use:Nn \l_@@_seq .}
}
%    \end{macrocode}
% \end{macro}
%
% URIs:
%
% \begin{macro}{\stex_map_uri:Nnnnn}
%    \begin{macrocode}
\cs_set_protected:Nn \_@@_auth:n {
  \msg_error:nnx{stex}{error/misused-uri}{\tl_to_str:n{#1}}
}
\cs_set_eq:NN \_@@_path:n \_@@_auth:n
\cs_set_eq:NN \_@@_module:n \_@@_auth:n
\cs_set_eq:NN \_@@_name:n \_@@_auth:n

\cs_set_protected:Nn \stex_map_uri:Nnnnn{
  \stex_pseudogroup_with:nn{\_@@_auth:n\_@@_path:n\_@@_module:n\_@@_name:n}{
    \cs_set:Npn \_@@_auth:n ##1 {#2}
    \cs_set:Npn \_@@_path:n ##1 {#3}
    \cs_set:Npn \_@@_module:n ##1 {#4}
    \cs_set:Npn \_@@_name:n ##1 {#5}
    #1
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_uri_set:Nn, \stex_uri_set:No, \stex_uri_set:Nx}
%    \begin{macrocode}
\str_set:Nx\_@@_colonslash{\c_colon_str/}
\cs_new_protected:Nn \_@@_uri_set:NnN {
  \str_if_empty:nTF {#2} {
    \msg_error:nnxx{stex}{error/invalid-uri}{\tl_to_str:n{#2}}{empty}
  }{
    \exp_args:NNNo \exp_args:NNno \seq_set_split:Nnn #1 \_@@_colonslash { \tl_to_str:n{#2} }
    \seq_pop_left:NN #1 \l_@@_auth_str
    \seq_if_empty:NTF #1 {
      \msg_error:nnxx{stex}{error/invalid-uri}{\tl_to_str:n{#2}}{missing~authority}
    }{
      \exp_args:NNnx \seq_set_split:Nnn #1 ? {\exp_args:NNo \seq_use:Nn #1 \_@@_colonslash }
      \seq_pop_left:NN #1 \l_@@_path
      #3 \l_@@_path \l_@@_path
      \seq_if_empty:NTF #1 {
        \exp_args:NNo \_@@_uri_set:Nnxnn #1 \l_@@_auth_str 
          {\stex_file_use:N \l_@@_path} {} {}
      }{
        \seq_pop_left:NN #1 \l_@@_mod
        \seq_if_empty:NTF #1 {
          \exp_args:NNo \_@@_uri_set:Nnxon #1 \l_@@_auth_str 
            {\stex_file_use:N \l_@@_path} \l_@@_mod {}
        }{
          \seq_pop_left:NN #1 \l_@@_name
          \seq_if_empty:NTF #1 {
            \exp_args:NNo \_@@_uri_set:Nnxon #2 \l_@@_auth_str 
              {\stex_file_use:N \l_@@_path} \l_@@_mod \l_@@_name
          }{
            \msg_error:nnxx{stex}{error/invalid-uri}{\tl_to_str:n{#2}}{too~many~?s}
          }
        }
      }
    }
  }
  \stex_debug:nn{uris}{Set~\tl_to_str:n{#1}~to~\stex_uri_use:N #1}
}

\cs_new_protected:Nn \_@@_uri_set:Nnnnn{
  \tl_set:Nn #1 {
    \_@@_auth:n{ #2 }
    \_@@_path:n{ #3 }
    \_@@_module:n{ #4 }
    \_@@_name:n{ #5 }
  }
}
\cs_generate_variant:Nn\_@@_uri_set:Nnnnn {Nnxnn,Nnxon,Nnxoo}

\cs_new_protected:Nn \stex_uri_set:Nn {
  \_@@_uri_set:NnN #1 {#2} \stex_file_set:No
}
\cs_generate_variant:Nn \stex_uri_set:Nn {No, Nx}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_uri_resolve:Nn, \stex_uri_resolve:No, \stex_uri_resolve:Nx}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_uri_resolve:Nn {
  \_@@_uri_set:NnN #1 {#2} \stex_file_resolve:No
}
\cs_generate_variant:Nn \stex_uri_resolve:Nn {No, Nx}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[EXP]{\stex_uri_use:N}
%    \begin{macrocode}
\cs_new:Npn \_@@_uri_use:w \_@@_auth:n #1 \_@@_path:n #2 \_@@_module:n #3 \_@@_name:n #4 {
  #1\c_colon_str/ #2 \tl_if_empty:nF { #3 }{ ? #3 
    \tl_if_empty:nF { #4 }{ ? #4 } }
}
\cs_new:Nn \stex_uri_use:N {
  \exp_args:Ne \cs_if_eq:NNTF { \tl_head:N #1 } \_@@_auth:n {
    \exp_after:wN \_@@_uri_use:w #1
  }{
    \msg_error:nnnn{stex}{error/invalid-uri}{#1}{Not~a~URI}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_uri_from_repo_file:NNNn, \stex_uri_from_repo_file_nolang:NNNn}
%    \begin{macrocode}
\cs_new_protected:Npn \stex_uri_from_repo_file_nolang:NNNn {
  \_@@_from_repo_file:NNNNn \stex_file_split_off_lang:NN
}
\cs_new_protected:Npn \stex_uri_from_repo_file:NNNn {
  \_@@_from_repo_file:NNNNn \stex_file_split_off_ext:NN
}

\cs_new_protected:Nn \_@@_from_repo_file:NNNNn {
  #1 \l_@@_file #4
  \prop_if_exist:NTF #3 {
    \str_clear:N \l_@@_uri
    \prop_get:NnNF #3 {#5} \l_@@_uri {
      \prop_get:NnNF #3 {ns} \l_@@_uri {
        \_@@_uri_set:Nnxnn #2 {file} 
          {\stex_file_use:N \l_@@_file} {} {}
      }
    }
    \str_if_empty:NF \l_@@_uri {\_@@_relativize:N #2}
  }{
    \exp_args:NNx \_@@_uri_set:Nnxnn #2 {\tl_to_str:n{file}} 
      {\stex_file_use:N \l_@@_file} {} {}
  }
}

\cs_new_protected:Nn \_@@_relativize:N {
  \seq_set_eq:NN \l_@@_seq \l_@@_file 
  \seq_map_inline:Nn \c_stex_mathhub_file { % mathhub path
    \seq_pop_left:NN \l_@@_seq \l_@@_tl
  }
  \stex_file_set:Nx \l_@@_path {\prop_item:Nn \l_stex_current_archive_prop {id} }
  \seq_map_inline:Nn \l_@@_path { % id
    \seq_pop_left:NN \l_@@_seq \l_@@_tl
  }
  \seq_pop_left:NN \l_@@_seq \l_@@_tl % source

  \stex_uri_set:Nx #1 { \l_@@_uri / \stex_file_use:N \l_@@_seq }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_uri_from_current_file:Nn, \stex_uri_from_current_file_nolang:Nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_uri_from_current_file:Nn {
  \stex_uri_from_repo_file:NNNn #1 \l_stex_current_archive_prop
    \g_stex_current_file {#2}
}
\cs_new_protected:Nn \stex_uri_from_current_file_nolang:Nn {
  \stex_uri_from_repo_file_nolang:NNNn #1 \l_stex_current_archive_prop
    \g_stex_current_file {#2}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_uri_add_module:NNn, \stex_uri_add_module:NNo}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_uri_add_module:NNn {
  \exp_args:Ne \cs_if_eq:NNTF { \tl_head:N #2 } \_@@_auth:n {
    \stex_pseudogroup_with:nn
      {\_@@_auth:n\_@@_path:n\_@@_module:n\_@@_name:n}
      {
        \cs_set:Npn \_@@_module:n ##1 {
          \tl_if_empty:nTF{##1}{
            \exp_not:N \_@@_module:n {#3}
          }{
            \msg_error:nnn{stex}{error/invalid-dpath}{#2}
          }
        }
        \cs_set:Npn \_@@_name:n ##1 {
          \tl_if_empty:nTF{##1}{
            \exp_not:N \_@@_name:n {}
          }{
            \msg_error:nnn{stex}{error/invalid-dpath}{#2}
          }
        }
        \tl_set:Nx #1 {#2}
      }
  }{
    \msg_error:nnnn{stex}{error/invalid-uri}{#2}{Not~a~URI}
  }
}
\cs_generate_variant:Nn \stex_uri_add_module:NNn {NNo}
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{\l_stex_current_doc_uri}
%    \begin{macrocode}
\tl_new:N \l_stex_current_doc_uri
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\stex_set_document_uri:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_set_document_uri: {
  \stex_uri_from_current_file:Nn \l_stex_current_doc_uri {narr}
  %\stex_debug:nn{sref}{Document~URI:~\stex_uri_use:N \l_stex_current_doc_uri}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_set_current_namespace:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_set_current_namespace: {
  \stex_uri_from_current_file_nolang:Nn \l_stex_current_ns_uri {source-base}
  %\stex_debug:nn{modules}{Namespace~URI:~\stex_uri_use:N \l_stex_current_ns_uri}
}
%    \end{macrocode}
% \end{macro}
%
% We determine the PWD
%
% \begin{variable}{\c_stex_pwd_file,\c_stex_main_file}
%    \begin{macrocode}
\sys_if_platform_windows:TF{
  \stex_get_env:Nn\l_@@_str{CD}
}{
  \stex_get_env:Nn\l_@@_str{PWD}
}
\stex_file_resolve:No \c_stex_pwd_file \l_@@_str
\seq_set_eq:NN \c_stex_main_file \c_stex_pwd_file
\seq_put_right:Nx \c_stex_main_file {\jobname\tl_to_str:n{.tex}}

\stex_debug:nn {files} {PWD:~\stex_file_use:N \c_stex_pwd_file}
%    \end{macrocode}
% \end{variable}
%
% \end{sfragment}
%
% \begin{sfragment}{File Hooks}
%
% keeps track of file changes:
%    \begin{macrocode}
\seq_gclear_new:N\g_@@_stack
\seq_gclear_new:N\g_stex_current_file
%    \end{macrocode}
%
% \begin{macro}{\stex_filestack_push:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_filestack_push:n {
  \exp_args:Nx \tl_if_eq:nnTF {\str_head:n{#1}} / {
    \str_set:Nn \l_@@_str {#1}
  }{
    \str_set:Nx \l_@@_str {\stex_file_use:N \c_stex_pwd_file / #1}
  }
  \stex_file_resolve:No \g_stex_current_file \l_@@_str
  \seq_gset_eq:NN \g_stex_current_file \g_stex_current_file
  \exp_args:NNx \seq_gpush:Nn \g_@@_stack {\stex_file_use:N \g_stex_current_file}
  \_stex_every_file:
}

\cs_new_protected:Nn \_stex_every_file: {  
  \stex_set_document_uri:
  \stex_language_from_file:
  \stex_set_current_namespace:
}
%\AtBeginDocument{\_stex_every_file:}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_filestack_pop:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_filestack_pop: {
  \seq_if_empty:NF \g_@@_stack {
    \seq_gpop:NN \g_@@_stack \l_@@_str
  }
  \seq_if_empty:NTF \g_@@_stack {
    \seq_gset_eq:NN \g_stex_current_file \c_stex_main_file
  }{
    \seq_get:NN \g_@@_stack \l_@@_str
    \exp_args:NNo \stex_file_set:Nn \g_stex_current_file \l_@@_str
    \seq_gset_eq:NN \g_stex_current_file \g_stex_current_file
  }
  \_stex_every_file:
}
%    \end{macrocode}
% \end{macro}

% Hooks for the current file:
%
%    \begin{macrocode}
\cs_new_protected:Nn \stex_input_with_hooks:n {
  \tl_set:Nn \l_@@_do_hooks_pre_tl {
    \tl_gset:Nn \l_@@_do_hooks_pre_tl {}
    \stex_debug:nn{HERE}{Hook~for~#1^^J\meaning\CurrentFilePath^^J\CurrentFile}
    \tl_if_empty:NTF\CurrentFilePath{
      \exp_args:No \stex_filestack_push:n \CurrentFile
    }{
      \exp_args:Ne \stex_filestack_push:n { \CurrentFilePath / \CurrentFile }
    }
  }
  \input{#1}
  \stex_debug:nn{HERE}{Hook~end~for~#1}
  \stex_filestack_pop:
}
\tl_new:N \l_@@_do_hooks_pre_tl {}

\AddToHook{file/before}{
  \l_@@_do_hooks_pre_tl
}
%\AddToHook{file/after}{ \stex_filestack_pop: }
%    \end{macrocode}
%
% \end{sfragment}
%
% \end{sfragment}
%
% \begin{sfragment}{Math Archives}
%    \begin{macrocode}
%<@@=stex_mathhub>
%    \end{macrocode}
%
% \begin{variable}{\mathhub, \c_stex_home_file,\c_stex_mathhub_file}
% The path to the mathhub directory. If the \cs{mathhub}-macro is not set,
% we query |kpsewhich| for the |MATHHUB| system variable.
%    \begin{macrocode}

\sys_if_platform_windows:TF{
  \stex_get_env:Nn \l_@@_str {homedrive\c_percent_str\c_percent_str homepath}
}{
  \stex_get_env:Nn \l_@@_str {HOME}
}
\stex_file_resolve:No \c_stex_home_file \l_@@_str

\str_if_empty:NTF\mathhub{
  \stex_get_env:Nn \l_@@_str {MATHHUB}
  \str_if_empty:NTF \l_@@_str {
    \ior_open:NnTF \g_tmpa_ior{\stex_file_use:N \c_stex_home_file/.stex/mathhub.path}{
      \group_begin:
        \escapechar=-1\catcode`\\=12
        \ior_str_get:NN \g_tmpa_ior \l_@@_str
        \str_gset_eq:NN \l_@@_str \l_@@_str
      \group_end:
      \ior_close:N \g_tmpa_ior
      \stex_debug:nn{mathhub}{MathHub~directory~determined~from~home~directory}
    }{
      \str_clear:N \l_@@_str
    }
  }{
    \stex_debug:nn{mathhub}{MathHub~directory~determined~from~environment~variable}
  }
}{
  \str_set_eq:NN \l_@@_str \mathhub
}

\str_if_empty:NTF \l_@@_str {
  \msg_warning:nn{stex}{warning/nomathhub}
  \exp_args:NNe \stex_file_set:Nn \c_stex_mathhub_file {\stex_file_use:N \c_stex_home_file \tl_to_str:n{/MathHub}}
  \seq_clear:N \c_stex_mathhub_file
}{
  \stex_file_resolve:No \c_stex_mathhub_file \l_@@_str
  \stex_if_file_absolute:NF \c_stex_mathhub_file {
    \exp_args:NNe \stex_file_resolve:Nn \c_stex_mathhub_file {
      \stex_file_use:N \c_stex_main_file / .. / \l_@@_str
    }
  }
}

\exp_args:NNe \str_set:Nn \mathhub {\stex_file_use:N \c_stex_mathhub_file}
\stex_debug:nn{mathhub}{MATHHUB:~\mathhub}
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\l_stex_current_archive}
% \begin{macro}{\stex_set_current_archive:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_set_current_archive:n {
  \stex_require_archive:n { #1 }
  \stex_debug:nn{mathhub}{switching~to~archive~#1}
  \prop_set_eq:Nc \l_stex_current_archive_prop { 
    c_stex_mathhub_#1_manifest_prop 
  }
}
%    \end{macrocode}
% \end{macro}
% \end{variable}
%
% \begin{macro}{\stex_in_archive:nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_in_archive:nn {
  \cs_if_exist:NF \l_@@_cs {
    \cs_set:Npn \l_@@_cs ##1 {}
  }
  \stex_pseudogroup:nn{
    \cs_set:Npn \l_@@_cs ##1 {#2}
    \tl_if_empty:nTF{#1}{
      \prop_if_exist:NTF \l_stex_current_archive_prop {
        \exp_args:Ne \l_@@_cs {\prop_item:Nn \l_stex_current_archive_prop { id } }
      }{
        \l_@@_cs {}
      }
    }{
      \stex_set_current_archive:n{#1}
      \l_@@_cs {#1}
    }
  }{
    \stex_pseudogroup_restore:N \l_stex_current_archive_prop
    \cs_set:Npn \exp_not:N \l_@@_cs ##1 {
      \exp_args:No \exp_not:n {\l_@@_cs {##1}}
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_require_archive:n,\stex_require_archive:o}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_require_archive:n {
  \prop_if_exist:cF { c_stex_mathhub_#1_manifest_prop } {
    \seq_if_empty:NTF \c_stex_mathhub_file {
      \stex_fatal_error:n{warning/nomathhub}
    }{
      \stex_debug:nn{mathhub}{Opening~archive:~#1}
      \_@@_do_manifest:n { #1 }
    }
  }
}
\cs_generate_variant:Nn \stex_require_archive:n {o}
%    \end{macrocode}
% \end{macro}
%
% Code for finding and parsing manifest files:
%
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_do_manifest:n {
  \exp_args:Ne \_@@_find_manifest:n {\stex_file_use:N \c_stex_mathhub_file / #1}
  \str_if_empty:NT \l_@@_manifest_str {
    \stex_fatal_error:nxx{error/noarchive}
      {#1}{\stex_file_use:N \c_stex_mathhub_file}
  }
  \_@@_parse_manifest:n {#1}
}

\cs_new_protected:Nn \_@@_find_manifest:n {
  \str_clear:N \l_@@_manifest_str 
  \seq_set_split:Nnn \l_@@_seq / {#1}
  \bool_set_true:N \l_@@_bool
  \bool_while_do:Nn \l_@@_bool {
    \tl_if_eq:NNTF \l_@@_seq \c_stex_mathhub_file {
      \bool_set_false:N \l_@@_bool
    }{
      \_@@_check_manifest:
      \bool_if:NT \l_@@_bool {
        \seq_pop_right:NN \l_@@_seq \l_@@_tl
      }
    }
  }
}
\cs_generate_variant:Nn \_@@_find_manifest:n {x}

\cs_new_protected:Nn \_@@_check_manifest: {
  \_@@_check_manifest:n {MANIFEST.MF}
  \bool_if:NT \l_@@_bool {
    \_@@_check_manifest:n {META-INF/MANIFEST.MF}
    \bool_if:NT \l_@@_bool {
      \_@@_check_manifest:n {meta-inf/MANIFEST.MF}
    }
  }
}

\cs_new_protected:Nn \_@@_check_manifest:n {
  \stex_debug:nn{mathhub}{Checking~\stex_file_use:N \l_@@_seq / #1}
  \file_if_exist:nT {\stex_file_use:N \l_@@_seq / #1} {
    \bool_set_false:N \l_@@_bool
    \str_set:Nx \l_@@_manifest_str {\stex_file_use:N \l_@@_seq / #1}
  }
}

\ior_new:N \c_@@_manifest_ior
\cs_new_protected:Nn \_@@_parse_manifest:n {
  \ior_open:Nn \c_@@_manifest_ior \l_@@_manifest_str
  \prop_clear:N \l_@@_prop
  \ior_map_inline:Nn \c_@@_manifest_ior {
    \exp_args:NNNo \exp_args:NNNx 
      \seq_set_split:Nnn \l_@@_seq \c_colon_str {\tl_to_str:n{##1}}
    \seq_pop_left:NNT \l_@@_seq \l_@@_key {
      \exp_args:NNo \str_set:Nn \l_@@_key \l_@@_key
      \str_set:Nx \l_@@_val {\seq_use:Nn \l_@@_seq :}
      \str_case:Nn \l_@@_key {
        {id}              {\prop_put:Nno \l_@@_prop { id }      \l_@@_val }
        {narration-base}  {\prop_put:Nno \l_@@_prop { narr }    \l_@@_val }
        {url-base}        {\prop_put:Nno \l_@@_prop { docurl }  \l_@@_val }
        {source-base}     {\prop_put:Nno \l_@@_prop { ns }      \l_@@_val }
        {ns}              {\prop_put:Nno \l_@@_prop { ns }      \l_@@_val }
      }
    }
  }
  \ior_close:N \c_@@_manifest_ior
  \prop_gset_eq:cN { c_stex_mathhub_#1_manifest_prop } \l_@@_prop
  \stex_debug:nn{mathhub}{Result:~\prop_to_keyval:N \l_@@_prop}
  \stex_persist_deps:ox \l_@@_manifest_str {
    \_@@_restore_manifest:nnn{#1}{
      \prop_map_tokens:Nn\l_@@_prop{}
    }{\l_@@_manifest_str}
  }
}

\cs_new_protected:Nn \_@@_restore_manifest:nnn {
  \prop_clear:c{c_stex_mathhub_\tl_to_str:n{#1}_manifest_prop}
  \cs_set_protected:Npn \_@@_restore_manifest: ##1 ##2 ##3 \_@@_end: {
    \exp_args:NNe\use:nn\prop_put:cnn{
      {c_stex_mathhub_\tl_to_str:n{#1}_manifest_prop}
      {\tl_to_str:n{##1}}{\tl_to_str:n{##2}}
    }
    \tl_if_empty:nF{##3}{
      \_@@_restore_manifest: ##3 \_@@_end:
    }
  }
  \_@@_restore_manifest: #2 \_@@_end:
  \bool_if:NT \l_stex_in_persist_bool {
    \persist:n{
      \_@@_restore_manifest:nnn{#1}{#2}{#3}
    }
  }
}
%    \end{macrocode}
%
% Current MathHub archive
% \begin{variable}{\c_stex_main_archive_prop, \l_stex_current_archive_prop}
%    \begin{macrocode}
\bool_if:NF \c_stex_persist_mode_bool {
  \stex_if_file_starts_with:NNTF \c_stex_pwd_file \c_stex_mathhub_file {
    \_@@_find_manifest:x { \stex_file_use:N \c_stex_pwd_file }
    \str_if_empty:NTF \l_@@_manifest_str {
      \stex_debug:nn{mathhub}{Not~currently~in~a~MathHub~archive}
    }{
      \_@@_parse_manifest:n { main }
      \prop_set_eq:NN \c_stex_main_archive_prop \c_stex_mathhub_main_manifest_prop
      \cs_undefine:N \c_stex_mathhub_main_manifest_prop
      \prop_get:NnN \c_stex_main_archive_prop {id} 
        \l_@@_str
      \prop_set_eq:cN { c_stex_mathhub_\l_@@_str _manifest_prop }
        \c_stex_main_archive_prop
      \exp_args:No \stex_set_current_archive:n { \l_@@_str }
      \stex_debug:nn{mathhub}{Current~archive:~
        \prop_item:Nn \l_stex_current_archive_prop {id}
      }
    }
  }{
    \stex_debug:nn{mathhub}{Not~currently~in~the~MathHub~directory}
  }
}
%    \end{macrocode}
% \end{variable}
%
% \end{sfragment}
%
% \begin{sfragment}{Documents}
%
% \begin{sfragment}{Title}
%
% Stores the title, if it exists:
%    \begin{macrocode}
%<@@=stex_doc>
\tl_new:N \g_@@_title_tl
%    \end{macrocode}
%
% \begin{macro}{\stexdoctitle}
% Initital definition, will be changed at begin document:
%    \begin{macrocode}
\cs_new_protected:Npn \stexdoctitle #1 {
  \tl_gset:Nn \g_@@_title_tl { #1 }
  \global\def\stexdoctitle##1{}
}
%    \end{macrocode}
% At begin document, we switch to:
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_set_title:n {
  \global\def\stexdoctitle##1{}
  \tl_gset:Nn \g_@@_title_tl { #1 }
  \_@@_title_html:
}
%    \end{macrocode}
% Hooks, changes and HTML:
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_title_html: {
  \stex_if_do_html:T{\stex_if_html_backend:T{
    \stex_annotate_invisible:nn{shtml:doctitle={}}{ \g_@@_title_tl }
  }}
}

\AtBeginDocument {
  \tl_if_empty:NTF \g_@@_title_tl {
    \cs_set_eq:NN \stexdoctitle \_@@_set_title:n
  }{
    \global\def\stexdoctitle#1{}
    \_@@_title_html:
  }

  \cs_set_eq:NN \_@@_maketitle: \maketitle
  \global\protected\def\maketitle{
    \tl_if_empty:NF \@title {
      \exp_args:No \stexdoctitle \@title
    }
    \_@@_maketitle:
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Sectioning}
%    \begin{macrocode}
\int_new:N \l_stex_docheader_sect

\cs_new_protected:Nn \_@@_do_level:nn {
  \stexdoctitle{#2}
  \tl_if_empty:NTF \l_stex_key_short_tl {
    \use:c{#1}
  }{
    \use:c{#1}[\l_stex_key_short_tl]
  }{#2}
  \int_incr:N \l_stex_docheader_sect
  \tl_set:Nn \currentsectionlevel{#1}
}

\cs_new_protected:Npn \_@@_do_section:n {
  \int_case:nnF \l_stex_docheader_sect {
    {0}{\cs_if_exist:NTF \part {\_@@_do_level:nn{part}}{
      \int_incr:N \l_stex_docheader_sect
      \_@@_do_section:n 
    }}
    {1}{\cs_if_exist:NTF \chapter {\_@@_do_level:nn{chapter}}{
      \int_incr:N \l_stex_docheader_sect
      \_@@_do_section:n
    }}
    {2}{\_@@_do_level:nn{section}}
    {3}{\_@@_do_level:nn{subsection}}
    {4}{\_@@_do_level:nn{subsubsection}}
    {5}{\_@@_do_level:nn{paragraph}}
  }{\_@@_do_level:nn{subparagraph}}
}


\cs_new_protected:Nn \_@@_skip_section: {
  \int_case:nn \l_stex_docheader_sect {
    {0}{\cs_if_exist:NF \part {
      \int_incr:N \l_stex_docheader_sect \_@@_skip_section:
    }}
    {1}{\cs_if_exist:NF \chapter {
      \int_incr:N \l_stex_docheader_sect \_@@_skip_section:
    }}
  }
  \int_incr:N \l_stex_docheader_sect
}

\stex_keys_define:nnnn{ sfragment }{
  \tl_clear:N \l_stex_key_short_tl
}{
  short   .tl_set:N   = \l_stex_key_short_tl
}{id}

\NewDocumentEnvironment{sfragment}{ O{} m}{
  \stex_keys_set:nn{sfragment}{#1}
  \_@@_do_section:n{#2}
  \_stex_do_id:
}{}

%\int_incr:N \l_stex_docheader_sect
\NewDocumentEnvironment{blindfragment}{}{
  \_@@_skip_section:
}{
}
%    \end{macrocode}
%
% \begin{macro}{\setsectionlevel}
%    \begin{macrocode}
\cs_new_protected:Npn \setsectionlevel #1 {
  \str_case:nnF{#1}{
    {part}{\int_set:Nn \l_stex_docheader_sect 0}
    {chapter}{\int_set:Nn \l_stex_docheader_sect 1}
    {section}{\int_set:Nn \l_stex_docheader_sect 2}
    {subsection}{\int_set:Nn \l_stex_docheader_sect 3}
    {subsubsection}{\int_set:Nn \l_stex_docheader_sect 4}
    {paragraph}{\int_set:Nn \l_stex_docheader_sect 5}
  }{
    \int_set:Nn \l_stex_docheader_sect 6
  }
}
%    \end{macrocode}
% \end{macro}
% \end{sfragment}
%
%
% \begin{sfragment}{References}
%    \begin{macrocode}
%<@@=stex_refs>
%    \end{macrocode}
%
% References are stored in the file |\jobname.sref|, to enable
% cross-referencing external documents.
%    \begin{macrocode}
\iow_new:N \c_@@_iow
\AtBeginDocument{\iow_open:Nn \c_@@_iow {\jobname.sref}}
\AtEndDocument{\iow_close:N \c_@@_iow}
%    \end{macrocode}
%
% The following macros are written to the |.aux|-file, and hence
% use \LaTeX2e character code scheme:
%
%    \begin{macrocode}
\cs_new_protected:Npn \STEXInternalAuxAddDocRef #1 #2 {
  \_@@_add_doc_ref:xx{\tl_to_str:n{#1}}{\tl_to_str:n{#2}}
}

\cs_new_protected:Npn \STEXInternalSrefRestoreTarget #1#2#3#4#5 {}

\cs_new_protected:Npn \STEXInternalSetSrefSymURL #1 #2 {
  \bool_gset_false:c{g_stex_sref_sym_\tl_to_str:n{#1}_ref}
  \str_gset:cn{g_stex_sref_sym_\tl_to_str:n{#1}_target}{#2}
}

\cs_new_protected:Npn \STEXInternalSetSrefSymLabel #1 {
  \bool_gset_true:c{g_stex_sref_sym_\tl_to_str:n{#1}_ref}
}
%    \end{macrocode}
%
% \begin{macro}{\stex_ref_new_doc_target:n,\sreflabel}
%    \begin{macrocode}
\seq_new:N \g_@@_files_seq
\int_new:N \l_@@_unnamed_counter_int

\cs_new_protected:Nn \stex_ref_new_doc_target:n {
  \str_if_empty:nTF {#1}{
    \int_gincr:N \l_@@_unnamed_counter_int
    \str_set:Nx \l_@@_str {REF\int_use:N \l_@@_unnamed_counter_int}
  }{
    \str_set:Nn \l_@@_str {#1}
  }
  \stex_uri_add_module:NNo \l_@@_uri \l_stex_current_doc_uri \l_@@_str
  \stex_debug:nn{sref}{New~document~target:~\stex_uri_use:N \l_@@_uri}
  \_@@_add_doc_ref:xo {\stex_uri_use:N \l_stex_current_doc_uri} \l_@@_str
  \stex_if_smsmode:F {
    \iow_now:Nx \c_@@_iow {
      \STEXInternalSrefRestoreTarget
      {\stex_uri_use:N \l_stex_current_doc_uri}
      {\l_@@_str}
      {\@currentcounter}
      {\@currentlabel}
      {
        \tl_if_exist:NT\@currentlabelname{
          \exp_args:No\exp_not:n\@currentlabelname
        }
      }
    }
    \exp_args:Nx\label{sref_ \stex_uri_use:N \l_@@_uri}
    \iow_now:Nx\@auxout{
      \STEXInternalAuxAddDocRef
      {\stex_uri_use:N \l_stex_current_doc_uri}
      {\l_@@_str}
    }
  }
}
\NewDocumentCommand \sreflabel {m} {\stex_ref_new_doc_target:n {#1}}

\cs_new_protected:Nn \_@@_add_doc_ref:nn {
  \seq_if_in:NnTF \g_@@_files_seq {#1} {
    \seq_if_in:cnF {g_@@_#1_seq}{#2}{
      \seq_gput_left:cn{g_@@_#1_seq}{#2}
    }
  }{
    \seq_gput_right:Nn \g_@@_files_seq {#1}
    \seq_new:c{g_@@_#1_seq}
    \seq_gput_left:cn{g_@@_#1_seq}{#2}
  }
}
\cs_generate_variant:Nn \_@@_add_doc_ref:nn {xo,xx}

\AtEndDocument{
  \cs_set:Npn \STEXInternalAuxAddDocRef #1 #2 {}
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\sref,\extref}
% Optional arguments:
%    \begin{macrocode}
\stex_keys_define:nnnn{sref / 1}{}{
  % TODO get rid of this
  fallback  .code:n = {},
  pre       .code:n = {},
  post      .code:n = {}
}{archive file}
\stex_keys_define:nnnn{sref / 2}{}{}{archive file, title}
%    \end{macrocode}
%
% Auxiliary methods:
%
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_find_uri:n {
  \str_clear:N \l_@@_uri_str
  \stex_debug:nn{sref}{
    File:~\l_stex_key_file_str^^J
    Repo:\l_stex_key_archive_str
  }
  \str_if_empty:NTF \l_stex_key_file_str {
    \stex_debug:nn{sref}{Empty.~Checking~current~file~for~#1}
    \seq_if_exist:cT{g_@@_\stex_uri_use:N \l_stex_current_doc_uri _seq}{
      \exp_args:Nnx \_@@_find_uri_in_file:nnn{#1}
        {\stex_uri_use:N \l_stex_current_doc_uri}\seq_map_break:
    }
    \str_if_empty:NT \l_@@_uri_str {
      \seq_map_inline:Nn \g_@@_files_seq {
        \_@@_find_uri_in_file:nnn{#1}{##1}{\seq_map_break:n{\seq_map_break:}}
      }
    }
  }{
    \str_if_empty:NTF \l_stex_key_archive_str {
      \prop_if_exist:NTF \l_stex_current_archive_prop {
        \_@@_find_uri_in_prop_file:N \l_stex_current_archive_prop
      }{
        \stex_file_resolve:Nx \l_@@_file 
          { \stex_file_use:N \g_stex_current_file / .. / \l_stex_key_file_str }
        \str_set:Nx \l_@@_uri_str { file:/ \stex_file_use:N \l_@@_file }
      }
    }{
      \stex_require_archive:o \l_stex_key_archive_str
      \prop_set_eq:Nc \l_@@_prop { c_stex_mathhub_\l_stex_key_archive_str _manifest_prop }
      \_@@_find_uri_in_prop_file:N \l_@@_prop
    }
  }
}

\cs_new_protected:Nn \_@@_find_uri_in_prop_file:N {
  \str_set:Nx \l_@@_uri_str {
    \stex_file_use:N \c_stex_mathhub_file / 
    \prop_item:Nn #1 {id} /
      source / \l_stex_key_file_str
  }
  \stex_file_resolve:No \l_@@_file \l_@@_uri_str
  \stex_uri_from_repo_file:NNNn \l_@@_uri #1
    \l_@@_file {narr}
  \str_set:Nx \l_@@_uri_str {\stex_uri_use:N \l_@@_uri}
}

\cs_new_protected:Nn \_@@_find_uri_in_file:nnn {
  \stex_debug:nn{sref}{Checking~file~#2}
  \seq_map_inline:cn{g_@@_#2_seq}{
    \str_if_eq:nnT{#1}{##1}{
      \str_set:Nx \l_@@_uri_str {\stex_uri_use:N \l_stex_current_doc_uri}
      \stex_debug:nn{sref}{Found.}
      #3
    }
  }
}
%    \end{macrocode}
% Doing the actual referencing:
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_do_autoref:n {
  \cs_if_exist:cTF{autoref}{
     \exp_args:Nx\autoref{sref_#1}
   }{
     \exp_args:Nx\ref{sref_#1}
   }
}

\cs_new_protected:Nn \_@@_do_sref:nn {
  \str_if_empty:NTF \l_@@_uri_str {
    \str_if_empty:NTF \l_stex_key_file_str {
      \stex_debug:nn{sref}{autoref~on~#1}
      \_@@_do_autoref:n{#1}
    }{
      \stex_debug:nn{sref}{srefin~on~#1}
      \stex_keys_set:nn { sref / 2 }{ #2 }
      \_@@_do_sref_in:n{#1}
    }
  }{
    \exp_args:NNo \seq_if_in:NnTF \g_@@_files_seq \l_@@_uri_str {
      \stex_debug:nn{sref}{Using~ref~file~\l_@@_uri_str}
      \exp_args:Nnx \seq_if_in:cnTF{g_stex_ref_\l_@@_uri_str _seq}{\detokenize{#1}}{
        \stex_debug:nn{sref}{Reference~found~in~ref~files;~autoref~on~\l_@@_uri_str?#1}
        \_@@_do_autoref:n{\l_@@_uri_str?#1}
      }{
        \str_if_empty:NTF \l_stex_key_file_str {
          \stex_debug:nn{sref}{in~empty;~autoref~on~\l_@@_uri_str?#1}
          \_@@_do_autoref:n{\l_@@_uri_str?#1}
        }{
          \stex_debug:nn{sref}{in~non-empty;~srefin~on~\l_@@_uri_str?#1}
          \stex_keys_set:nn { sref / 2 }{ #2 }
          \_@@_do_sref_in:n{#1}
        }
      }
    }{
      \stex_debug:nn{sref}{No~ref~file~found~for~\l_@@_uri_str}
      \str_if_empty:NTF \l_stex_key_file_str {
        \stex_debug:nn{sref}{in~empty;~autoref~on~\l_@@_uri_str?#1}
        \_@@_do_autoref:n{\l_@@_uri_str?#1}
      }{
        \stex_debug:nn{sref}{in~non-empty;~srefin~on~\l_@@_uri_str?#1}
        \stex_keys_set:nn { sref / 2 }{ #2 }
        \_@@_do_sref_in:n{#1}
      }
    }
  }
}

\cs_new_protected:Nn \_@@_do_sref_in:n {
  \stex_debug:nn{sref}{In: \l_stex_key_file_str^^JRepo:\l_stex_key_archive_str}
  \stex_debug:nn{sref}{URI: \l_@@_uri_str?#1}
  %\msg_warning:nnn{stex}{warning/smsmissing}{<filename>}
  \group_begin:\catcode13=9\relax\catcode10=9\relax
    \str_if_empty:NTF \l_stex_key_archive_str {
      \prop_if_exist:NTF \l_stex_current_archive_prop {
        \str_set:Nx \l_@@_file_str {
          \stex_file_use:N \c_stex_mathhub_file /
          \prop_item:Nn \l_stex_current_archive_prop { id }
          / source / \l_stex_key_file_str .sref
        }
      }{
        \str_set:Nx \l_@@_file_str {
          \stex_file_use:N \g_stex_current_file / .. / \l_stex_key_file_str . sref
        }
      }
    }{
      \str_set:Nx \l_@@_file_str {
        \stex_file_use:N \c_stex_mathhub_file / \l_stex_key_archive_str
        / source / \l_stex_key_file_str . sref
      }
    }
    \stex_file_resolve:No \l_@@_file \l_@@_file_str
    \str_set:Nx \l_@@_file_str {\stex_file_use:N \l_@@_file }
    \stex_debug:nn{sref}{File: \l_@@_file_str }

    \exp_args:No \IfFileExists \l_@@_file_str {
      \tl_clear:N \l_@@_return_tl
      \str_set:Nn \l_@@_id_str {#1}
      \let\STEXInternalSrefRestoreTarget\_@@_restore_target:nnnnn
      \use:c{@ @ input}{\l_@@_file_str}
      \exp_args:No \tl_if_empty:nTF \l_@@_return_tl {
        \exp_args:Nnno \msg_warning:nnnn{stex}{warning/smslabelmissing}\l_@@_file_str{#1}
        \_@@_do_autoref:n{
          \str_if_empty:NF\l_@@_uri_str{\l_@@_uri_str?}#1
        }
      }{
        \l_@@_return_tl
      }
    }{
      \exp_args:Nnno \msg_warning:nnn{stex}{warning/smsmissing}\l_@@_file_str
      \_@@_do_autoref:n{
        \str_if_empty:NF\l_@@_uri_str{\l_@@_uri_str?}#1
      }
    }
  \group_end:
}

\cs_new_protected:Nn \_@@_restore_target:nnnnn {
  \str_if_empty:NTF \l_@@_uri_str {
    \exp_args:No \str_if_eq:nnT \l_@@_id_str {#2}{
      \tl_set:Nn \l_@@_return_tl {
        \use:c{#3autorefname}~#4\tl_if_empty:nF{#5}{~(#5)}~in~
        \tl_if_empty:NTF\l_stex_key_title_tl{
          ???
        }\l_stex_key_title_tl
      }
    }
  }{
    \stex_debug:nn{sref}{\l_@@_uri_str{}~ == ~ #1 ~ ?}
    \exp_args:No \str_if_eq:nnT \l_@@_uri_str {#1}{
      \stex_debug:nn{sref}{\l_@@_id_str~ == ~ #2 ~ ?}
      \exp_args:No \str_if_eq:nnT \l_@@_id_str {#2}{
        \stex_debug:nn{sref}{success!}
        \tl_set:Nn \l_@@_return_tl {
          \use:c{#3autorefname}~#4\tl_if_empty:nF{#5}{~(#5)}~in~
          \tl_if_empty:nTF\l_stex_key_title_tl{
            ???
          }\l_stex_key_title_tl
        }
        \endinput
      }
    }
  }
}
%    \end{macrocode}
% The actual macros:
%    \begin{macrocode}
\NewDocumentCommand \sref { O{} m O{}}{
  \stex_keys_set:nn { sref / 1 }{ #1 }
  \_@@_find_uri:n { #2 }
  \_@@_do_sref:nn{#2}{#3}
}
\NewDocumentCommand \extref { O{} m m}{
  \stex_keys_set:nn { sref / 1 }{ #1 }
  \_@@_find_uri:n { #2 }
  \stex_keys_set:nn { sref / 2 }{ #3 }
  \str_if_empty:NT \l_stex_key_file_str {
    \msg_error:nn{stex}{error/extrefmissing}
  }
  \_@@_do_sref_in:n{#2}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_ref_new_sym_target:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_ref_new_symbol:n {
  \bool_if_exist:cTF{g_stex_sref_sym_\tl_to_str:n{#1}_ref}{
    \bool_if:cF{g_stex_sref_sym_\tl_to_str:n{#1}_ref}{
      \_@@_new_symbol:n{#1}
    }
  }{
    \_@@_new_symbol:n{#1}
  }
}

\cs_new_protected:Nn \_stex_sref_do_aux:n {
  #1 \iow_now:Nn \@auxout {#1}
}

\cs_new_protected:Nn \_@@_new_symbol:n {
  \prop_if_exist:NTF \l_stex_current_archive_prop {
    \prop_get:NnNTF \l_stex_current_archive_prop {docurl} \l_@@_str {
      \exp_args:Ne \_stex_sref_do_aux:n {
        \STEXInternalSetSrefSymURL{#1}{\l_@@_str / symbol? #1}
      }
    }{
      \_stex_sref_do_aux:n { \STEXInternalSetSrefSymURL{#1}{} }
    }
  }{
    \_stex_sref_do_aux:n { \STEXInternalSetSrefSymURL{#1}{} }
  }
}

\cs_new_protected:Nn \stex_ref_new_sym_target:n {
  \stex_if_smsmode:TF{
    \stex_ref_new_symbol:n{#1}
  }{
    \iow_now:Nn\@auxout{\STEXInternalSetSrefSymLabel{#1}}
    \STEXInternalSetSrefSymLabel{#1}
    \exp_args:Ne \label{\tl_to_str:n{sref_sym_ #1}}
  }
}

\cs_new_protected:Nn \stex_ref_new_sym_target:nn {
  \str_if_eq:nnTF{#1}{#2}{
    \stex_ref_new_sym_target:n{#1}
  }{
%    \stex_persist:n{
%      \str_gset:cn{g_stex_sref_sym_ #1 _label}{#2}
%    }
    \str_gset:cn{g_stex_sref_sym_ #1 _label}{#2}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\srefsym}
%    \begin{macrocode}
\AddToHook{begindocument/before}{
  \cs_set_eq:NN \_@@_old_newlabel_cs: \newlabel
  \cs_set:Npn \newlabel #1 {
    \exp_args:Ne \_@@_old_newlabel_cs: {\tl_to_str:n{#1}}
  }
}
\NewDocumentCommand \srefsym { m m}{
  \stex_get_symbol:n { #1 }
  \exp_args:Ne 
  \_@@_sym_aux:nn{\l_stex_get_symbol_mod_str ? \l_stex_get_symbol_uri_str}
}

\cs_new_protected:Npn \_@@_do_internal_link:nn #1 {
  \cs_if_exist:NTF \hyperref {
    \hyperref[{#1}]
  }\use:n
}

\cs_new_protected:Npn \_@@_do_url_link:nn {
  \cs_if_exist:NTF \href \href \use_ii:nn
}

\cs_new_protected:Npn \_@@_sym_aux:nn #1 {
  \bool_if_exist:cTF{g_stex_sref_sym_#1_ref}{
    \bool_if:cTF{g_stex_sref_sym_#1_ref}{
      \exp_args:Ne \_@@_do_internal_link:nn{\tl_to_str:n{sref_sym_#1}}
    }{
      \str_if_empty:cTF{g_stex_sref_sym_#1_target}{
        \exp_args:Ne \_@@_do_internal_link:nn{\tl_to_str:n{sref_sym_#1}}
      }{
        \exp_args:Ne \_@@_do_url_link:nn{\use:c{g_stex_sref_sym_#1_target}}
      }
    }
  }{
    \str_if_exist:cTF{g_stex_sref_sym_#1_label}{
      \exp_args:Ne \_@@_sym_aux:nn{\use:c{g_stex_sref_sym_#1_label}}
    }{
      \exp_args:Ne \_@@_do_internal_link:nn{\tl_to_str:n{sref_sym_#1}}
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\srefsymuri}
%    \begin{macrocode}
\cs_new_protected:Npn \srefsymuri #1 {
  \_@@_sym_aux:nn{#1}
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Inputs}
%    \begin{macrocode}
%<@@=stex_inputs>
%    \end{macrocode}
%
% \begin{macro}{\stex_resolve_path_pair:Nnn,\stex_resolve_path_pair:Nxx}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_resolve_path_pair:Nnn {
  \stex_debug:nn{resolving~path}{#3~in~[#2]}
  \str_if_empty:nTF{#2}{
    \prop_if_exist:NTF \l_stex_current_archive_prop {
      \str_set:Nx #1 {\stex_file_use:N \c_stex_mathhub_file / 
      \prop_item:Nn \l_stex_current_archive_prop { id } / source /
      #3}
      \stex_debug:nn{resolving~path}{In~current~archive~
        \prop_item:Nn \l_stex_current_archive_prop { id }
        ;~result:~#1}
    }{
      \str_set:Nx #1 {\stex_file_use:N \c_stex_pwd_file / .. / #3 }
      \stex_debug:nn{resolving~path}{No~current~archive;~result:~#1}
    }
  }{
    \stex_require_archive:n { #2 }
    \str_set:Nx #1 {\stex_file_use:N \c_stex_mathhub_file / 
    \prop_item:cn {c_stex_mathhub_#2_manifest_prop} { id } / source /
    #3}
    \stex_debug:nn{resolving~path}{result:~#1}
  }
}
\cs_generate_variant:Nn \stex_resolve_path_pair:Nnn {Nxx}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\inputref,\mhinput,\ifinputref}
%    \begin{macrocode}
\newif \ifinputref \inputreffalse

\cs_new_protected:Nn \_@@_mhinput:nn {
  \stex_in_archive:nn {#1} {
    \ifinputref
      \stex_input_with_hooks:n{ \stex_file_use:N \c_stex_mathhub_file / ##1 / source / #2 }
    \else
      \inputreftrue
        \stex_input_with_hooks:n{ \stex_file_use:N \c_stex_mathhub_file / ##1 / source / #2 }
      \inputreffalse
    \fi
  }
}

\NewDocumentCommand \mhinput { O{} m}{
  \exp_args:NNx\exp_args:Nnx\_@@_mhinput:nn{ \tl_to_str:n{#1} }{ \tl_to_str:n{#2} }
}

\cs_new_protected:Nn \_@@_inputref_html:nn {
  \str_clear:N \l_tmpa_str
  \prop_get:NnNF \l_stex_current_archive_prop { narr } \l_tmpa_str {
    \prop_get:NnNF \l_stex_current_archive_prop { ns } \l_tmpa_str {}
  }
  \tl_if_empty:nTF{ #1 }{
    \IfFileExists{#2}{
      \ifvmode\noindent\fi\stex_annotate_invisible:nn{shtml:inputref={
        \l_tmpa_str / #2
      }}{}
    }{
      \stex_input_with_hooks:n{#2}
    }
  }{
    \IfFileExists{ \stex_file_use:N \c_stex_mathhub_file / #1 / source / #2 }{
      \ifvmode\noindent\fi\stex_annotate_invisible:nn{shtml:inputref={
        \l_tmpa_str / #2
      }}{}
    }{
      \input{ \stex_file_use:N \c_stex_mathhub_file / #1 / source / #2 }
    }
  }
}

\cs_new_protected:Nn \_@@_inputref_pdf:nn {
  \begingroup
    \inputreftrue
    \tl_if_empty:nTF{ #1 }{
      \stex_input_with_hooks:n{#2}
    }{
      \stex_input_with_hooks:n{ \stex_file_use:N \c_stex_mathhub_file / #1 / source / #2 }
    }
  \endgroup
}

\cs_new_protected:Nn \_@@_inputref:nn {
  \stex_in_archive:nn {#1} {
    \stex_if_html_backend:TF 
      \_@@_inputref_html:nn
      \_@@_inputref_pdf:nn
    {##1}{#2}
  }
}

\NewDocumentCommand \inputref { O{} m}{
  \exp_args:NNx \exp_args:Nnx \_@@_inputref:nn{ \tl_to_str:n{#1} }{ \tl_to_str:n{#2} }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\addmhbibresource}
%    \begin{macrocode}
\newcommand\addmhbibresource[2][]{
  \cs_if_exist:NF \addbibresource {
    \TODO error
  }
  \stex_in_archive:nn {#1} {
    \addbibresource{ \stex_file_use:N \c_stex_mathhub_file / ##1 / #2 }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\libinput}
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_up_archive:nn {
  \prop_if_exist:NF \l_stex_current_archive_prop {
    \msg_error:nnn{stex}{error/notinarchive}\libinput
  } 
  \prop_get:NnNF \l_stex_current_archive_prop {id} \l_@@_id_str {
    \msg_error:nnn{stex}{error/notinarchive}\libinput
  }
  \seq_clear:N \l_@@_libinput_files_seq
  \seq_set_eq:NN \l_@@_path_seq \c_stex_mathhub_file
  \seq_set_split:NnV \l_@@_id_seq / \l_@@_id_str

  \bool_while_do:nn { ! \seq_if_empty_p:N \l_@@_id_seq }{
    \str_set:Nx \l_@@_path_str {\stex_file_use:N \l_@@_path_seq / meta-inf / lib / #1.#2}
    \IfFileExists{ \l_@@_path_str }{
      \seq_put_right:No \l_@@_libinput_files_seq \l_@@_path_str
    }{}
    \seq_pop_left:NN \l_@@_id_seq \l_@@_path_str
    \seq_put_right:No \l_@@_path_seq \l_@@_path_str
  }

  \str_set:Nx \l_@@_path_str {\stex_file_use:N \l_@@_path_seq / lib / #1.#2}
  \IfFileExists{ \l_@@_path_str }{
    \seq_put_right:No \l_@@_libinput_files_seq \l_@@_path_str
  }{}
}

\cs_new_protected:Npn \libinput #1 {
  \_@@_up_archive:nn{#1}{tex}
  \seq_if_empty:NTF \l_@@_libinput_files_seq {
    \msg_error:nnxx{stex}{error/nofile}{\exp_not:N\libinput}{#1.tex}
  }{
    \seq_map_inline:Nn \l_@@_libinput_files_seq {
      \input{ ##1 }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\libusepackage}
%    \begin{macrocode}
\newcommand\libusepackage[2][]{
  \_@@_up_archive:nn{#2}{sty}
  \int_compare:nNnTF {\seq_count:N \l_@@_libinput_files_seq} = 1 {
    \str_set:Nx \l_@@_tmp_str {\seq_item:Nn \l_@@_libinput_files_seq 1}
    \exp_args:Nne \use:n {\usepackage[#1]} {
      \str_range:Nnn\l_@@_tmp_str 1 {-5}
    }
  }{
    \stex_fatal_error:nnn{error/nofile}{\libusepackage}{#1.sty}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\mhgraphics,\cmhgraphics,\lstinputmhlisting,\clstinputmhlisting,\mhtikzinput,\cmhtikzinput}
%    \begin{macrocode}
\str_new:N \l_@@_gin_repo_str
\ltx@ifpackageloaded{graphicx}{\use:n}{\AtEndOfPackageFile{graphicx}}{
  \define@key{Gin}{mhrepos}{
    \str_set:Nn \l_@@_gin_repo_str {#1}
    \def\Gin@mhrepos{\stex_file_use:N \c_stex_mathhub_file / #1 / source /}
  }
  \providecommand\mhgraphics[2][]{
    \def\Gin@mhrepos{
      \stex_file_use:N \c_stex_mathhub_file / \prop_item:Nn \l_stex_current_archive_prop {id} / source /
    }
    \setkeys{Gin}{#1}
    \includegraphics[#1]{ \Gin@mhrepos #2 }
  }
  \providecommand\cmhgraphics[2][]{\begin{center}\mhgraphics[#1]{#2}\end{center}}    
}

\ltx@ifpackageloaded{listings}{\use:n}{\AtEndOfPackageFile{listings}}{
  \define@key{lst}{mhrepos}{
    \def\lst@mhrepos{\stex_file_use:N \c_stex_mathhub_file / #1 / source /}
  }
  \newcommand\lstinputmhlisting[2][]{%
    \def\lst@mhrepos{
      \stex_file_use:N \c_stex_mathhub_file / \prop_item:Nn \l_stex_current_archive_prop {id} / source /
    }
    \setkeys{lst}{#1}%
    \lstinputlisting[#1]{\lst@mhrepos #2}}
  \newcommand\clstinputmhlisting[2][]{\begin{center}\lstinputmhlisting[#1]{#2}\end{center}}
}

\ltx@ifpackageloaded{tikzinput}{\use:n}{\AtEndOfPackageFile{tikzinput}}{  
  \define@key{Gin}{mhrepos}{
    \str_set:Nn \l_@@_gin_repo_str {#1}
    \def\Gin@mhrepos{\stex_file_use:N \c_stex_mathhub_file / #1 / source /}
  }
  \newcommand\mhtikzinput[2][]{%
    \str_clear:N \l_@@_gin_repo_str
    \def\Gin@mhrepos{
      \stex_file_use:N \c_stex_mathhub_file / \prop_item:Nn \l_stex_current_archive_prop {id} / source /
    }
    \setkeys{Gin}{#1}%
    \exp_args:No \stex_in_archive:nn \l_@@_gin_repo_str {
      \tikzinput[#1]{\Gin@mhrepos #2}
    }
  }
  \newcommand\cmhtikzinput[2][]{\begin{center}\mhtikzinput[#1]{#2}\end{center}}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\libusetikzlibrary}
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_usetikzlibrary:nn {
  \pgfkeys@spdef\pgf@temp{#1}
  \expandafter\ifx\csname tikz@library@\pgf@temp @loaded\endcsname\relax%
  \expandafter\global\expandafter\let\csname tikz@library@\pgf@temp @loaded\endcsname=\pgfutil@empty%
  \expandafter\edef\csname tikz@library@#1@atcode\endcsname{\the\catcode`\@}
  \expandafter\edef\csname tikz@library@#1@barcode\endcsname{\the\catcode`\|}
  \expandafter\edef\csname tikz@library@#1@dollarcode\endcsname{\the\catcode`\$}
  \catcode`\@=11
  \catcode`\|=12
  \catcode`\$=3
  \pgfutil@InputIfFileExists{#2}{}{}
  \catcode`\@=\csname tikz@library@#1@atcode\endcsname
  \catcode`\|=\csname tikz@library@#1@barcode\endcsname
  \catcode`\$=\csname tikz@library@#1@dollarcode\endcsname
}

\cs_new_protected:Npn \libusetikzlibrary #1 {
  \cs_if_exist:NF \usetikzlibrary {
    \TODO error
  }
  \_@@_up_archive:nn{tikzlibrary#1}{code.tex}
  \int_compare:nNnTF {\seq_count:N \l_@@_libinput_files_seq} = 1 {
    \exp_args:Nne \_@@_usetikzlibrary:nn{#1}{ \seq_item:Nn \l_@@_libinput_files_seq 1 }
  }{
    \stex_fatal_error:nnn{error/nofile}{\libusetikzlibrary}{tikzlibrary#1.code.tex}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \end{sfragment}
%
% \begin{sfragment}{SMS Mode}
%    \begin{macrocode}
%<@@=stex_smsmode>
%    \end{macrocode}
%
% Macros and environments allowed in sms mode:
%    \begin{macrocode}
\tl_new:N \g_@@_allowed_tl
\tl_new:N \g_@@_allowed_escape_tl
\seq_new:N \g_@@_allowedenvs_seq
%    \end{macrocode}
%
% \begin{macro}{\stex_sms_allow:N,\stex_sms_allow_escape:N,\stex_sms_allow_env:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_sms_allow:N {
  \tl_gput_right:Nn \g_@@_allowed_tl {#1}
}

\cs_new_protected:Nn \stex_sms_allow_escape:N {
  \tl_gput_right:Nn \g_@@_allowed_escape_tl {#1}
}

\cs_new_protected:Nn \stex_sms_allow_env:n {
  \exp_args:NNx \seq_gput_right:Nn \g_@@_allowedenvs_seq {\tl_to_str:n{#1}}
}
%    \end{macrocode}
% \end{macro}
% Some initial allowed macros:
%    \begin{macrocode}
\stex_sms_allow:N \makeatletter
\stex_sms_allow:N \makeatother
\stex_sms_allow:N \ExplSyntaxOn
\stex_sms_allow:N \ExplSyntaxOff
\stex_sms_allow:N \rustexBREAK
%    \end{macrocode}
%
% \begin{macro}[pTF]{\stex_if_smsmode:}
%    \begin{macrocode}
\bool_new:N \g_@@_bool
\bool_set_false:N \g_@@_bool
\prg_new_conditional:Nnn \stex_if_smsmode: { p, T, F, TF } {
  \bool_if:NTF \g_@@_bool \prg_return_true: \prg_return_false:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_sms_allow_import:Nn, \stex_sms_allow_import_env:nn}
%    \begin{macrocode}
\tl_new:N \g_@@_allowed_import_tl
\seq_new:N \g_@@_allowed_import_env_seq
\cs_new_protected:Nn \stex_sms_allow_import:Nn {
  \tl_gput_right:Nn \g_@@_allowed_import_tl {#1}
  \tl_gset:cn{\tl_to_str:n{#1}~-~smsmode} {#2}
}
\cs_new_protected:Nn \stex_sms_allow_import_env:nn {
  \exp_args:NNx \seq_gput_right:Nn \g_@@_allowed_import_env_seq {\tl_to_str{#1}}
  \tl_gset:cn{\tl_to_str:n{#1}~-~env~-~smsmode} {#2}
}

\tl_new:N \g_stex_sms_import_code
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_file_in_smsmode:nn,\stex_file_in_smsmode:on}
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_in_smsmode:n { \stex_suppress_html:n {
  \vbox_set:Nn \l_tmpa_box {
    \bool_set_true:N \g_@@_bool
    \bool_set_false:N \_stex_html_do_output_bool
    #1
  }
  \box_clear:N \l_tmpa_box
} }

\quark_new:N \q_@@_break

\cs_new_protected:Nn \_@@_start_smsmode:n {
  \everyeof{\q_@@_break\exp_not:N}
  \exp_after:wN \exp_after:wN \exp_after:wN
  \stex_smsmode_do:
  \cs:w @ @ input\cs_end: "#1" \relax
}

\cs_new_protected:Nn \stex_file_in_smsmode:nn {
  \seq_gclear:N \l_@@_importmodules_seq
  \seq_gclear:N \l_@@_sigmodules_seq
  \tl_clear:N \g_stex_sms_import_code
  \group_begin:
    \cs_set:Npn \stex_check_term:n ##1 {}
    \seq_clear:N \l_stex_all_modules_seq
    \str_clear:N \l_stex_current_module_str
    #2
    \stex_filestack_push:n{#1}
    \_@@_in_smsmode:n {
      \let \_@@_do_aux_curr:N \_@@_do_aux_imports:N
      \tl_map_inline:Nn \g_@@_allowed_import_tl {
        \use:c{\tl_to_str:n{##1}~-~smsmode}
      }
      \seq_map_inline:Nn \g_@@_allowed_import_env_seq {
        \use:c{\tl_to_str:n{##1}~-~env~-~smsmode}
      }
      \_@@_start_smsmode:n{#1}
    }
    \g_stex_sms_import_code
    \_@@_in_smsmode:n {
      \let \_@@_do_aux_curr:N \_@@_do_aux_normal:N
      \_@@_start_smsmode:n{#1}
    }
    \stex_filestack_pop:
  \group_end:
}
\cs_generate_variant:Nn \stex_file_in_smsmode:nn {on}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_smsmode_do:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_smsmode_do: {
  \stex_if_smsmode:T {
    \_@@_do:w
  }
}

\cs_new:Nn \_@@_check_cs:NNn {
  \exp_after:wN\if\exp_after:wN\relax\exp_not:N#3
  \exp_after:wN#1\exp_after:wN#3\else
  \exp_after:wN#2\fi
}

\cs_new_protected:Npn \_@@_do:w #1 {
  \exp_args:Nx \tl_if_empty:nTF { \tl_tail:n{ #1 }}{
    \_@@_check_cs:NNn \_@@_do_aux:N \_@@_do:w { #1 }
  }{
    \_@@_do:w
  }
}

\cs_new_protected:Nn \_@@_do_aux:N {
  \cs_if_eq:NNF #1 \q_@@_break {
    \_@@_do_aux_curr:N #1
  }
}

\cs_new_protected:Nn \_@@_do_aux_imports:N {
 % \stex_debug:nn{sms}{Checking~\tl_to_str:n{#1}~in~import}
  \tl_if_in:NnTF \g_@@_allowed_import_tl {#1} {
    \stex_debug:nn{sms}{Executing~\tl_to_str:n{#1}~in~import}
    #1
  }{
    \cs_if_eq:NNTF \begin #1 {
      \_@@_check_begin:Nn \g_@@_allowed_import_env_seq
    }{
      \cs_if_eq:NNTF \end #1 {
        \_@@_check_end:Nn \g_@@_allowed_import_env_seq
      }{
        \_@@_do:w
      }
    }
  }
}

\cs_new_protected:Nn \_@@_do_aux_normal:N {
 % \stex_debug:nn{sms}{Checking~\tl_to_str:n{#1}~in~sms~mode}
  \tl_if_in:NnTF \g_@@_allowed_tl {#1} {
    \stex_debug:nn{sms}{Executing~\tl_to_str:n{#1}}
    #1\_@@_do:w
  }{
    \tl_if_in:NnTF \g_@@_allowed_escape_tl {#1} {
      \stex_debug:nn{sms}{Executing~escaped~\tl_to_str:n{#1}}
      #1
    }{
      \cs_if_eq:NNTF \begin #1 {
        \_@@_check_begin:Nn \g_@@_allowedenvs_seq
      }{
        \cs_if_eq:NNTF \end #1 {
          \_@@_check_end:Nn \g_@@_allowedenvs_seq
        }{
          \_@@_do:w
        }
      }
    }
  }
}

\cs_new_protected:Nn \_@@_check_begin:Nn {
 % \stex_debug:nn{sms}{Checking~environment~#2}
  \seq_if_in:NxTF #1 { \tl_to_str:n{#2} }{
    \stex_debug:nn{sms}{Environment~#2}
    \begin{#2}
  }{
    \_@@_do:w
  }
}
\cs_new_protected:Nn \_@@_check_end:Nn {
%  \stex_debug:nn{sms}{Checking~end~environment~#2}
  \seq_if_in:NxTF #1 { \tl_to_str:n{#2} }{
    \stex_debug:nn{sms}{End~Environment~#2}
    \end{#2}\_@@_do:w
  }{
    \str_if_eq:nnTF{#2}{document} \endinput \_@@_do:w
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Modules}
%
% \begin{sfragment}{The smodule-environment}
%    \begin{macrocode}
%<@@=stex_modules>
%    \end{macrocode}
%
% \begin{variable}{\l_stex_current_module_str}
%  The current module:
%    \begin{macrocode}
\str_new:N \l_stex_current_module_str
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\l_stex_all_modules_seq}
%   Stores all modules currently in scope
%    \begin{macrocode}
\seq_new:N \l_stex_all_modules_seq
%    \end{macrocode}
% \end{variable}
%
%
% \begin{macro}{\stex_every_module:n}
%    \begin{macrocode}
%<@@=stex_module_setup>
\tl_clear:N \g_stex_every_module_tl {
}
\cs_new_protected:Nn \stex_every_module:n {
  \tl_gput_right:Nn \g_stex_every_module_tl { #1 }
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\stex_module_setup:n}
% Sets up a new module:
%    \begin{macrocode}
\cs_new_protected:Npn \stex_module_setup:n {
  \stex_if_in_module:TF \_@@_setup_nested:n \_@@_setup_top:n
}

\cs_new_protected:Nn \_@@_setup_top:n {
  \_@@_get_uri_str:n{#1}
  \stex_debug:nn{module}{Module~URI:~\l_@@_ns_str?#1}
  \str_if_empty:NTF \l_stex_key_sig_str
  \_@@_setup_top_nosig:n \_@@_setup_top_sig:n {#1}
  \stex_metagroup_new:o \l_stex_current_module_str
  \g_stex_every_module_tl
  \stex_execute_in_module:x {
    \_stex_do_deprecation:n{#1}
  }
  \_@@_load_meta:
}

\cs_new_protected:Nn \_@@_setup_top_nosig:n {  
  \stex_if_module_exists:nTF{\l_@@_ns_str?#1}{
    \stex_debug:nn{modules}{(already exists)}
  }{
    \tl_gclear:c{c_stex_module_ \l_@@_ns_str ? #1 _code}
    \prop_gclear:c{c_stex_module_ \l_@@_ns_str ? #1 _morphisms_prop }
    \prop_gclear:c{c_stex_module_ \l_@@_ns_str ? #1 _symbols_prop }
    \prop_gclear:c{c_stex_module_ \l_@@_ns_str ? #1 _notations_prop }
  }
  \str_set:Nx \l_stex_current_module_str {\l_@@_ns_str?#1}
  \seq_put_right:No \l_stex_all_modules_seq \l_stex_current_module_str
}

\cs_new_protected:Nn \_@@_setup_top_sig:n {
  \stex_if_module_exists:nTF{\l_@@_ns_str?#1}{
    \stex_debug:nn{modules}{(already exists)}
  }{
    \stex_debug:nn{modules}{(needs loading)}
    \_@@_load_sig:
  }    
  %\stex_if_smsmode:F { % WHY?
    \stex_activate_module:x {
      \l_@@_ns_str ? #1
    }
  %}
  \str_set:Nx\l_stex_current_module_str{\l_@@_ns_str?#1}
}

\cs_new_protected:Nn \_@@_load_sig: {
  \stex_file_split_off_ext:NN \l_@@_sigfile \g_stex_current_file
  \stex_file_split_off_lang:NN \l_@@_sigfile \l_@@_sigfile
  \exp_args:Ne \stex_file_in_smsmode:nn {
    \stex_file_use:N \l_@@_sigfile . \l_stex_key_sig_str . tex
  }{}
}

\cs_new_protected:Nn \_@@_setup_nested:n {
  \exp_after:wN 
    \_@@_split_module:n \l_stex_current_module_str \_@@_end: {#1}
  \stex_debug:nn{module}{Nested~Module~URI:~\l_stex_current_module_str}
  \seq_put_right:No \l_stex_all_modules_seq \l_stex_current_module_str
  \stex_metagroup_new:o \l_stex_current_module_str
}


\cs_new_protected:Nn \_@@_get_uri_str:n {
  \str_clear:N \l_@@_ns_str
  \stex_map_uri:Nnnnn \l_stex_current_ns_uri {
    \str_set:Nx \l_@@_ns_str{##1\c_colon_str/}
  }{
    \seq_set_split:Nnn \l_@@_seq / {##1}
    \seq_pop_right:NN \l_@@_seq \l_@@_seg
    \exp_args:No \str_if_eq:nnF \l_@@_seg {#1} {
      \seq_put_right:No \l_@@_seq \l_@@_seg
    }
    \tl_put_right:Nx \l_@@_ns_str {\seq_use:Nn \l_@@_seq /}
  }{}{}
}

\cs_new_protected:Npn \_@@_split_module:n #1?#2 \_@@_end: #3 {
  \str_set:Nn \l_@@_ns_str {#1}
  \_@@_setup_top_nosig:n { #2 / #3}
}

\bool_new:N \l_stex_in_meta_bool
\bool_set_false:N \l_stex_in_meta_bool

\cs_new_protected:Nn \_@@_load_meta: {
  \tl_if_empty:NF \l_stex_metatheory_uri {
    \stex_execute_in_module:x{
      \stex_pseudogroup_with:nn{\l_stex_in_meta_bool}{
        \stex_activate_module:n {\stex_uri_use:N \l_stex_metatheory_uri }
      }
    }
  }
}

%<@@=stex_modules>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_close_module:}
%    \begin{macrocode}
\cs_new:Nn \stex_close_module: {
  \_stex_persist_module:nN \l_stex_current_module_str \stex_persist:n
  \stex_debug:nn{module}{
    Closing~module~\l_stex_current_module_str^^J
    Code:~\expandafter\meaning\csname c_stex_module_\l_stex_current_module_str _code\endcsname^^J
    Imports:\exp_after:wN \prop_to_keyval:N \cs:w c_stex_module_\l_stex_current_module_str _morphisms_prop\cs_end:^^J
    Declarations:\exp_after:wN \prop_to_keyval:N \cs:w c_stex_module_\l_stex_current_module_str _symbols_prop\cs_end:^^J
    Notations:\exp_after:wN \prop_to_keyval:N \cs:w c_stex_module_\l_stex_current_module_str _notations_prop\cs_end:^^J
  }
}

\cs_new_protected:Npn \_@@_restore_module:nnnn #1 #2 #3 #4 {
  \prop_gset_from_keyval:cn{c_stex_module_#1_morphisms_prop}{#2}
  \cs_set:Npn \_@@_tl {#3}
  \exp_args:Nno \prop_gset_from_keyval:cn{c_stex_module_#1_symbols_prop}\_@@_tl
  \cs_gset:cpn{c_stex_module_\tl_to_str:n{#1}_code}{#4}
  \prop_gclear:c{c_stex_module_\tl_to_str:n{#1} _notations_prop}
  \str_set:Nn \l_@@_restore_mod_str {#1}
  \group_begin:
    \catcode`_=8\relax
    \catcode`:=12\relax
    \_@@_restore_nots:n
}

\cs_new_protected:Nn \_@@_restore_end: {
  \group_end:
  \bool_if:NT \l_stex_in_persist_bool {
    \exp_args:No \_stex_persist_module:nN \l_@@_restore_mod_str \persist:n
  }
}

\cs_new_protected:Nn \_stex_persist_module:nN {
  \exp_args:Ne #2 {
    \_@@_restore_module:nnnn{#1}{
      \exp_after:wN \prop_to_keyval:N \cs:w c_stex_module_#1_morphisms_prop\cs_end:
    }{
      \exp_after:wN \prop_to_keyval:N \cs:w c_stex_module_#1_symbols_prop\cs_end:
    }{
      \exp_after:wN \exp_after:wN \exp_after:wN \exp_not:n
      \exp_after:wN \exp_after:wN \exp_after:wN
      { \cs:w c_stex_module_#1 _code \cs_end: }
    }{}
    \prop_map_function:cN{c_stex_module_#1 _notations_prop}
      \_@@_persist_nots_i:nn
    \exp_not:N \STEXRestoreNotsEnd {}
  }
}

\cs_new:Nn \_@@_persist_nots_i:nn {
  \exp_not:n{#2}
}

\quark_new:N \STEXRestoreNotsEnd

\cs_new_protected:Nn \_@@_restore_nots:n {
  \_@@_restore_nots_i:n
}

\cs_new_protected:Nn \_@@_restore_nots_i:n {
  \tl_if_eq:nnTF{#1}{\STEXRestoreNotsEnd}{
    \_@@_restore_end:
  }{
    \_@@_restore_nots_ii:nnnnn {#1}
  }
}

\cs_new_protected:Nn \_@@_restore_nots_ii:nnnnn {
  \cs_set:Npn \l_@@_tl {{#4}{#5}}
  \exp_args:NNe\use:nn\prop_gput:cnn{
    {c_stex_module_\l_@@_restore_mod_str _notations_prop}
    {\tl_to_str:n{#1!#2}}{
      {\tl_to_str:n{#1}}{\tl_to_str:n{#2}}{#3}
      \exp_args:No \exp_not:n \l_@@_tl
    }
  }
  \_@@_restore_nots_i:n
}
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{\l_stex_metatheory_uri}
%    \begin{macrocode}
\tl_new:N \l_stex_metatheory_uri
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\setmetatheory}
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_set_metatheory:nn {
  \group_begin:
    \stex_import_module_uri:nn { #1 } { #2 }
    \stex_import_require_module:ooo
      \l_stex_import_archive_str
      \l_stex_import_path_str
      \l_stex_import_name_str
    \exp_args:Nne \use:nn {
      \group_end: \str_set:Nn \l_stex_metatheory_str
    }{{\l_stex_import_ns_str}}
}

\NewDocumentCommand \setmetatheory {O{} m}{
  \_@@_set_metatheory:nn { #1 }{ #2 }
  \stex_smsmode_do:
}
%    \end{macrocode}
% \end{macro}
%
% Keys and key handling:
%
%    \begin{macrocode}
\stex_keys_define:nnnn{smodule}{
  \str_clear:N \l_stex_key_sig_str
}{
  %meta          .str_set_x:N  = \l_stex_key_metatheory_str ,
  meta          .code:n       = {
    \str_if_empty:nTF {#1}{
      \tl_clear:N \l_stex_metatheory_uri
    }{
      \stex_uri_resolve:Nx \l_stex_metatheory_uri { #1 }
    }
  },
  ns            .code:n       = {
    \stex_uri_resolve:Nx \l_stex_current_ns_uri { #1 }
  } ,
  lang          .code:n       = {
    \stex_set_language:n { #1 }
  } ,
  sig           .str_set_x:N  = \l_stex_key_sig_str ,
  creators      .code:n       = {} , % todo ?
  contributors  .code:n       = {} , % todo ?
  srccite       .code:n       = {}   % todo ?
}{id, title, style, deprecate}
%    \end{macrocode}
%
% \begin{environment}{smodule}
%    \begin{macrocode}
\stex_new_stylable_env:nnnnnnn {module} {O{} m}{
  \stex_keys_set:nn { smodule }{ #1 }
  \tl_set_eq:NN \thistitle \l_stex_key_title_tl
  \tl_if_empty:NF \thistitle {
    \exp_args:No \stexdoctitle \thistitle
  }
  \exp_args:Nx \stex_module_setup:n { \tl_to_str:n{ #2 } }

  \stex_if_do_html:T {
    \exp_args:Nne \begin{stex_annotate_env} {
      shtml:theory={\l_stex_current_module_str},
      shtml:language={ \l_stex_current_language_str},
      shtml:signature={\l_stex_key_sig_str}
      \tl_if_empty:NF \l_stex_metatheory_uri {,
        shtml:metatheory={\stex_uri_use:N \l_stex_metatheory_uri}
      }
    }
    \stex_annotate_invisible:n{}
  }
  \stex_if_smsmode:F {
    \str_set_eq:NN \thismoduleuri \l_stex_current_module_str
    \tl_set:Nn \thismodulename {#2}
    \stex_style_apply:
  }
  \stex_smsmode_do:
}{
  \stex_close_module:
  \stex_if_smsmode:F \stex_style_apply:
  \stex_if_do_html:T{ \end{stex_annotate_env} }
}{}{}{s}

\stex_sms_allow_env:n{smodule}
%    \end{macrocode}
% \end{environment}
%
%
% \begin{macro}[pTF]{\stex_if_in_module:}
% Are we currently in a module?
%    \begin{macrocode}
\prg_new_conditional:Nnn \stex_if_in_module: {p, T, F, TF} {
  \str_if_empty:NTF \l_stex_current_module_str
    \prg_return_false: \prg_return_true:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[pTF]{\stex_if_module_exists:n}
% Does a module with this URI exist?
%    \begin{macrocode}
\prg_new_conditional:Nnn \stex_if_module_exists:n {p, T, F, TF} {
  \tl_if_exist:cTF { c_stex_module_#1_code }
    \prg_return_true: \prg_return_false:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_do_up_to_module:n,\stex_do_up_to_module:x}
% Execute code in the current module (i.e. as if the \cs{begin}\Arg{smodule}
% was the current tex group)
%    \begin{macrocode}
\cs_new_protected:Nn \stex_do_up_to_module:n {
  \exp_args:No \stex_metagroup_do_in:nn \l_stex_current_module_str {#1}
}
\cs_generate_variant:Nn \stex_do_up_to_module:n {x}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_module_add_code:n,\stex_module_add_code:x}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_module_add_code:n {
  \tl_gput_right:cn {c_stex_module_\l_stex_current_module_str _code} { #1 }
}
\cs_generate_variant:Nn \stex_module_add_code:n {x}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_execute_in_module:n,\stex_execute_in_module:x}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_execute_in_module:n { \stex_if_in_module:TF {
  \stex_module_add_code:n { #1 }
  \stex_do_up_to_module:n { #1 }
}{ #1 }}
\cs_generate_variant:Nn \stex_execute_in_module:n {x}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\STEXexport}
%    \begin{macrocode}
\NewDocumentCommand \STEXexport {} {
  \ExplSyntaxOn
  \_@@_export:n
}
\cs_new_protected:Nn \_@@_export:n {
  \stex_ignore_spaces_and_pars:#1\ExplSyntaxOff
  \stex_module_add_code:n { \stex_ignore_spaces_and_pars:#1}
  \stex_smsmode_do:
}
%    \end{macrocode}
% Only allowed in modules, and allowed (escaped) in sms mode:
%    \begin{macrocode}
\stex_deactivate_macro:Nn \STEXexport {module~environments}
\stex_sms_allow_escape:N \STEXexport
\stex_every_module:n {\stex_reactivate_macro:N \STEXexport}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_module_add_morphism:nnnn, \stex_module_add_morphism:nonn, \stex_module_add_morphism:ooox}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_module_add_morphism:nnnn {
  \exp_args:Nne \prop_gput:cnn{c_stex_module_\l_stex_current_module_str _morphisms_prop}{
    \tl_if_empty:nTF{#1}{[#2]}{#1}
  }{{#1}{#2}{#3}{#4}}
}
\cs_generate_variant:Nn \stex_module_add_morphism:nnnn {nonn,ooox}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_module_add_symbol:nnnnnnN}
% \begin{arguments}
%   \item \Arg{Macro name}
%   \item \Arg{Name}
%   \item \Arg{arity}
%   \item \{(\Arg{Arg num}\Arg{Arg str}\Arg{Arg name})$^\ast$\}
%   \item Definiens
%   \item type
%   \item Return
%   \item Command
% \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_module_add_symbol:nnnnnnnN {
  \stex_debug:nn{declaration}{New~declaration:~\l_stex_current_module_str?#2^^J
    Macro:#1^^JArity:#3~(#4)^^J
    Def:~\tl_to_str:n{#5}^^J
    Type:~\tl_to_str:n{#6}^^J
    Returns:~\tl_to_str:n{#7}
  }
  \prop_gput:cnn{c_stex_module_\l_stex_current_module_str _symbols_prop}
  {#2}{{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}}
  \tl_if_empty:nF{#1}{
    \stex_execute_in_module:n {
      \_@@_activate_sym:n {#2}
    }
  }
}

\cs_new_protected:Nn \_@@_activate_sym:n {
  \prop_map_inline:cn{c_stex_module_\l_stex_current_module_str _symbols_prop}{
    \str_if_eq:nnT{#1}{##1}{
      \_@@_activate_i:nnnnnnnn ##2
    }
  }
}
\cs_new_protected:Nn \_@@_activate_i:nnnnnnnn {
  \def \l_@@_tmp_tl ##1 ##2 ##3 ##4 ##5 ##6 ##7 ##8 ##9 {
    \exp_not:n{#7}
  }

  \stex_debug:nn{activating}{#1:\l_stex_current_module_str^^J
    \tl_to_str:n{{#2}{#3}{#4}{#5}{#6}{#7}#8}
  }%\TODO
  \exp_args:Nne \cs_set_protected:cpn{#1} {
    \_stex_invoke_symbol:nnnnnnnN 
    {\l_stex_current_module_str}
    \exp_not:n{{#2}{#3}{#4}{#5}{#6}}{
      \l_@@_tmp_tl{####1}{####2}{####3}{####4}
          {####5}{####6}{####7}{####8}{####9}
    }#8
  }
  \prop_map_break:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_module_add_notation:nnnnn, \stex_module_add_notation:eoexo,\stex_set_notation_macro:nnnnn}
%   \begin{arguments}
%     \item URI
%     \item variant
%     \item arity
%     \item macro body
%     \item op
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_module_add_notation:nnnnn {
  \prop_gput:cnn{c_stex_module_\l_stex_current_module_str _notations_prop}
  {#1!#2}{{#1}{#2}{#3}{#4}{#5}}
  \stex_execute_in_module:n {
    \_@@_activate_not:nn{#1}{#2}
  }
}
\cs_generate_variant:Nn \stex_module_add_notation:nnnnn {eoexo}


\cs_new_protected:Nn \_@@_activate_not:nn {
  \prop_map_inline:cn{c_stex_module_\l_stex_current_module_str _notations_prop}{
    \str_if_eq:nnT{#1!#2}{##1}{
      \prop_map_break:n{\stex_set_notation_macro:nnnnn ##2 }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_set_notation_macro:nnnnn,\stex_set_notation_macro:eoexo}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_set_notation_macro:nnnnn {
  %\stex_do_up_to_module:n{
    \cs_generate_from_arg_count:cNnn {l_stex_notation_#1_#2_cs}
      \cs_set:Npn {#3}{#4}
    \cs_if_exist:cF{l_stex_notation_#1__cs}{
      \cs_set_eq:cc {l_stex_notation_#1__cs}{l_stex_notation_#1_#2_cs}
    }
    \tl_if_empty:nF{#5}{
      \tl_set:cn{l_stex_notation_#1_op_#2_cs}{#5}
      \cs_if_exist:cF{l_stex_notation_#1_op__cs}{
        \cs_set_eq:cc {l_stex_notation_#1_op__cs}{l_stex_notation_#1_op_#2_cs}
      }
    }
  %}
}
\cs_generate_variant:Nn \stex_set_notation_macro:nnnnn {eoexo}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_activate_module:n,\stex_activate_module:o,\stex_activate_module:x}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_activate_module:n {
  \seq_if_in:NnF \l_stex_all_modules_seq { #1 } {
    \stex_debug:nn{modules}{Activating~module~#1^^J\expandafter\meaning\csname c_stex_module_#1_code\endcsname}
    \seq_put_right:Nn \l_stex_all_modules_seq { #1 }
    \stex_pseudogroup:nn{
      \str_set:Nn \l_stex_current_module_str {#1}
      \use:c{ c_stex_module_#1_code }
    }{
      \stex_pseudogroup_restore:N \l_stex_current_module_str
    }
  }
}
\cs_generate_variant:Nn \stex_activate_module:n {o,x}
%    \end{macrocode}
% \end{macro}
%
% Iterating:
%    \begin{macrocode}
%<@@=stex_iterate>
%    \end{macrocode}
%
% \begin{macro}{\stex_iterate_symbols:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_iterate_symbols:n {
  \stex_pseudogroup_with:nn{\_@@_sym_cs:nnnnnnnnN\stex_iterate_break:\stex_iterate_break:n}{
    \cs_set:Npn \_@@_sym_cs:nnnnnnnnN 
    ##1 ##2 ##3 ##4 ##5 ##6 ##7 ##8 ##9 { #1 }
    \cs_set:Npn \stex_iterate_break: {
      \prop_map_break:n{\seq_map_break:}
    }
    \cs_set:Npn \stex_iterate_break:n ##1 {
      \prop_map_break:n{\seq_map_break:n{##1}}
    }
    \seq_map_inline:Nn \l_stex_all_modules_seq {
      \prop_map_inline:cn{c_stex_module_##1_symbols_prop}{
        \_@@_sym_cs:nnnnnnnnN {##1} ####2
      }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_iterate_symbols:nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_iterate_symbols:nn {
  \seq_clear:N \l_@@_mods_seq
  \stex_pseudogroup_with:nn{\_@@_sym_cs:nnnnnnnnN}{
    \cs_set:Npn \_@@_sym_cs:nnnnnnnnN 
    ##1 ##2 ##3 ##4 ##5 ##6 ##7 ##8 ##9 { #2 }
    \clist_map_function:nN {#1} \_@@_it_decl_i:n
  }
}

\cs_new_protected:Nn \_@@_it_decl_i:n {
  \seq_if_in:NnF \l_@@_mods_seq {#1} {
    \seq_put_left:Nn \l_@@_mods_seq {#1}
    \prop_map_inline:cn{c_stex_module_#1_morphisms_prop}{
      \_@@_it_decl_check:nnnn ##2
    }
    \prop_map_inline:cn{c_stex_module_#1_symbols_prop}{
      \_@@_sym_cs:nnnnnnnnN {#1} ##2
    }
  }
}
\cs_new_protected:Nn \_@@_it_decl_check:nnnn {
  \tl_if_empty:nT{#1}{
    \_@@_it_decl_i:n {#2}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_iterate_notations:nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_iterate_notations:nn {
  \seq_clear:N \l_@@_mods_seq
  \stex_pseudogroup_with:nn{\_@@_not_cs:nnnnn}{
    \cs_set:Npn \_@@_not_cs:nnnnn 
    ##1 ##2 ##3 ##4 ##5 { #2 }
    \clist_map_function:nN {#1} \_@@_it_not_i:n
  }
}

\cs_new_protected:Nn \_@@_it_not_i:n {
  \seq_if_in:NnF \l_@@_mods_seq {#1} {
    \seq_put_left:Nn \l_@@_mods_seq {#1}
    \prop_map_inline:cn{c_stex_module_#1_notations_prop}{
      \_@@_not_cs:nnnnn ##2
    }
    \prop_map_inline:cn{c_stex_module_#1_morphisms_prop}{
      \_@@_it_not_check:nnnn ##2
    }
  }
}
\cs_new_protected:Nn \_@@_it_not_check:nnnn {
  \tl_if_empty:nT{#1}{
    \_@@_it_not_i:n {#2}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Structural Features}
%    \begin{macrocode}
%<@@=stex_features>
%    \end{macrocode}
%
% \begin{macro}{\stex_structural_feature_module:nn,\stex_structural_feature_module_end:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_structural_feature_module:nn {
  \stex_if_do_html:TF {
    \exp_args:Nne \begin{stex_annotate_env} {
      shtml:feature-#2={
       \l_stex_current_module_str/#1}
      \str_if_empty:NF \l_stex_macroname_str {,
        shtml:macroname={\l_stex_macroname_str}
      }
    }
    \stex_annotate_invisible:n{}
  }\group_begin:
  \stex_module_setup:n {#1-module}
}

\cs_new_protected:Nn \stex_structural_feature_module_end: {
  \tl_gset_eq:NN \g_stex_last_feature_str \l_stex_current_module_str
  \stex_close_module:
  \stex_if_do_html:TF{
    \end{stex_annotate_env}
  }\group_end:
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_structural_feature_morphism:nnn,\stex_structural_feature_morphism_end:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_structural_feature_morphism:nnnnn {
  \str_clear:N \l_stex_current_domain_str
  \tl_if_empty:nT{#3}{
    \_stex_get_mathstructure:n{#4}
    \str_set_eq:NN \l_stex_current_domain_str \l_stex_get_structure_module_str
  }
  \str_if_empty:NT \l_stex_current_domain_str {
    \stex_import_module_uri:nn { #3 }{ #4 }
    \stex_import_require_module:ooo
      \l_stex_import_archive_str
      \l_stex_import_path_str
      \l_stex_import_name_str
    \str_set_eq:NN \l_stex_current_domain_str \l_stex_import_ns_str
  }

  \stex_if_do_html:TF {
    \begin{stex_annotate_env} {
      shtml:feature-#2={\l_stex_current_module_str?#1},
      shtml:domain={\l_stex_current_domain_str}
      #5
    }
    \stex_annotate_invisible:n{}
  }\group_begin:
  \str_set:Nn \l_@@_feature_str {#2}
  \str_set:Nn \l_stex_feature_name_str {#1}
  \_@@_setup:
  \_@@_reactivate:
  \stex_activate_module:o \l_stex_current_domain_str
  \stex_metagroup_new:o {\l_stex_current_module_str / #1}
}
\cs_new_protected:Nn \stex_structural_feature_morphism_end: {
  \str_gset_eq:NN \l_stex_feature_name_str \l_stex_feature_name_str
  \str_gset_eq:NN \l_stex_current_domain_str \l_stex_current_domain_str
  \seq_gset_eq:NN \l_stex_morphism_symbols_prop \l_stex_morphism_symbols_prop
  \seq_gset_eq:NN \l_stex_morphism_renames_prop \l_stex_morphism_renames_prop
  \seq_gset_eq:NN \l_stex_morphism_morphisms_seq \l_stex_morphism_morphisms_seq
  \_@@_do_elaboration:
  \stex_if_do_html:TF{
    \end{stex_annotate_env}
  }\group_end:
}

\cs_new_protected:Nn \_@@_setup: {
  \prop_clear:N \l_stex_morphism_symbols_prop
  \prop_clear:N \l_stex_morphism_renames_prop
  \seq_clear:N \l_stex_morphism_morphisms_seq
  \_@@_do_decls:
  \exp_args:No \_@@_do_morphisms:n \l_stex_current_domain_str
}

\cs_new_protected:Nn \_@@_do_decls: {
  \exp_args:No \stex_iterate_symbols:nn \l_stex_current_domain_str {
    \prop_put:Nnn \l_stex_morphism_symbols_prop 
      {[##1]/[##3]}{
      {##2}{##4}{##5}{##6}{##7}{##8}##9
    }
  }
}
\cs_new:Npn \_@@_split_qm:w #1 ? #2 ? #3 { #3 }
\cs_new_protected:Nn \_@@_do_elaboration: {
  \prop_map_inline:Nn \l_stex_morphism_symbols_prop {
    \_@@_elab_check: ##1 ##2
  }
  \exp_args:No\stex_iterate_notations:nn\l_stex_current_domain_str{
    \prop_get:NnNTF \l_stex_morphism_renames_prop {##1}\l_@@_tmp {
      \exp_args:Ne \stex_module_add_notation:nnnnn 
      {\l_stex_current_module_str ? \l_@@_tmp}
    }{
      \exp_args:Ne \stex_module_add_notation:nnnnn 
      {\l_stex_current_module_str ? \l_stex_feature_name_str
       / \_@@_split_qm:w ##1}
    }{##2}{##3}{##4}{##5}
  }
  \stex_module_add_morphism:ooox
    \l_stex_feature_name_str
    \l_stex_current_domain_str
    \l_@@_feature_str
    {\prop_map_function:NN \l_stex_morphism_renames_prop \_@@_rename:nn}
}

\cs_new:Nn \_@@_rename:nn{
  {#1}{\use_ii:nn#2}
}

\cs_new_protected:Npn \_@@_elab_check: [#1]/[#2] #3 {
  \prop_get:NnNTF \l_stex_morphism_renames_prop {#1?#2} \l_@@_tmp {
    \exp_after:wN \stex_module_add_symbol:nnnnnnnN \l_@@_tmp
  }{
    \exp_args:Nno \stex_module_add_symbol:nnnnnnnN {}{\l_stex_feature_name_str / #2}
  }
}

\cs_new_protected:Nn \_@@_do_morphisms:n {
    \prop_map_inline:cn {c_stex_module_#1_morphisms_prop}{
      \_@@_do_morph:nnnn ##2
    }
}

\cs_new_protected:Nn \_@@_do_morph:nnnn {
    \tl_if_empty:nF{#3}{
      \seq_put_right:Nn \l_stex_morphism_morphisms_seq {{#1}{#2}{#3}}
    }
    \_@@_do_morphisms:n{#2}
}

\cs_new_protected:Npn \_@@_reactivate: {
  \stex_deactivate_macro:Nn \symdecl {module~environments}
  \stex_deactivate_macro:Nn \textsymdecl {module~environments}
  \stex_deactivate_macro:Nn \symdef {module~environments}
  \stex_deactivate_macro:Nn \notation {module~environments}
  \stex_deactivate_macro:Nn \importmodule {module~environments}
  \stex_deactivate_macro:Nn \smodule {outside~of~morphisms}
  \stex_reactivate_macro:N \assign
  \stex_reactivate_macro:N \assignMorphism
  \stex_reactivate_macro:N \renamedecl
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_get_in_morphism:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_get_in_morphism:n {
  \stex_debug:nn{Here}{>>#1<<}
  \str_clear:N \l_stex_get_symbol_name_str
  \prop_map_inline:Nn \l_stex_morphism_symbols_prop {
    \_@@_get_check:nnnn{#1}##1##2
  }
  \str_if_empty:NT \l_stex_get_symbol_name_str {
    \TODOb error
  }
}

\cs_new_protected:Npn \_@@_get_check:nnnn #1[#2]/[#3]#4 {
  \str_if_eq:nnTF{#1}{#3}{
    \_@@_check_break:nnnnnnnnn{#2}{#3}{#4}
  }{
    \str_if_eq:nnTF{#1}{#4}{
      \_@@_check_break:nnnnnnnnn{#2}{#3}{#4}
    }{
      \use_none:nnnnnn
    }
  }
}

\cs_new_protected:Nn \_@@_check_break:nnnnnnnnn {
  \prop_map_break:n{
    \str_set:Nn \l_stex_get_symbol_mod_str{#1}
    \str_set:Nn \l_stex_get_symbol_name_str{#2}
    \str_set:Nn \l_stex_get_symbol_macro_str{#3}
    \int_set:Nn \l_stex_get_symbol_arity_int {#4}
    \tl_set:Nn \l_stex_get_symbol_args_tl {#5}
    \tl_set:Nn \l_stex_get_symbol_def_tl {#6}
    \tl_set:Nn \l_stex_get_symbol_type_tl {#7}
    \tl_set:Nn \l_stex_get_symbol_return_tl {#8}
    \tl_set:Nn \l_stex_get_symbol_invoke_cs {#9}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \end{sfragment}
%
%
% \begin{sfragment}{Inheritance}
%
% \begin{sfragment}{\cs{importmodule}/\cs{usemodule}}
%    \begin{macrocode}
%<@@=stex_importmodule>
%    \end{macrocode}
%
% \begin{macro}{\usemodule}
%    \begin{macrocode}
\stex_new_stylable_cmd:nnnn {usemodule} { O{} m } {
  \stex_import_module_uri:nn { #1 }{ #2 }
  \stex_import_require_module:ooo
    \l_stex_import_archive_str
    \l_stex_import_path_str
    \l_stex_import_name_str
  \stex_if_do_html:T {
    \stex_annotate_invisible:nn 
      {shtml:usemodule=\l_stex_import_ns_str} {}
  }
  \stex_if_smsmode:F{
    \group_begin:
    \tl_set_eq:NN \thismoduleuri \l_stex_import_ns_str
    \tl_set_eq:NN \thismodulename \l_stex_import_name_str
    \tl_clear:N \thisstyle
    \stex_style_apply:
    \group_end:
  }
}{}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_import_module_uri:nn}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_import_module_uri:nn {
  \stex_debug:nn{importmodule}{URI:~>#1<~>#2<}
  \exp_args:NNnx \seq_set_split:Nnn \_@@_seq ? { \tl_to_str:n{ #2 } }
  \seq_pop_right:NN \_@@_seq \l_stex_import_name_str
  \str_set:Nx \l_stex_import_path_str { \seq_use:Nn \_@@_seq ? }
  \tl_if_empty:nTF { #1 } {
    \stex_debug:nn{importmodule}{No~archive}
    \prop_if_exist:NTF \l_stex_current_archive_prop {
      \stex_debug:nn{importmodule}{Picking~current~archive}
      \str_set:Nx \l_stex_import_archive_str {
        \prop_item:Nn \l_stex_current_archive_prop { id }
      }
    }{
      \str_clear:N \l_stex_import_archive_str
      \str_set:Nn \l_stex_import_uri_str {file:}
      \str_if_empty:NTF \l_stex_import_path_str {
        \stex_debug:nn{importmodule}{Empty~Path}
        \stex_file_split_off_ext:NN \l_@@_path_seq \g_stex_current_file
        \stex_file_split_off_lang:NN \l_@@_path_seq \l_@@_path_seq
        \str_set:Nx \l_stex_import_path_str {
          \stex_file_use:N \l_@@_path_seq
        }
      }{
        \stex_debug:nn{importmodule}{Resolving~path~\l_stex_import_path_str~relative~to~\stex_file_use:N \g_stex_current_file}
        \stex_file_resolve:Nx \l_@@_seq { \stex_file_use:N \g_stex_current_file / .. / \l_stex_import_path_str}
        \str_set:Nx \l_stex_import_path_str {
          \stex_file_use:N \l_@@_seq
        }
        \stex_debug:nn{importmodule}{...yields~\l_stex_import_path_str}
      }
    }
  } {
    \stex_debug:nn{importmodule}{Archive~#1}
    \str_set:Nx \l_stex_import_archive_str { #1 }
    \stex_require_archive:o \l_stex_import_archive_str
    \str_set:Nx \l_stex_import_uri_str { \prop_item:cn{ c_stex_mathhub_ \l_stex_import_archive_str _manifest_prop}{ ns } }
  }
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\stex_import_require_module:nnn,\stex_import_require_module:ooo}
%    \begin{macrocode}
\cs_new_protected:Npn \stex_import_require_module:nnn #1 {
  \stex_debug:nn{importmodule}{Requiring~>#1<}
  \tl_if_empty:nTF { #1 } {
    \str_clear:N \l_@@_archive_str
    \str_set:Nn \l_stex_import_uri_str {file:}
    \_@@_get_module:nnn {}
  }{
    \str_set:Nx \l_@@_archive_str {#1}
    \str_set:Nx \l_stex_import_uri_str { \prop_item:cn{ c_stex_mathhub_ #1 _manifest_prop}{ ns } }
    \str_set:Nx \l_@@_str { \stex_file_use:N \c_stex_mathhub_file / #1 / source }
    \exp_args:No \_@@_get_module:nnn \l_@@_str
  }
}
\cs_generate_variant:Nn \stex_import_require_module:nnn {ooo}

\cs_new_protected:Nn \_@@_get_module_uri:nnn {
  \tl_if_empty:nF {#2}{
    \str_set:Nx \l_stex_import_uri_str {\l_stex_import_uri_str / #2}
  }
  \stex_debug:nn{importmodule}{~>#1<^^J>#2<^^J>#3<^^J>\l_stex_import_uri_str<}
  \stex_if_module_exists:nF {\l_stex_import_uri_str?#3} {
    \_@@_get_from_file:nnn{#1}{#2}{#3}
  }
  \str_set:Nx \l_stex_import_ns_str {\l_stex_import_uri_str?#3}
}

\cs_new_protected:Nn \_@@_get_module:nnn {
  \_@@_get_module_uri:nnn{#1}{#2}{#3}
  \stex_activate_module:o \l_stex_import_ns_str
}

\cs_new_protected:Nn \_@@_get_from_file:nnn {
  \stex_file_resolve:Nx \l_@@_seq { \tl_if_empty:nF{ #1 }{ #1 / } #2 }
  \str_set:Nx \l_@@_str {\stex_file_use:N \l_@@_seq}
  \stex_debug:nn{imports}{Looking~for~\l_stex_import_uri_str?#3...}
  \_@@_check_file:nn{ .tex }{
    \_@@_check_file:nn{. \l_stex_current_language_str .tex}{
      \_@@_check_file:nn{.en.tex}{
        \_@@_check_file:nn{/#3.tex}{
          \_@@_check_file:nn{/#3.\l_stex_current_language_str .tex}{
            \_@@_check_file:nn{/#3.en.tex}{
              \msg_error:nnx{stex}{error/unknownmodule}{\l_stex_import_uri_str?#3}
            }
          }
        }
      }
    }
  }
  \_@@_load_file:n{#3}
}

\cs_new_protected:Nn \_@@_load_file:n {
  \stex_file_in_smsmode:on \l_@@_str {
    \str_if_empty:NF \l_@@_archive_str {
      \stex_set_current_archive:n \l_@@_archive_str
    }
    \stex_debug:nn{modules}{Loading~\l_@@_str}
  }
  \stex_if_module_exists:nF {\l_stex_import_uri_str?#1} {
    \msg_error:nnx{stex}{error/unknownmodule}{\l_stex_import_uri_str?#1}
  }
}

\cs_new_protected:Npn \_@@_check_file:nn #1 {
  \stex_debug:nn{imports}{Checking~\l_@@_str #1}
  \IfFileExists{ \l_@@_str #1 }{
    \stex_debug:nn{imports}{Success}
    \str_set:Nx \l_@@_str { \l_@@_str #1 }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\importmodule}
%    \begin{macrocode}
\stex_new_stylable_cmd:nnnn{importmodule} { O{} m } {
  \_@@_import_module:nn {#1}{#2}
  \stex_smsmode_do:
}{}
\stex_deactivate_macro:Nn \importmodule {module~environments}

\cs_new_protected:Nn \_@@_import_module:nn {
  \stex_import_module_uri:nn { #1 }{ #2 }
  \stex_import_require_module:ooo
    \l_stex_import_archive_str
    \l_stex_import_path_str
    \l_stex_import_name_str
  \stex_execute_in_module:x{ 
    \stex_activate_module:n{\l_stex_import_ns_str}
  }
  \stex_module_add_morphism:nonn
    {}{\l_stex_import_ns_str}{import}{}
  \stex_if_do_html:T {
    \stex_annotate_invisible:nn 
      {shtml:import=\l_stex_import_ns_str} {}
  }
  \stex_if_smsmode:F{
    \group_begin:
    \tl_set_eq:NN \thismoduleuri \l_stex_import_ns_str
    \tl_set_eq:NN \thismodulename \l_stex_import_name_str
    \tl_clear:N \thisstyle
    \stex_style_apply:
    \group_end:
  }
}

\cs_new_protected:Nn \_@@_import_module_presms:nn {
  \stex_import_module_uri:nn { #1 }{ #2 }
  \tl_gput_right:Nx \g_stex_sms_import_code {
    \stex_import_require_module:nnn 
      {\l_stex_import_archive_str}
      {\l_stex_import_path_str}
      {\l_stex_import_name_str}
  }
}
\stex_sms_allow_escape:N \importmodule
\stex_every_module:n {\stex_reactivate_macro:N \importmodule}
\stex_sms_allow_import:Nn \importmodule {
  \stex_reactivate_macro:N \importmodule
  \let \_@@_import_module:nn \_@@_import_module_presms:nn
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Theory Morphisms}
%    \begin{macrocode}
%<@@=stex_morphisms>
%    \end{macrocode}
%
%    \begin{macrocode}
\stex_new_stylable_cmd:nnnn {assign} { m m }{
  \stex_get_in_morphism:n{#1}
  \_stex_assign_do:n{#2}
  \stex_smsmode_do:
}{}
\stex_sms_allow_escape:N\assign

\cs_new_protected:Nn \_stex_assign_do:n{
  \stex_debug:nn{assign}{Assigning~\l_stex_get_symbol_name_str~to~\tl_to_str:n{#1}}
  \tl_if_empty:NF \l_stex_get_symbol_def_tl {
    \exp_args:No \message \l_stex_get_symbol_name_str
    \TODOc error
  }
  \stex_check_term:n{#1}
  \stex_debug:nn{HERE!}{
    \l_stex_get_symbol_mod_str?\l_stex_get_symbol_name_str^^J
    \tl_to_str:n{#1}
  }
  \stex_if_do_html:T{
    \stex_annotate_invisible:nn{shtml:assign={\l_stex_get_symbol_mod_str?\l_stex_get_symbol_name_str}}{
      \_stex_annotate_force_break:n{
        $\stex_annotate:nn{shtml:definiens={}}{#1}$
      }
    }
  }
  \exp_args:Ne \stex_metagroup_do_in:nx{
    \l_stex_current_module_str / \l_stex_feature_name_str
  }{
    \prop_put:Nnn \exp_not:N \l_stex_morphism_symbols_prop
    {[\l_stex_get_symbol_mod_str]/[\l_stex_get_symbol_name_str]}
    {
      {\l_stex_get_symbol_macro_str}
      {\int_use:N \l_stex_get_symbol_arity_int}
      {\l_stex_get_symbol_args_tl}
      {\exp_not:n{#1}}
      {\exp_args:No\exp_not:n\l_stex_get_symbol_type_tl}
      {\exp_args:No\exp_not:n\l_stex_get_symbol_return_tl}
      {\l_stex_get_symbol_invoke_cs}
    }
  }
}


\stex_new_stylable_cmd:nnnn {renamedecl} { m O{} m }{
  \stex_get_in_morphism:n{#1}
  \_stex_renamedecl_do:nn{#2}{#3}
  \stex_smsmode_do:
}{}
\stex_sms_allow_escape:N\renamedecl

\cs_new_protected:Nn \_stex_renamedecl_do:nn {
  \stex_debug:nn{renamedecl}{Renaming~\l_stex_get_symbol_name_str~to~[#1]{#2}}
  \stex_if_do_html:T{
    \exp_args:Ne \stex_annotate_invisible:nn{
      shtml:rename={\l_stex_get_symbol_mod_str?\l_stex_get_symbol_name_str},
      shtml:macroname={#2}
      \str_if_empty:nF{#1}{ ,shtml:to={#1} }
    }{}
  }
  \exp_args:Ne \stex_metagroup_do_in:nx{
    \l_stex_current_module_str / \l_stex_feature_name_str
  }{
    \prop_put:Nnn \exp_not:N \l_stex_morphism_renames_prop 
    {\l_stex_get_symbol_mod_str?\l_stex_get_symbol_name_str}{{#2}{
      \tl_if_empty:nTF{#1}{\l_stex_feature_name_str/\l_stex_get_symbol_name_str}{#1}
    }}
  }
}

\stex_new_stylable_cmd:nnnn {assignMorphism} { m m }{
  \TODO
}{}

\stex_deactivate_macro:Nn \assign {morphism~environments}
\stex_deactivate_macro:Nn \renamedecl {morphism~environments}
\stex_deactivate_macro:Nn \assignMorphism {morphism~environments}
%    \end{macrocode}
%
%    \begin{macrocode}
\stex_new_stylable_env:nnnnnnn {copymodule}{m O{} m}{

  \stex_structural_feature_morphism:nnnnn{#1}{morphism}{#2}{#3}{,shtml:total=false}
  
  \stex_if_smsmode:F {
    \tl_set:Nn \thiscopyname { #1 }
    \tl_set_eq:NN \thismoduleuri \l_stex_current_domain_str
    \stex_style_apply:
  }
  \stex_smsmode_do:
}{
  \stex_if_smsmode:F {
    \stex_style_apply:
  }
  \stex_structural_feature_morphism_end:
}{}{}{}
\stex_deactivate_macro:Nn \copymodule {module~environments}
\stex_every_module:n {
  \stex_reactivate_macro:N \copymodule
}
\stex_sms_allow_env:n{copymodule}
%    \end{macrocode}
%
%    \begin{macrocode}
\stex_new_stylable_env:nnnnnnn {realization}{m}{

  \stex_structural_feature_morphism:nnnnn{}{realization}{}{#1}{,shtml:total=true}
  \stex_execute_in_module:x{
    \stex_activate_module:n{\l_stex_current_domain_str}
  }
  % TODO check totality
  \stex_if_smsmode:F {
    \tl_set:Nn \thiscopyname { #1 }
    \tl_set_eq:NN \thismoduleuri \l_stex_current_domain_str
    \stex_style_apply:
  }
  \stex_smsmode_do:
}{
  \stex_if_smsmode:F {
    \stex_style_apply:
  }
  \stex_structural_feature_morphism_end:
}{}{}{}
\stex_deactivate_macro:Nn \realization {module~environments}
\stex_every_module:n {
  \stex_reactivate_macro:N \realization
}
\stex_sms_allow_env:n{realization}
%    \end{macrocode}
%
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_parse_assign:n {
  \str_clear:N \l_@@_name_str
  \str_clear:N \l_@@_newname_str
  \tl_clear:N \l_@@_ass_tl
  \exp_args:NNe \seq_set_split:Nnn \l_@@_seq {\tl_to_str:n{@}} {#1}
  \int_compare:nNnTF {\seq_count:N \l_@@_seq} = 1 {
    \seq_pop_left:NN \l_@@_seq \l_@@_next_tl
  }{
    \seq_pop_left:NN \l_@@_seq \l_@@_name_str
    \exp_args:NNo \str_set:Nn \l_@@_name_str \l_@@_name_str
    \tl_set:Nx \l_@@_next_tl {\seq_use:Nn \l_@@_seq @}
  }
  \exp_args:NNNo \seq_set_split:Nnn \l_@@_seq = \l_@@_next_tl
  \str_if_empty:NTF \l_@@_name_str {
    \seq_pop_left:NN \l_@@_seq \l_@@_name_str
    \exp_args:NNo \str_set:Nn \l_@@_name_str \l_@@_name_str
    \tl_set:Nx \l_@@_ass_tl {\seq_use:Nn \l_@@_seq =}
  }{
    \seq_pop_left:NN \l_@@_seq \l_@@_newname_str
    \exp_args:NNo \str_set:Nn \l_@@_newname_str \l_@@_newname_str
    \tl_set:Nx \l_@@_ass_tl {\seq_use:Nn \l_@@_seq =}
  }
  \_@@_do_parsed_assign:
}

\cs_new_protected:Nn \_@@_do_parsed_assign: {
  \str_if_empty:NTF \l_@@_name_str {
    \TODO error
  }{
    \exp_args:No \stex_get_in_morphism:n \l_@@_name_str
    \str_if_empty:NF \l_@@_newname_str {
      \exp_after:wN \_@@_do_parsed_newname: \l_@@_newname_str \_@@_end:
    }
    \tl_if_empty:NF \l_@@_ass_tl {
      \exp_args:No \_stex_assign_do:n \l_@@_ass_tl
    }
  }
}

\cs_new_protected:Nn \_@@_do_parsed_newname: {
  \peek_charcode:NTF [ {
    \_@@_do_parsed_newname:w
  }{
    \_@@_do_parsed_newname:w []
  }
}

\cs_new_protected:Npn \_@@_do_parsed_newname:w [#1] #2 \_@@_end: {
  \_stex_renamedecl_do:nn{#1}{#2}
}

\stex_new_stylable_cmd:nnnn{copymod}{m O{} m m}{
  \stex_structural_feature_morphism:nnnnn{#1}{morphism}{#2}{#3}{,shtml:total=false}
  
  \clist_map_function:nN{#4}\_@@_parse_assign:n
  
  \stex_if_smsmode:F {
    \tl_set:Nn \thiscopyname { #1 }
    \tl_set_eq:NN \thismoduleuri \l_stex_current_domain_str
    \stex_style_apply:
  }
  \stex_structural_feature_morphism_end:
  \stex_smsmode_do:
}{}
\stex_deactivate_macro:Nn \copymod {module~environments}
\stex_every_module:n {
  \stex_reactivate_macro:N \copymod
}
\stex_sms_allow_escape:N\copymod
%    \end{macrocode}
%
% \end{sfragment}
%
%
%
% \end{sfragment}
%
%
% \begin{sfragment}{Symbols}
%
% \begin{sfragment}{Declarations}
%    \begin{macrocode}
%<@@=stex_symdecl>
%    \end{macrocode}
% Some setup:
%    \begin{macrocode}
\cs_new_protected:Npn \STEXInternalSymbolAfterInvokationTL {}
\cs_new_protected:Npn \STEXInternalAssocArgMarkerI {}
\cs_new_protected:Npn \STEXInternalAssocArgMarkerII {}
%    \end{macrocode}
%
% \begin{macro}[pTF]{\stex_if_check_terms:}
%    \begin{macrocode}
\stex_if_html_backend:TF {
  \prg_new_conditional:Nnn \stex_if_check_terms: {p, T, F, TF} {
    \prg_return_false:
  }
}{
  \stex_get_env:Nn\_@@_env_str{STEX_CHECKTERMS}
  \str_if_empty:NF\_@@_env_str{
    \exp_args:No \str_if_eq:nnF \_@@_env_str{false}{
      \bool_set_true:N \c_stex_check_terms_bool
    }
  }
  \bool_if:NTF \c_stex_check_terms_bool {
    \prg_new_conditional:Nnn \stex_if_check_terms: {p, T, F, TF} {
      \prg_return_true:
    }
  }{
    \prg_new_conditional:Nnn \stex_if_check_terms: {p, T, F, TF} {
      \prg_return_false:
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_check_term:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_check_term:n {
  \stex_if_check_terms:T{
    \hbox_set:Nn \l_tmpa_box {
      \group_begin:
        $#1$
      \group_end:
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% |symdecl| arguments:
%    \begin{macrocode}
\stex_keys_define:nnnn{symargs}{
  \str_clear:N \l_stex_key_args_str
  \str_clear:N \l_stex_key_role_str
  \str_clear:N \l_stex_key_reorder_str
  \clist_clear:N \l_stex_key_argnames_clist
  \str_clear:N \l_stex_key_assoc_str
  \str_clear:N \l_stex_key_intent_str
}{
  args      .str_set:N  = \l_stex_key_args_str ,
  reorder   .str_set:N  = \l_stex_key_reorder_str ,
  argnames  .clist_set:N  = \l_stex_key_argnames_clist ,
  assoc     .choices:nn   = {bin,binl,binr,pre,conj,pwconj}
    {\str_set:Nx \l_stex_key_assoc_str \l_keys_choice_tl},
  intent    .str_set_x:N  = \l_stex_key_intent_str ,
  role      .str_set:N     = \l_stex_key_role_str
}{}

\stex_keys_define:nnnn{decl}{
  \str_clear:N \l_stex_key_name_str
  \str_clear:N \l_stex_key_args_str
  \tl_clear:N \l_stex_key_type_tl
  \tl_clear:N \l_stex_key_def_tl
  \tl_clear:N \l_stex_key_return_tl
  \clist_clear:N \l_stex_key_argtypes_tl
}{
  name      .str_set:N  = \l_stex_key_name_str ,

  return    .tl_set:N     = \l_stex_key_return_tl ,
  argtypes  .clist_set:N  = \l_stex_key_argtypes_tl ,

  type      .tl_set:N     = \l_stex_key_type_tl  ,
  def       .tl_set:N     = \l_stex_key_def_tl   ,

  align     .code:n       = {},
  gfc       .code:n       = {}
}{style,deprecate,symargs}
% \_stex_do_deprecation:n{#2}
%    \end{macrocode}
%
% \begin{macro}{\symdecl}
%    \begin{macrocode}
\str_new:N \l_stex_macroname_str
\stex_new_stylable_cmd:nnnn {symdecl} { s m O{}} {
  \stex_keys_set:nn{decl}{#3}
  \IfBooleanTF #1 {
    \str_clear:N \l_stex_macroname_str
  }{
    \str_set:Nx \l_stex_macroname_str { #2 }
  }
  \stex_symdecl_top:n{#2}

  \stex_if_smsmode:F{
    \group_begin:
    \tl_set:Nx \thisdecluri {\l_stex_current_module_str ? \l_stex_key_name_str}
    \tl_set_eq:NN \thisdeclname \l_stex_key_name_str
    \tl_clear:N \thisstyle
    \stex_style_apply:
    \group_end:
  }
  \stex_smsmode_do:
}{}
\stex_deactivate_macro:Nn \symdecl {module~environments}
\stex_every_module:n {\stex_reactivate_macro:N \symdecl}
\stex_sms_allow_escape:N \symdecl
%    \end{macrocode}
% \end{macro}
%
%% \begin{macro}{\stex_symdecl_top:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_symdecl_top:n {
  \str_if_empty:NT \l_stex_key_name_str {
    \str_set:Nx \l_stex_key_name_str { #1 }
  }
  \stex_symdecl_do:
  \_stex_symdecl_check_terms:
  \_@@_add_decl:
  \_stex_symdecl_html:
}

\cs_new_protected:Nn \_@@_add_decl: {
  \exp_args:Nnx \use:nn {\stex_module_add_symbol:nnnnnnnN}{
    {\l_stex_macroname_str}
    {\l_stex_key_name_str}
    {\int_use:N \l_stex_get_symbol_arity_int}
    {\l_stex_get_symbol_args_tl}
    {\exp_args:No \exp_not:n \l_stex_key_def_tl}
    {\exp_args:No \exp_not:n \l_stex_key_type_tl}
    {\exp_args:No \exp_not:n \l_stex_key_return_tl}
    \stex_invoke_symbol:
  }
  \exp_args:Ne \stex_ref_new_symbol:n
    {\l_stex_current_module_str?\l_stex_key_name_str}
}

\cs_new:Nn \_stex_return_args:nnn {
  {i_{#1}}
}

\cs_new_protected:Nn \_stex_symdecl_html: {
  \stex_if_do_html:T {
    \exp_args:Ne \stex_annotate_invisible:nn {
      shtml:symdecl = {\l_stex_current_module_str ? \l_stex_key_name_str},
      shtml:args = {\l_stex_key_args_str}
      \str_if_empty:NF \l_stex_macroname_str {,
        shtml:macroname={\l_stex_macroname_str}
      }
      \str_if_empty:NF \l_stex_key_assoc_str {,
        shtml:assoctype={\l_stex_key_assoc_str}
      }
      \str_if_empty:NF \l_stex_key_role_str {,
        shtml:role={\l_stex_key_role_str}
      }
      \str_if_empty:NF \l_stex_key_reorder_str {,
        shtml:reorderargs={\l_stex_key_reorder_str}
      }
    }{\hbox\bgroup
      \_stex_annotate_force_break:n{
        \tl_if_empty:NF \l_stex_key_type_tl {
          \stex_annotate:nn{shtml:type={}}{$\l_stex_key_type_tl$}
        }
        \tl_if_empty:NF \l_stex_key_def_tl {
          \stex_annotate:nn{shtml:definiens={}}{$\l_stex_key_def_tl$}
        }
        \tl_if_empty:NF \l_stex_key_return_tl{
          \exp_args:Nno \use:n{
          \cs_generate_from_arg_count:NNnn \l_@@_cs
          \cs_set:Npn \l_stex_get_symbol_arity_int} \l_stex_key_return_tl
          \tl_set:Nx \l_@@_args_tl {\_stex_map_args:N \_stex_return_args:nnn}
          \stex_annotate:nn{shtml:returntype={}}{
            $\exp_after:wN \l_@@_cs \l_@@_args_tl!$}
        }
        \tl_if_empty:NF \l_stex_key_argtypes_tl {
          \stex_annotate:nn{shtml:argtypes={}}{
            \_stex_annotate_force_break:n{
              \clist_map_inline:Nn \l_stex_key_argtypes_tl {
                \stex_annotate:nn{shtml:type={}}{$##1$}
              }
            }
          }
        }
      }
    \egroup}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_symdecl_do:}
% Requires the above keys and \cs{l_stex_macroname_str} to be
% set first
%    \begin{macrocode}
\cs_new_protected:Nn \stex_symdecl_do: {
  \_stex_do_deprecation:n \l_stex_key_name_str
  \_@@_parse_arity:
  \_@@_do_argnames:
  \_@@_do_args:
}

\int_new:N \l_stex_assoc_args_count

\cs_new_protected:Nn \_@@_parse_arity: {
  \int_zero:N \l_stex_get_symbol_arity_int
  \int_zero:N \l_stex_assoc_args_count
  \str_map_inline:Nn \l_stex_key_args_str {
    \str_case:nnF ##1 {
      0 { \str_map_break: }
      1 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {1}
        \str_set:Nn \l_stex_key_args_str {i}
      } }
      2 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {2}
        \str_set:Nn \l_stex_key_args_str {ii}
      } }
      3 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {3}
        \str_set:Nn \l_stex_key_args_str {iii}
      } }
      4 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {4}
        \str_set:Nn \l_stex_key_args_str {iiii}
      } }
      5 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {5}
        \str_set:Nn \l_stex_key_args_str {iiiii}
      } }
      6 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {6}
        \str_set:Nn \l_stex_key_args_str {iiiiii}
      } }
      7 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {7}
        \str_set:Nn \l_stex_key_args_str {iiiiiii}
      } }
      8 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {8}
        \str_set:Nn \l_stex_key_args_str {iiiiiiii}
      } }
      9 { \str_map_break:n{
        \int_set:Nn \l_stex_get_symbol_arity_int {9}
        \str_set:Nn \l_stex_key_args_str {iiiiiiiii}
      } }
      i {\int_incr:N \l_stex_get_symbol_arity_int}
      b {\int_incr:N \l_stex_get_symbol_arity_int}
      a {\int_incr:N \l_stex_get_symbol_arity_int \int_incr:N \l_stex_assoc_args_count}
      B {\int_incr:N \l_stex_get_symbol_arity_int \int_incr:N \l_stex_assoc_args_count}
    }{
      \msg_error:nnxx{stex}{error/wrongargs}{
        \l_stex_current_module_str ? \l_stex_key_name_str
      }{##1}
    }
  }
}

\cs_new_protected:Nn \_@@_do_argnames: {
  \seq_clear:N \l_stex_argnames_seq
  \int_step_inline:nn \l_stex_get_symbol_arity_int {
    \clist_if_empty:NTF \l_stex_key_argnames_clist {
      \exp_args:NNo \seq_put_right:Nn \l_stex_argnames_seq {\c_dollar_str##1}
    }{
      \clist_pop:NN \l_stex_key_argnames_clist \l_@@_tmp
      \exp_args:NNx \seq_put_right:Nn \l_stex_argnames_seq {
        \c_dollar_str\exp_args:No\tl_to_str:n\l_@@_tmp
      }
    }
  }
}

\cs_new_protected:Nn \_@@_do_args: {
  \tl_clear:N \l_stex_get_symbol_args_tl
  \int_step_inline:nn \l_stex_get_symbol_arity_int {
    \tl_put_right:Nn \l_stex_get_symbol_args_tl {##1}
    \tl_put_right:Nx \l_stex_get_symbol_args_tl {
      \str_item:Nn \l_stex_key_args_str {##1}
    }
    \tl_put_right:Nx \l_stex_get_symbol_args_tl {
      {\seq_item:Nn \l_stex_argnames_seq {##1}}
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\_stex_symdecl_check_terms:}
%    \begin{macrocode}
\cs_new_protected:Nn \_stex_symdecl_check_terms: {
  \stex_check_term:n{
    \stex_debug:nn{check_terms}{Checking~type...}
    \group_begin:\l_stex_key_type_tl\group_end:
    \stex_debug:nn{check_terms}{Checking~definiens...}
    \group_begin:\l_stex_key_def_tl\group_end:
    \stex_debug:nn{check_terms}{Checking~return...}
    \group_begin:\l_stex_key_return_tl!\group_end:
    \stex_debug:nn{check_terms}{Checking~argument~types...}
    \group_begin:\l_stex_key_argtypes_tl\group_end:
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\textsymdecl}
%    \begin{macrocode}

\stex_keys_define:nnnn{textsymdecl}{
  \str_clear:N \l_stex_key_name_str
  \tl_clear:N \l_stex_key_type_tl
}{
  name      .str_set:N  = \l_stex_key_name_str ,
  type      .tl_set:N     = \l_stex_key_type_tl
}{style,deprecate}

\stex_new_stylable_cmd:nnnn {textsymdecl} {m O{} m} {
  \stex_keys_set:nn{textsymdecl}{#2}
  \str_set:Nx \l_stex_macroname_str { #1 }
  \str_if_empty:NTF \l_stex_key_name_str {
    \str_set:Nn \l_stex_key_name_str {#1-sym}
  }{
    \str_set:Nx \l_stex_key_name_str {\l_stex_key_name_str-sym}
  }
  \stex_symdecl_top:n{#1}
  \stex_execute_in_module:n{
    \cs_set_nopar:cpn{#1name}{
      \ifvmode\hbox_unpack:N\c_empty_box\fi
      \ifmmode\hbox{#3}\else#3\fi\xspace
    }
    \cs_set_nopar:cpn{#1}{
      \ifmmode\symref{#1-sym}{\hbox{#3}}\else
      \ifvmode\hbox_unpack:N\c_empty_box\fi
      \symref{#1-sym}{#3}\expandafter\xspace
      \fi
    }
  }

  \stex_if_smsmode:F{
    \group_begin:
    \tl_set:Nx \thisdecluri {\l_stex_current_module_str ? \l_stex_key_name_str}
    \tl_set_eq:NN \thisdeclname \l_stex_key_name_str
    \tl_clear:N \thisstyle
    \stex_style_apply:
    \group_end:
  }
  \stex_smsmode_do:
}{}
\stex_deactivate_macro:Nn \textsymdecl {module~environments}
\stex_every_module:n {\stex_reactivate_macro:N \textsymdecl}
\stex_sms_allow_escape:N \textsymdecl
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_get_symbol:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_get_symbol:n {
  \str_clear:N \l_stex_get_symbol_mod_str
  \str_clear:N \l_stex_get_symbol_name_str
  \cs_if_exist:cTF { #1 }{
    \cs_set_eq:Nc \l_@@_cs { #1 }
    % command name
    \exp_args:Ne \tl_if_empty:nTF { \cs_argument_spec:N \l_@@_cs }{
      % ...that takes no arguments
      \exp_args:Ne \cs_if_eq:NNTF {\tl_head:N \l_@@_cs}
        \_stex_invoke_symbol:nnnnnnnN
        \_@@_get_symbol_from_cs:
        {\_@@_get_symbol_from_string:n { #1 }}
    }{
      \_@@_get_symbol_from_string:n { #1 }
    }
  }{
    \_@@_get_symbol_from_string:n { #1 }
  }
  \str_if_empty:NT \l_stex_get_symbol_name_str {
    \msg_error:nnn{stex}{error/unknownsymbol}{#1}
  }
}

\int_new:N \l_stex_get_symbol_arity_int
\cs_new_protected:Nn \_@@_get_symbol_from_cs: {
  \stex_debug:nn{symbols}{Getting~from~cs...}
  \stex_pseudogroup_with:nn{\_stex_invoke_symbol:nnnnnnnN}{
    \cs_set:Npn \_stex_invoke_symbol:nnnnnnnN ##1 ##2 ##3 ##4 ##5 ##6 ##7 ##8 {
      \str_set:Nn \l_stex_get_symbol_mod_str {##1}
      \str_set:Nn \l_stex_get_symbol_name_str {##2}
      \int_set:Nn \l_stex_get_symbol_arity_int {##3}
      \tl_set:Nn \l_stex_get_symbol_args_tl {##4}
      \tl_set:Nn \l_stex_get_symbol_def_tl {##5}
      \tl_set:Nn \l_stex_get_symbol_type_tl {##6}
      \tl_set:Nn \l_stex_get_symbol_return_tl {##7}
      \tl_set:Nn \l_stex_get_symbol_invoke_cs {##8}
    }
    \l_@@_cs
  }
}

\cs_new_protected:Nn \_@@_get_symbol_from_string:n {
  \stex_debug:nn{symbols}{Getting~from~string~#1...}
  \seq_set_split:Nnn \l_@@_seq ? {#1}
  \seq_pop_right:NN \l_@@_seq \l_@@_name
  \seq_if_empty:NTF \l_@@_seq {
    \exp_args:No \_@@_get_from_one_string:n {#1}
  }{
    \exp_args:NNe \exp_args:Nno \_@@_get_symbol_from_modules:nn {
      \seq_use:Nn \l_@@_seq ?
    } \l_@@_name
  }
}

\cs_new_protected:Nn \_@@_sym_from_str_i:nnnn {
  \bool_lazy_or:nnTF
    {\str_if_eq_p:nn{#2}{#3}}
    {\str_if_eq_p:nn{#2}{#4}}{
      \_@@_sym_i_finish:nnnnnnnN{#1}{#4}
    }{
      \_@@_sym_i_gobble:nnnnnn
    }
}
\cs_new_protected:Nn \_@@_sym_i_gobble:nnnnnn {}

\cs_new_protected:Nn \_@@_sym_i_finish:nnnnnnnN {
  \prop_map_break:n{\seq_map_break:n{
    \str_set:Nn \l_stex_get_symbol_mod_str {#1}
    \str_set:Nn \l_stex_get_symbol_name_str {#2}
    \int_set:Nn \l_stex_get_symbol_arity_int {#3}
    \tl_set:Nn \l_stex_get_symbol_args_tl {#4}
    \tl_set:Nn \l_stex_get_symbol_def_tl {#5}
    \tl_set:Nn \l_stex_get_symbol_type_tl {#6}
    \tl_set:Nn \l_stex_get_symbol_return_tl {#7}
    \tl_set:Nn \l_stex_get_symbol_invoke_cs {#8}
  }}
}

\cs_new_protected:Nn \_@@_get_symbol_from_modules:nn {
  \stex_debug:nn{symbols}{Getting~#2~in~#1...}
  \seq_map_inline:Nn \l_stex_all_modules_seq {
    \stex_str_if_ends_with:nnT{##1}{#1}{
      \prop_map_inline:cn{c_stex_module_##1_symbols_prop}{
        \_@@_sym_from_str_i:nnnn{##1}{#2} ####2
      }
    }
  }
}

\cs_new_protected:Nn \_@@_get_from_one_string:n {
  \stex_debug:nn{symbols}{Getting~#1~anywhere...}
  \stex_iterate_symbols:n{
    %\stex_debug:nn{symbols}{>#1==##2~|~#1==##3<...}
    \bool_lazy_or:nnT
      {\str_if_eq_p:nn{#1}{##2}}
      {\str_if_eq_p:nn{#1}{##3}}{
        \stex_iterate_break:n{
          \str_set:Nn \l_stex_get_symbol_mod_str {##1}
          \str_set:Nn \l_stex_get_symbol_name_str {##3}
          \int_set:Nn \l_stex_get_symbol_arity_int {##4}
          \tl_set:Nn \l_stex_get_symbol_args_tl {##5}
          \tl_set:Nn \l_stex_get_symbol_def_tl {##6}
          \tl_set:Nn \l_stex_get_symbol_type_tl {##7}
          \tl_set:Nn \l_stex_get_symbol_return_tl {##8}
          \tl_set:Nn \l_stex_get_symbol_invoke_cs {##9}
        }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Notations}
%    \begin{macrocode}
%<@@=stex_notations>
%    \end{macrocode}
%
% \begin{macro}{\_stex_map_args:N}
%    \begin{macrocode}
\cs_new:Nn \_stex_map_args:N {
  \tl_if_empty:NF \l_stex_get_symbol_args_tl {
    \exp_after:wN \_@@_map_args_i:w \exp_after:wN 
    #1 \l_stex_get_symbol_args_tl \_@@_args_end:
  }
}
\cs_new:Npn \_@@_map_args_i:w #1 #2 #3 #4 #5 \_@@_args_end: {
  #1 #2 #3 { #4 }
  \tl_if_empty:nF{#5}{
    \_@@_map_args_i:w #1 #5 \_@@_args_end:
  }
}
%    \end{macrocode}
% \end{macro}
%
% Notation components:
%
% \begin{macro}{\STEXInternalTermMathOMSOrOMViii,\_stex_term_oms_or_omv:nn,\_stex_term_oms:nn,\_stex_term_omv:nn}
%    \begin{macrocode}
\tl_new:N \l_stex_current_term_tl
\cs_new_protected:Nn \_stex_annotate_force_break:n {
  \stex_annotate_invisible:n{~}
  #1
  \stex_annotate_invisible:n{~}
}

\cs_new_protected:Nn \_@@_do_headterm:nn {
  \stex_annotate:nn{
    shtml:term=complex,
    shtml:head={\l_stex_current_symbol_str},
    shtml:notationid={#1}
  }{
    \_stex_annotate_force_break:n{
      \stex_annotate_invisible:nn{shtml:headterm={}}{
        {\bool_set_true:N \l_stex_allow_semantic_bool
          \l_stex_current_term_tl
        }
      }
    }
    #2
  }
}

\cs_new_protected:Npn \STEXInternalTermMathOMSOrOMViii #1 #2 #3 {
  \_stex_maybe_brackets:nn{#2}{
    \_stex_term_oms_or_omv:nn{#1}{#3}
  }
}
\cs_new_protected:Nn \_stex_term_oms:nn {
  \tl_if_empty:NTF \l_stex_current_term_tl {
    \stex_annotate:nn{
      shtml:term=OMID,
      shtml:head={\l_stex_current_symbol_str},
      shtml:notationid={#1}
    }{
       \_stex_annotate_force_break:n{#2}
    }
  }{
    \_@@_do_headterm:nn{#1}{#2}
  }
}

\cs_new_protected:Nn \_stex_term_omv:nn {
  \tl_if_empty:NTF \l_stex_current_term_tl {
    \stex_annotate:nn{
      shtml:term=OMV,
      shtml:head={\l_stex_current_symbol_str},
      shtml:notationid={#1}
    }{
      \_stex_annotate_force_break:n{#2}
    }
  }{
    \_@@_do_headterm:nn{#1}{#2}
  }
}
\cs_set_eq:NN \_stex_term_oms_or_omv:nn \_stex_term_oms:nn
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\STEXInternalTermMathOMAiii,\_stex_term_oma:nn}
%    \begin{macrocode}
\cs_new_protected:Npn \STEXInternalTermMathOMAiii #1 #2 #3 { 
  \_stex_maybe_brackets:nn{#2}{
    \_stex_term_oma:nn{#1}{#3}
  }
}
\cs_new_protected:Nn \_stex_term_oma:nn {
  \tl_if_empty:NTF \l_stex_current_term_tl {
    \stex_annotate:nn{
      shtml:term=OMA,
      shtml:head={\l_stex_current_symbol_str},
      shtml:notationid={#1}
    }{
      \_stex_annotate_force_break:n{#2}
    }
  }{
    \stex_annotate:nn{
      shtml:term=OMA,
      shtml:head={\l_stex_current_symbol_str},
      shtml:notationid={#1}
    }{
      \_stex_annotate_force_break:n{
        \stex_annotate_invisible:nn{shtml:headterm={}}{{
          \bool_set_true:N \l_stex_allow_semantic_bool
          \l_stex_current_term_tl
        }}
        #2
      }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\STEXInternalTermMathOMBiii,\_stex_term_omb:nn}
%    \begin{macrocode}
\cs_new_protected:Npn \STEXInternalTermMathOMBiii #1 #2 #3 { 
  \_stex_maybe_brackets:nn{#2}{
    \_stex_term_omb:nn{#1}{#3}
  }
}
\cs_new_protected:Nn \_stex_term_omb:nn {
  \tl_if_empty:NTF \l_stex_current_term_tl {
    \stex_annotate:nn{
      shtml:term=OMBIND,
      shtml:head={\l_stex_current_symbol_str},
      shtml:notationid={#1}
    }{
      \_stex_annotate_force_break:n{#2}
    }
  }{
    \stex_annotate:nn{
      shtml:term=OMBIND,
      shtml:head={\l_stex_current_symbol_str},
      shtml:notationid={#1}
    }{
      \_stex_annotate_force_break:n{
        \stex_annotate_invisible:nn{shtml:headterm={}}{{
          \bool_set_true:N \l_stex_allow_semantic_bool
          \l_stex_current_term_tl
        }}
        #2
      }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% |notation| arguments:
%    \begin{macrocode}
\stex_keys_define:nnnn{notation}{
  \str_clear:N \l_stex_key_variant_str
  \str_clear:N \l_stex_key_prec_str
  \str_clear:N \l_stex_key_op_tl
  \str_clear:N \l_stex_key_hints_str
}{
  variant    .str_set_x:N  = \l_stex_key_variant_str ,
  prec       .str_set_x:N  = \l_stex_key_prec_str ,
  op         .tl_set:N     = \l_stex_key_op_tl ,
  hints      .str_set_x:N  = \l_stex_key_hints_str ,
  unknown    .code:n       = {
    \str_set:Nx \l_stex_key_variant_str \l_keys_key_str
  }
}{style}
% \_stex_do_deprecation:n{#2}
%    \end{macrocode}
%
% \begin{macro}{\notation}
%    \begin{macrocode}
\stex_new_stylable_cmd:nnnn {notation} { s m O{}} {
  \stex_keys_set:nn{notation}{#3}
  \stex_get_symbol:n{#2}
  \stex_notation_top:nnw{
    \l_stex_get_symbol_mod_str ? \l_stex_get_symbol_name_str
  }{
    \IfBooleanTF#1{
      \_stex_notation_set_default:n{
        \l_stex_get_symbol_mod_str ? \l_stex_get_symbol_name_str
      }
    }{}
    \stex_if_smsmode:F{
      \group_begin:
      \_stex_notation_styledefs:
      \stex_style_apply:
      \group_end:
    }
    \stex_smsmode_do:
  }
}{}

\stex_deactivate_macro:Nn \notation {module~environments}
\stex_every_module:n {\stex_reactivate_macro:N \notation}
\stex_sms_allow_escape:N \notation
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_notation_top:nnw}
%    \begin{macrocode}
\cs_new_protected:Npn \stex_notation_top:nnw #1 #2 {
  \stex_notation_parse_and_then:nw {
    \_stex_notation_check:
    \_stex_notation_add:n{#1}
    \_@@_do_html:n{#1}
    #2
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_notation_parse_and_then:nw}
% requires the above keys, \cs{l_stex_get_symbol_arity_int}, and
% \cs{l_stex_get_symbol_args_tl}
%    \begin{macrocode}
\cs_new_protected:Npn \stex_notation_parse_and_then:nw {
  \tl_if_empty:NF \l_stex_key_op_tl {
    \tl_set:Nx \l_stex_key_op_tl { \exp_not:N\comp {
      \exp_args:No \exp_not:n \l_stex_key_op_tl
    } }
  }
  \int_compare:nNnTF \l_stex_get_symbol_arity_int = 0
  \_@@_do_const:nw \_@@_do_fun:nw
}
%    \end{macrocode}
% Arity$>0$?
%    \begin{macrocode}
\cs_new_protected:Npn \_@@_do_const:nw #1 #2 {
  \stex_debug:nn{notation}{Constant~notation~\exp_not:n{#2}}
  % precedences
  \seq_clear:N \l_@@_precs_seq
  \str_if_empty:NTF \l_stex_key_prec_str {
    \tl_set:No \l_@@_opprec_tl { \neginfprec }
  }{
    \str_if_eq:onTF \l_stex_key_prec_str {nobrackets}{
      \tl_set:No \l_@@_opprec_tl { \neginfprec }
    }{
      \tl_set_eq:NN \l_@@_opprec_tl \l_stex_key_prec_str
    }
  }
  \exp_args:NNe
  \cs_set_nopar:Npn \l_stex_notation_macrocode_cs {
    \STEXInternalTermMathOMSOrOMViii 
      { \l_stex_key_variant_str }
      { \l_@@_opprec_tl } 
      { \exp_not:n { \comp{ #2 } } }
    \STEXInternalSymbolAfterInvokationTL
  }
  \stex_debug:nn{notation}{Notation:~\meaning\l_stex_notation_macrocode_cs}
  #1
}

\int_new:N \l_@@_currarg_int
\cs_new_protected:Npn \_@@_do_fun:nw #1 #2 {
  %\stex_debug:nn{notation}{Function~notation~\tl_to_str:n{#2}}
  \seq_clear:N \l_@@_precs_seq

  \str_if_empty:NTF \l_stex_key_prec_str {
    \tl_set:Nn \l_@@_opprec_tl { 0 }
    \int_step_inline:nn \l_stex_get_symbol_arity_int {
      \seq_put_right:Nn \l_@@_precs_seq {0}
    }
  }{
    \str_if_eq:onTF \l_stex_key_prec_str {nobrackets}{
      \stex_debug:nn{notation}{No~brackets}
      \tl_set:No \l_@@_opprec_tl { \neginfprec }
      \int_step_inline:nn \l_stex_get_symbol_arity_int {
        \exp_args:NNo \seq_put_right:Nn \l_@@_precs_seq \infprec
      }
    }\_@@_parse_precs:
  }

  \_@@_oma_or_omb:n{#2}

  \tl_set_eq:NN \l_@@_rem_args \l_stex_get_symbol_args_tl
  %\int_zero:N \l_@@_currarg_int
  \seq_set_eq:NN \l_@@_rem_precs_seq \l_@@_precs_seq
  \tl_clear:N \l_@@_dummys_tl
  \tl_set:Nn \l_@@_after_tl{#1}

  \stex_debug:nn{notation}{Doing~notation^^J\l_stex_get_symbol_args_tl^^J
    \meaning\l_@@_precs_seq^^J\the\l_stex_get_symbol_arity_int
  }
  \_@@_args:
}

%    \end{macrocode}
% OMA or OMB?
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_oma_or_omb:n {
  \cs_set_eq:NN \_@@_do_ab_next:n \_@@_do_oma:n
  \_stex_map_args:N \_@@_check_b:nnn
  \_@@_do_ab_next:n{#1}
}

\cs_new:Nn \_@@_check_b:nnn {
  \str_case:nn #2 {
    b {\cs_set_eq:NN \_@@_do_ab_next:n \_@@_do_omb:n}
    B {\cs_set_eq:NN \_@@_do_ab_next:n \_@@_do_omb:n}
  }
}

\cs_new_protected:Nn \_@@_do_oma:n {
  \str_set:Nn \l_@@_missing_str {#1}
  \tl_clear:N \l_@@_missing_tl
  \_stex_map_args:N \_@@_add_missing_args:nnn
  \exp_args:Nne \use:nn
  {
  \cs_generate_from_arg_count:NNnn \l_stex_notation_macrocode_cs
  \cs_set:Npn \l_stex_get_symbol_arity_int } { {
    \STEXInternalTermMathOMAiii
      { \l_stex_key_variant_str }
      { \l_@@_opprec_tl } 
      { \exp_not:n { #1 } \l_@@_missing_tl}
    \STEXInternalSymbolAfterInvokationTL
  } }
}

\cs_new:Nn \_@@_add_missing_args:nnn {
  \exp_args:NNe \str_if_in:NnF \l_@@_missing_str {\c_hash_str\c_hash_str#1}{
    \tl_put_right:Nn \l_@@_missing_tl{\STEXinvisible{## #1}}
  }
}

\cs_new_protected:Nn \_@@_do_omb:n {
  \str_set:Nn \l_@@_missing_str {#1}
  \tl_clear:N \l_@@_missing_tl
  \_stex_map_args:N \_@@_add_missing_args:nnn
  \exp_args:Nne \use:nn
  {
  \cs_generate_from_arg_count:NNnn \l_stex_notation_macrocode_cs
  \cs_set:Npn \l_stex_get_symbol_arity_int } { {
    \STEXInternalTermMathOMBiii
      { \l_stex_key_variant_str }
      { \l_@@_opprec_tl } 
      { \exp_not:n { #1  } \l_@@_missing_tl }
    \STEXInternalSymbolAfterInvokationTL
  } }
}
%    \end{macrocode}
% Argument parsing / manipulating:
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_args: {
  \tl_if_empty:NTF \l_@@_rem_args \_@@_finalize: {
    \exp_after:wN \_@@_do_next_arg:nnnw \l_@@_rem_args \_@@_args_end:
  }
}

\cs_new_protected:Npn \_@@_do_next_arg:nnnw #1 #2 #3 #4 \_@@_args_end: {
  \tl_set:Nn \l_@@_rem_args {#4}
  \str_if_eq:nnTF {#2}{a}{
    \_@@_assoc_arg:nnn{#1}{a}
  }{
    \str_if_eq:nnTF {#2}{B}{
      \_@@_assoc_arg:nnn{#1}{B}
    }{
      \_@@_simple_arg:nn{#1}{#2}
    }
  }
}

\cs_new_protected:Nn \_@@_simple_arg:nn {
  \seq_pop_left:NN \l_@@_rem_precs_seq \l_@@_prec_str
  \tl_put_right:Nx \l_@@_dummys_tl {{
    \STEXInternalTermMathArgiiii
      {#2}{#1}
      {\l_@@_prec_str}
      {#### #1}
  }}
  \_@@_args:
}

\cs_new_protected:Nn \_@@_assoc_arg:nnn {
  \cs_generate_from_arg_count:NNnn \l_tmpa_cs \cs_set:Npn
    \l_stex_get_symbol_arity_int {\exp_not:n{#3}}
  \exp_args:Nne \use:nn{\def\l_tmpa_cs##1 ##2}{{
    \exp_args:NNe \use:nn \l_tmpa_cs {\_stex_map_args:N \_@@_make_simple_arg_in_a:nnn}
  }}

  \seq_pop_left:NN \l_@@_rem_precs_seq \l_@@_prec_str
  \tl_put_right:Nx \l_@@_dummys_tl { {
    \STEXInternalTermMathAssocArgiiiii
      { #1 }
      { \l_@@_prec_str }
      { #### #1 }
      { \exp_args:No \exp_not:n{\l_tmpa_cs \STEXInternalAssocArgMarkerI \STEXInternalAssocArgMarkerII} }
      {#2}
  } }
  \_@@_args:
}

\cs_new:Nn \_@@_make_simple_arg_in_a:nnn {
  \str_case:nnF #2 {
    a {{}}
    B {{}}
  }{{
    \STEXInternalTermMathArgiiii{#2}{#1}{
      \seq_item:Nn \l_@@_precs_seq #1
    }{#### #1}
  }}
}

\cs_new_protected:Nn \_@@_finalize: {
  \exp_args:Nnx \use:nn {
    \cs_generate_from_arg_count:NNnn \l_stex_notation_macrocode_cs
    \cs_set_nopar:Npn \l_stex_get_symbol_arity_int
  }{{
    \exp_after:wN \exp_after:wN \exp_after:wN
    \exp_not:n \exp_after:wN \exp_after:wN \exp_after:wN 
    { \exp_after:wN \l_stex_notation_macrocode_cs \l_@@_dummys_tl}
  }}
  \stex_debug:nn{notation}{Notation:~\meaning\l_stex_notation_macrocode_cs}
  \l_@@_after_tl
}

\cs_new_protected:Nn \_@@_parse_precs: {
  \stex_debug:nn{notation}{parsing~precedence~\l_stex_key_prec_str}
  \seq_set_split:NnV \l_@@_seq ; \l_stex_key_prec_str
  \seq_pop_left:NNTF \l_@@_seq \l_@@_str {
    \tl_set_eq:NN \l_@@_opprec_tl \l_@@_str
    \seq_pop_left:NNT \l_@@_seq \l_@@_str {
      \exp_args:NNo \seq_set_split:NnV \l_@@_seq 
        {\tl_to_str:n{x}} \l_@@_str
    }
  }{
    \tl_set:No \l_@@_opprec_tl { 0 }
  }
  \int_step_inline:nn \l_stex_get_symbol_arity_int {
    \seq_pop_left:NNTF \l_@@_seq \l_@@_str {
      \seq_put_right:No \l_@@_precs_seq \l_@@_str
    }{
      \seq_put_right:No \l_@@_precs_seq \l_@@_opprec_tl
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\cs_new_protected:Nn \_stex_notation_check: {
  \stex_check_term:n{
    \str_set:Nn \l_stex_current_symbol_str {test}
    \tl_set:Nn \STEXInternalSymbolAfterInvokationTL {}
    \cs_set:Npn \comp ##1 {##1}
    \stex_debug:nn{check_terms}{Checking~notation...}
    \exp_args:Nne \use:nn{\l_stex_notation_macrocode_cs}{
      \_stex_notation_make_args:
    }
  }
}

\cs_new_protected:Nn \_stex_notation_add:n {
  \stex_module_add_notation:eoexo{#1}\l_stex_key_variant_str
    {\int_use:N \l_stex_get_symbol_arity_int}{
    \stex_macro_body:N \l_stex_notation_macrocode_cs
  }\l_stex_key_op_tl
}

\cs_new:Nn \_@@_make_arg_html:nnn {
  \str_case:nnF #2 {
    a {{
      \stex_annotate:nn{shtml:argnum=#1a}{x},
      \stex_annotate:nn{shtml:argnum=#1b}{x}
    }}
    B {{
      \stex_annotate:nn{shtml:argnum=#1a}{x},
      \stex_annotate:nn{shtml:argnum=#1b}{x}
    }}
  }{
    {
      \stex_annotate:nn{shtml:argnum=#1}{x}
    }
  }
}

\cs_new_protected:Nn \_stex_notation_do_html_inner:n {
  \stex_annotate_invisible:nn { 
    shtml:notation={#1},
    shtml:notationfragment={\l_stex_key_variant_str},
    shtml:precedence={\l_@@_opprec_tl}
  }{
    \stex_pseudogroup_with:nn{\STEXInternalTermMathArgiiii\STEXInternalTermMathAssocArgiiiii}{
      \cs_set:Npn \STEXInternalTermMathArgiiii ##1 ##2 ##3 ##4 { 
        \stex_annotate:nn{shtml:precedence=##3}{##4} 
      }
      \cs_set_eq:NN \_@@_old_assoc_cs \STEXInternalTermMathAssocArgiiiii
      \cs_set:Npn \STEXInternalTermMathAssocArgiiiii ##1 ##2 ##3 ##4 ##5 {
        \stex_annotate:nn{shtml:argnum=##1}{
          \_@@_old_assoc_cs{##1}{##2}{##3}{##4}{##5}
        }
      }
      $
        %\group_begin:
        \tl_set:Nn \l_stex_current_symbol_str {#1}
        \stex_annotate:nn{shtml:notationcomp={}}{
          \exp_args:Nne \use:nn \l_stex_notation_macrocode_cs{
            \_stex_map_args:N \_@@_make_arg_html:nnn
          }
        }
      $
    }
    \tl_if_empty:NF \l_stex_key_op_tl {
      $
      \tl_set:Nn \l_stex_current_symbol_str {#1}
      \stex_annotate:nn{shtml:notationopcomp={}}{
        \_stex_term_oms:nn{\l_stex_key_variant_str}{\l_stex_key_op_tl}
      }
      $
    }
  }
}

\cs_new_protected:Npn \_@@_do_html:n {
  \stex_if_do_html:TF {
    \def\comp{\_comp}
    \_stex_notation_do_html_inner:n
  }\use_none:n
}

\cs_new:Nn \_stex_notation_make_args: {
  \_stex_map_args:N \_@@_make_arg:nnn
}

\cs_new:Nn \_@@_make_arg:nnn  {
  \str_case:nnF #2 {
    a {{
        a\c_math_subscript_token{#1,1},
        a\c_math_subscript_token{#1,2}
      }}
    B {{
        B\c_math_subscript_token{#1,1},
        B\c_math_subscript_token{#1,2}
      }}
  }{
    {{#2}\c_math_subscript_token{#1}}
  }
}

\cs_new_protected:Nn \_stex_notation_styledefs: {
  \str_set_eq:NN\thisnotationvariant\l_stex_key_variant_str
  \str_set:Nn \thisdeclname \l_stex_get_symbol_name_str
  \tl_set:Nx \thisdecluri {\l_stex_get_symbol_mod_str ? \l_stex_get_symbol_name_str}
  \def\thisnotation{
    $
    \tl_set_eq:NN \l_stex_current_symbol_str\thisdecluri
    \exp_args:Nne \use:nn{\l_stex_notation_macrocode_cs}{
      \_stex_notation_make_args:
    }$
  }
}

\cs_new_protected:Nn \_stex_notation_set_default:n{
  \tl_if_empty:NF \l_stex_key_op_tl {
    \tl_set:Nx \l_stex_key_op_tl { \exp_not:N\comp {
      \exp_args:No \exp_not:n \l_stex_key_op_tl
    } }
  }
  \stex_module_add_notation:eoexo{#1}{}
    {\int_use:N \l_stex_get_symbol_arity_int}{
    \stex_macro_body:N \l_stex_notation_macrocode_cs
  }\l_stex_key_op_tl
}
%    \end{macrocode}
%
% \begin{macro}{\varnotation}
%    \begin{macrocode}
\stex_new_stylable_cmd:nnnn {varnotation} { s m O{}} {
  \stex_keys_set:nn{notation}{#3}
  \stex_get_var:n{#2}
  \stex_notation_parse_and_then:nw {
    \_stex_notation_check:
    \str_set_eq:NN \l_stex_key_name_str \l_stex_get_symbol_name_str
    \_stex_vardecl_notation_macro:
    \IfBooleanTF#1{
      \_stex_notation_set_default:n{\l_stex_get_symbol_name_str}
    }{}
    \group_begin:
    \tl_set_eq:NN \thisvarname \l_stex_get_symbol_name_str
    \tl_clear:N \thisstyle
    \str_set_eq:NN\thisnotationvariant\l_stex_key_variant_str
    \def\thisnotation{
      $\let\l_stex_current_symbol_str\thisvarname
        \def\comp{\_varcomp}\exp_args:Nne \use:nn{\l_stex_notation_macrocode_cs}{
        \_stex_notation_make_args:
      }$
    }
    \stex_style_apply:
    \group_end:
  }
}{}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setnotation}
%    \begin{macrocode}
\cs_new_protected:Npn \setnotation #1 #2 {
  \TODO
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\symdef}
%    \begin{macrocode}
\stex_keys_define:nnnn{symdef}{}{}{decl,notation}

\cs_new_protected:Nn \_stex_symdef_styledefs: {
  \tl_set:Nx \thisdecluri {\l_stex_current_module_str ? \l_stex_key_name_str}
  \tl_set_eq:NN \thisdeclname \l_stex_key_name_str
  \tl_clear:N \thisstyle
  \str_set_eq:NN\thisnotationvariant\l_stex_key_variant_str
  \def\thisnotation{
    $\let\l_stex_current_symbol_str\thisdecluri
      \def\comp{\_comp}\exp_args:Nne \use:nn{\l_stex_notation_macrocode_cs}{
      \_stex_notation_make_args:
    }$
  }
}

\stex_new_stylable_cmd:nnnn {symdef} { m O{}} {
  \stex_keys_set:nn{symdef}{#2}
  \str_set:Nx \l_stex_macroname_str { #1 }
  \stex_symdecl_top:n{#1}

  \stex_debug:nn{symdef}{Doing~\l_stex_current_module_str ? \l_stex_key_name_str}
  \stex_notation_top:nnw{
    \l_stex_current_module_str ? \l_stex_key_name_str
  }{
    \stex_if_smsmode:F{
      \group_begin:
      \_stex_symdef_styledefs:
      \stex_style_apply:
      \group_end:
    }
    \stex_smsmode_do:
  }
}{}

\stex_deactivate_macro:Nn \symdef {module~environments}
\stex_every_module:n {\stex_reactivate_macro:N \symdef}
\stex_sms_allow_escape:N \symdef
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Variables}
%    \begin{macrocode}
%<@@=stex_vars>
%    \end{macrocode}
%
% \begin{macro}{\vardef}
%    \begin{macrocode}
\tl_new:N \l_stex_variables_prop
\cs_new_protected:Nn \_stex_variable:nnnnnnnN {}

\stex_new_stylable_cmd:nnnn {vardef} { m O{}} {
  \stex_keys_set:nn{symdef}{#2}
  \str_set:Nx \l_stex_macroname_str { #1 }
  \str_if_empty:NT \l_stex_key_name_str {
    \str_set:Nx \l_stex_key_name_str { #1 }
  }

  \stex_symdecl_do:
  \_stex_symdecl_check_terms:
  \_@@_add:
  \_@@_macro:
  \_@@_html:

  \int_set:Nn \l_stex_get_symbol_arity_int {\l_stex_get_symbol_arity_int}
  \stex_debug:nn{vardef}{Doing~\l_stex_key_name_str}
  \tl_set_eq:NN \l_stex_get_symbol_return_tl \l_stex_key_return_tl

  \stex_notation_parse_and_then:nw {
    \_stex_notation_check:
    \_stex_vardecl_notation_macro:
    \stex_if_do_html:T {
      \def\comp{\_varcomp}
      \_stex_notation_do_html_inner:n \l_stex_key_name_str
    }

    \group_begin:
    \tl_set_eq:NN \thisvarname \l_stex_key_name_str
    \tl_clear:N \thisstyle
    \str_set_eq:NN\thisnotationvariant\l_stex_key_variant_str
    \def\thisnotation{
      $\let\l_stex_current_symbol_str\thisvarname
        \def\comp{\_varcomp}\exp_args:Nne \use:nn{\l_stex_notation_macrocode_cs}{
        \_stex_notation_make_args:
      }$
    }
    \stex_style_apply:
    \group_end:
  }
}{}

\cs_new_protected:Nn \_@@_add: {
  \exp_args:NNNo \exp_args:NNnx 
  \prop_put:Nnn \l_stex_variables_prop \l_stex_key_name_str {
    {\l_stex_macroname_str}
    {\l_stex_key_name_str}
    {\int_use:N \l_stex_get_symbol_arity_int}
    {\l_stex_get_symbol_args_tl}
    {\exp_args:No \exp_not:n \l_stex_key_def_tl}
    {\exp_args:No \exp_not:n \l_stex_key_type_tl}
    {\exp_args:No \exp_not:n \l_stex_key_return_tl}
    \stex_invoke_symbol:
  }
}

\cs_new_protected:Nn \_@@_macro: {
  \tl_set:cx{\l_stex_macroname_str}{
    \_stex_invoke_variable:nnnnnnN
      {\l_stex_key_name_str}
      {\int_use:N \l_stex_get_symbol_arity_int}
      {\l_stex_get_symbol_args_tl}
      {\exp_args:No \exp_not:n \l_stex_key_def_tl}
      {\exp_args:No \exp_not:n \l_stex_key_type_tl}
      {\exp_args:No \exp_not:n \l_stex_key_return_tl}
      \stex_invoke_symbol:
  }
}

\cs_new_protected:Nn \_@@_html: {
  \stex_if_do_html:T {
    \exp_args:Ne \stex_annotate_invisible:nn {
      shtml:vardef = {\l_stex_key_name_str},
      shtml:args = {\l_stex_key_args_str}
      \str_if_empty:NF \l_stex_macroname_str {,
        shtml:macroname={\l_stex_macroname_str}
      }
      \str_if_empty:NF \l_stex_key_assoc_str {,
        shtml:assoctype={\l_stex_key_assoc_str}
      }
      \str_if_empty:NF \l_stex_key_role_str {,
        shtml:role={\l_stex_key_role_str}
      }
      \str_if_empty:NF \l_stex_key_reorder_str {,
        shtml:reorderargs={\l_stex_key_reorder_str}
      }
    }{\hbox\bgroup
      \_stex_annotate_force_break:n{
        \tl_if_empty:NF \l_stex_key_type_tl {
          \stex_annotate:nn{shtml:type={}}{$\l_stex_key_type_tl$}
        }
        \tl_if_empty:NF \l_stex_key_def_tl {
          \stex_annotate:nn{shtml:definiens={}}{$\l_stex_key_def_tl$}
        }
        \tl_if_empty:NF \l_stex_key_return_tl{
          \exp_args:Nno \use:n{
          \cs_generate_from_arg_count:NNnn \l_@@_cs
          \cs_set:Npn \l_stex_get_symbol_arity_int} \l_stex_key_return_tl
          \tl_set:Nx \l_@@_args_tl {\_stex_map_args:N \_stex_return_args:nnn}
          \stex_annotate:nn{shtml:returntype={}}{
            $\exp_after:wN \l_@@_cs \l_@@_args_tl!$}
        }
        \tl_if_empty:NF \l_stex_key_argtypes_tl {
          \stex_annotate:nn{shtml:argtypes={}}{
            \_stex_annotate_force_break:n{
              \clist_map_inline:Nn \l_stex_key_argtypes_tl {
                \stex_annotate:nn{shtml:type={}}{$##1$}
              }
            }
          }
        }
      }
    \egroup}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\_stex_vardecl_notation_macro:}
%    \begin{macrocode}
\cs_new_protected:Nn \_stex_vardecl_notation_macro: {
  \cs_set_eq:cN {l_stex_notation_
    \l_stex_key_name_str _
    \l_stex_key_variant_str _cs
  }\l_stex_notation_macrocode_cs
  \cs_if_exist:cF {l_stex_notation_\l_stex_key_name_str __cs}{
    \cs_set_eq:cc{l_stex_notation_\l_stex_key_name_str __cs}{
      l_stex_notation_\l_stex_key_name_str _
      \l_stex_key_variant_str _cs
    }
  }
  \tl_if_empty:NF \l_stex_key_op_tl {
    \tl_set:cx {l_stex_notation_\l_stex_key_name_str _op_
    \l_stex_key_variant_str _cs}{
      \exp_not:N\comp{\exp_args:No\exp_not:n\l_stex_key_op_tl}
    }
    \cs_if_exist:cF {l_stex_notation_\l_stex_key_name_str _op__cs}{
      \cs_set_eq:cc{l_stex_notation_\l_stex_key_name_str _op__cs}{
        l_stex_notation_\l_stex_key_name_str _op_
        \l_stex_key_variant_str _cs
      }
    }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_get_symbol_or_var:n,\stex_get_var:n}
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_set_vars:nnnnnnN {
  \stex_debug:nn{symbols}{Variable~#1~found}
  \cs_set:Npn \_stex_variable:nnnnnnnN ##1 ##2 ##3 ##4 ##5 ##6 ##7 ##8 {}
  \str_clear:N \l_stex_get_symbol_mod_str
  \str_set:Nn \l_stex_get_symbol_name_str {#1}
  \int_set:Nn \l_stex_get_symbol_arity_int {#2}
  \tl_set:Nn \l_stex_get_symbol_args_tl {#3}
  \tl_set:Nn \l_stex_get_symbol_def_tl {#4}
  \tl_set:Nn \l_stex_get_symbol_type_tl {#5}
  \tl_set:Nn \l_stex_get_symbol_return_tl {#6}
  \tl_set:Nn \l_stex_get_symbol_invoke_cs {#7}
}

\cs_new_protected:Nn \_@@_get_var:n {
  \prop_map_inline:Nn \l_stex_variables_prop {
    \_@@_check_var:nnnnnnnnN {#1} ##2
  }
}

\cs_new_protected:Nn \_@@_check_var:nnnnnnnnN {
  \str_if_eq:nnTF{#1}{#2}{
    \prop_map_break:n{\_@@_set_vars:nnnnnnN {#3}{#4}{#5}{#6}{#7}{#8}#9}
  }{
    \str_if_eq:nnT{#1}{#3}{
      \prop_map_break:n{\_@@_set_vars:nnnnnnN {#3}{#4}{#5}{#6}{#7}{#8}#9}
    }
  }
}

\cs_new_protected:Nn \stex_get_var:n {
  \str_clear:N \l_stex_get_symbol_name_str
  \_@@_get_var:n{#1}
  \str_if_empty:NT \l_stex_get_symbol_name_str {
    \msg_error:nnn{stex}{error/unknownsymbol}{#1}
  }
}

\cs_new_protected:Nn \stex_get_symbol_or_var:n {
  \str_clear:N \l_stex_get_symbol_name_str
  \_@@_get_var:n{#1}
  \str_if_empty:NT \l_stex_get_symbol_name_str {
    \stex_debug:nn{symbols}{No~variable~#1~found}
    \stex_get_symbol:n{#1}
  }
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
%
% \begin{sfragment}{Sequences}
%    \begin{macrocode}
%<@@=stex_seqs>
%    \end{macrocode}
%
% \begin{macro}{\varseq}
%    \begin{macrocode}

\stex_new_stylable_cmd:nnnn {varseq}{m O{} m} {
  \stex_keys_set:nn{symdef}{#2}
  \str_set:Nx \l_stex_macroname_str { #1 }
  \str_if_empty:NT \l_stex_key_name_str {
    \str_set:Nx \l_stex_key_name_str { #1 }
  }
  \str_if_empty:NT \l_stex_key_args_str {
    \str_set:Nn \l_stex_key_args_str {1}
  }
  \stex_symdecl_do:

  \tl_set_eq:NN \l_stex_get_symbol_return_tl \l_stex_key_return_tl
  \clist_set:Nn \l_@@_range_clist {#3}

  \stex_notation_parse_and_then:nw {
    \_@@_varseq_html:
    \_@@_check_terms:
    \_@@_add_varseq_range:
    \_@@_varseq_macro_range:
    \_stex_notation_check:
    \_stex_vardecl_notation_macro:

    \group_begin:
    \tl_set_eq:NN \thisvarname \l_stex_key_name_str
    \tl_clear:N \thisstyle
    \str_set_eq:NN\thisnotationvariant\l_stex_key_variant_str
    \def\thisnotation{
      $\let\l_stex_current_symbol_str\thisvarname
        \def\comp{\_varcomp}\exp_args:Nne \use:nn{\l_stex_notation_macrocode_cs}{
        \_@@_make_args:
      }$
    }
    \stex_style_apply:
    \group_end:
  }
}{}

\cs_new_protected:Nn \_@@_do_varseq:nnnn {
  #3

  \int_compare:nNnT \l_stex_get_symbol_arity_int < \l_@@_seq_arity_int {
    \TODOe Error
  }
  \exp_args:Nx \str_if_eq:nnF {\exp_args:Ne \tl_head:n {\tl_tail:N \l_stex_get_symbol_args_tl}}{i}{
    \TODOf Error
  }
  #4

  \stex_debug:nn{vardef}{Doing~\l_stex_key_name_str :^^J
    arity:\int_use:N\l_stex_get_symbol_arity_int^^J
    seq~arity:\int_use:N\l_@@_seq_arity_int
  }

  \int_compare:nNnTF \l_stex_get_symbol_arity_int > \l_@@_seq_arity_int {
    \l_@@_do_two_notations:
  }{
    \l_@@_do_one_notation:
  }
}

\cs_new_protected:Nn \l_@@_do_two_notations: {
  \tl_set:Nx \l_@@_old_arity {\int_use:N \l_stex_get_symbol_arity_int}
  \int_set_eq:NN \l_stex_get_symbol_arity_int \l_@@_seq_arity_int
  \str_set_eq:NN \l_@@_name_str \l_stex_key_name_str
  \exp_args:NNo \str_set:Nn \l_stex_key_name_str {\l_stex_key_name_str!}
  \tl_set_eq:NN \l_@@_args_tl \l_stex_get_symbol_args_tl
  \tl_set:Nx \l_stex_get_symbol_args_tl {
    \int_step_function:nN \l_@@_seq_arity_int \_@@_make_argls:n
  }
  \stex_debug:nn{vardef}{first~notation:
    \int_use:N \l_stex_get_symbol_arity_int,~
    \meaning\l_stex_get_symbol_args_tl
  }
  \stex_notation_parse_and_then:nw {
    \_stex_vardecl_notation_macro:
    \int_set:Nn \l_stex_get_symbol_arity_int \l_@@_old_arity
    \str_set_eq:NN \l_stex_key_name_str \l_@@_name_str
    \tl_set_eq:NN \l_stex_get_symbol_args_tl \l_@@_args_tl 
    \stex_debug:nn{vardef}{second~notation:
      \int_use:N \l_stex_get_symbol_arity_int,~
      \meaning\l_stex_get_symbol_args_tl
    }
    \l_@@_do_one_notation:
  }
}

\cs_new_protected:Nn \l_@@_do_one_notation: {
  \stex_notation_parse_and_then:nw {
    \_stex_notation_check:
    \_stex_vardecl_notation_macro:

    \group_begin:
    \tl_set_eq:NN \thisvarname \l_stex_key_name_str
    \tl_clear:N \thisstyle
    \str_set_eq:NN\thisnotationvariant\l_stex_key_variant_str
    \def\thisnotation{
      $\let\l_stex_current_symbol_str\thisvarname
        \def\comp{\_varcomp}\exp_args:Nne \use:nn{\l_stex_notation_macrocode_cs}{
        \_@@_make_args:
      }$
    }
    \stex_style_apply:
    \group_end:
  }
}

\cs_new:Nn \_@@_make_argls:n {
  #1\tl_to_str:n{i}{\c_dollar_str#1}
}

\cs_new_protected:Nn \_@@_add_varseq_range: { 
  \exp_args:NNNo \exp_args:NNnx 
  \prop_put:Nnn \l_stex_variables_prop \l_stex_key_name_str {
    {\l_stex_macroname_str}
    {\l_stex_key_name_str}
    {\int_use:N \l_stex_get_symbol_arity_int}
    {\l_stex_get_symbol_args_tl}
    {\exp_args:No \exp_not:n \l_stex_key_def_tl}
    {\int_use:N \l_stex_get_symbol_arity_int {\exp_args:No \exp_not:n \l_@@_range_clist}}
    {\exp_args:No \exp_not:n \l_stex_key_return_tl}
    \stex_invoke_sequence_range:
  }
}


\cs_new_protected:Nn \_@@_varseq_macro_range: { 
  \tl_set:cx{\l_stex_macroname_str}{
    \_stex_invoke_variable:nnnnnnN
      {\l_stex_key_name_str}
      {\int_use:N \l_stex_get_symbol_arity_int}
      {\l_stex_get_symbol_args_tl}
      {\exp_args:No \exp_not:n \l_stex_key_def_tl}
      {\int_use:N \l_stex_get_symbol_arity_int {\exp_args:No \exp_not:n \l_@@_range_clist}}
      {\exp_args:No \exp_not:n \l_stex_key_return_tl}
      \stex_invoke_sequence_range:
  }
}


\cs_new_protected:Nn \_@@_make_args: { \TODO }
\cs_new_protected:Nn \_@@_check_terms: { }%\TODO }
\cs_new_protected:Nn \_@@_varseq_html: {
  \stex_if_do_html:T {
    \exp_args:Ne \stex_annotate_invisible:nn {
      shtml:varseq = {\l_stex_key_name_str},
      shtml:args = {\l_stex_key_args_str}
      \str_if_empty:NF \l_stex_macroname_str {,
        shtml:macroname={\l_stex_macroname_str}
      }
      \str_if_empty:NF \l_stex_key_assoc_str {,
        shtml:assoctype={\l_stex_key_assoc_str}
      }
      \str_if_empty:NF \l_stex_key_role_str {,
        shtml:role={\l_stex_key_role_str}
      }
      \str_if_empty:NF \l_stex_key_reorder_str {,
        shtml:reorderargs={\l_stex_key_reorder_str}
      }
    }{\hbox\bgroup
      \_stex_annotate_force_break:n{
        \tl_if_empty:NF \l_stex_key_type_tl {
          \stex_annotate:nn{shtml:type={}}{$\l_stex_key_type_tl$}
        }
        \tl_if_empty:NF \l_stex_key_def_tl {
          \stex_annotate:nn{shtml:definiens={}}{$\l_stex_key_def_tl$}
        }
        \tl_if_empty:NF \l_stex_key_return_tl{
          \exp_args:Nno \use:n{
          \cs_generate_from_arg_count:NNnn \l_@@_cs
          \cs_set:Npn \l_stex_get_symbol_arity_int} \l_stex_key_return_tl
          \tl_set:Nx \l_@@_args_tl {\_stex_map_args:N \_stex_return_args:nnn}
          \stex_annotate:nn{shtml:returntype={}}{
            $\exp_after:wN \l_@@_cs \l_@@_args_tl!$}
        }
        \tl_if_empty:NF \l_stex_key_argtypes_tl {
          \stex_annotate:nn{shtml:argtypes={}}{
            \_stex_annotate_force_break:n{
              \clist_map_inline:Nn \l_stex_key_argtypes_tl {
                \stex_annotate:nn{shtml:type={}}{$##1$}
              }
            }
          }
        }
      }
    \egroup}
  }
}%\TODO }

\cs_new:Npn \stex_make_seq_clist:w #1 #2 #3 #4 #5 #6 \stex_invoke_sequence: {
  \TODO
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_invoke_sequence_range:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_invoke_sequence_range: {
  \exp_after:wN \_@@_setup_r:nn \l_stex_current_type_tl
  \peek_charcode_remove:NTF ! {
    \peek_charcode:NTF [ \_@@_doop_r:w { \_@@_doop_r:w [] }
  }\_@@_do_first:
}

\int_new:N \l_@@_seq_arity_int
\cs_new_protected:Nn \_@@_setup_r:nn{
  \int_set:Nn \l_@@_seq_arity_int {#1}
  \clist_set:Nn \l_@@_range_clist {#2}
}


\cs_new_protected:Npn \_@@_doop_r:w [#1] {
  \_@@_get_index_notation:n{#1}
  \peek_charcode:NTF [ \_@@_doop_range:w { \_@@_doop_range:w[] }
}


\cs_new_protected:Nn \_@@_doop_arg_range:n {
  \tl_if_eq:nnTF{#1}{\ellipses}{
    \clist_put_right:Nn \l_@@_clist {
        \ellipses
    }
    %\clist_put_right:Nx \l_@@_clist {
      %\exp_not:n{
        %\tl_clear:N \STEXInternalSymbolAfterInvokationTL
        %\def\comp{\_varcomp}
        %\str_set:Nn \l_stex_current_symbol_str
      %}{\l_stex_current_symbol_str}
      %\exp_not:N #1
    % }
  }{
    \clist_put_right:Nn \l_@@_clist {
      \group_begin:
        \tl_clear:N \STEXInternalSymbolAfterInvokationTL
        \l_@@_cs #1
      \group_end:
    }
    %\clist_put_right:Nx \l_@@_clist {
      %\exp_not:n{
      %  \tl_clear:N \STEXInternalSymbolAfterInvokationTL
      %  \def\comp{\_varcomp}
      %  \str_set:Nn \l_stex_current_symbol_str
      %}{\l_stex_current_symbol_str}
    %  \exp_after:wN\exp_not:n\exp_after:wN{ \l_@@_cs #1 }
    %}
  }
}

\cs_new_protected:Npn \_@@_doop_range:w [#1] {
  \bool_set_true:N \l_stex_allow_semantic_bool
  \clist_clear:N \l_@@_clist
  \clist_map_function:NN \l_@@_range_clist \_@@_doop_arg_range:n
  %\exp_args:Nnx \use:nn{\STEXInternalSymbolAfterInvokationTL\symuse{Metatheory?sequence~expression}[#1]}{
    \stex_annotate:nn{
      shtml:term=OMV,
      shtml:head={\l_stex_current_symbol_str},
      shtml:notationid={}
    }{
      \l_@@_clist
    }
    \STEXInternalSymbolAfterInvokationTL
  %}
}

\cs_new_protected:Nn \_@@_get_index_notation:n {
  \cs_if_exist:cTF {l_stex_notation_\l_stex_current_symbol_str _#1_cs}{
    \cs_set_eq:Nc \l_@@_cs {l_stex_notation_\l_stex_current_symbol_str _#1_cs}
  }{
    \msg_error:nnxx{stex}{error/nonotation}{\l_stex_current_symbol_str}{#1}
  }
}


\cs_new:Nn \_@@_do_first_arg:n {{\exp_not:n{## #1}}}

\cs_new_protected:Nn \_@@_do_first: {
  \exp_args:Nnx \use:nn{
  \cs_generate_from_arg_count:NNnn \l_@@_cs \cs_set:Npn
  \l_@@_seq_arity_int} {{
    \tl_set:Nn \exp_not:N \l_@@_first_args_tl {
      \int_step_function:nN \l_@@_seq_arity_int \_@@_do_first_arg:n
    }
    \exp_not:N \_@@_do_first_next:
  }}
  \l_@@_cs
}

\cs_new_protected:Nn \_@@_do_first_next: {
  \peek_charcode_remove:NTF ! {
    \peek_charcode:NTF [ \_@@_do_one:w {\_@@_do_one:w []}
  }{
    \peek_charcode:NTF [ \_@@_do_all:w {\_@@_do_all:w []}
  }
}

\cs_new_protected:Npn \_@@_do_one:w [#1] {
  \_@@_get_index_notation:n{#1}
  \exp_args:Nno\use:nn{\l_@@_cs}\l_@@_first_args_tl
}

\cs_new_protected:Npn \_@@_do_all:w [#1] {
  %\peek_charcode_remove:NTF ! {
  %  \tl_clear:N \l_stex_current_return_tl
    \exp_args:Nno\use:nn{\_stex_invoke_notation:w [#1]}\l_@@_first_args_tl
  %}{
  %  \exp_args:Nno\use:nn{\_stex_invoke_notation:w [#1]}\l_@@_first_args_tl
  %}
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
%
% \begin{sfragment}{Expressions}
%    \begin{macrocode}
%<@@=stex_expr>
%    \end{macrocode}
%
% \begin{macro}{\infprec,\neginfprec}
%    \begin{macrocode}
\tl_const:Nx \infprec {\int_use:N \c_max_int}
\tl_const:Nx \neginfprec {-\int_use:N \c_max_int}
\bool_new:N \l_stex_allow_semantic_bool
\bool_set_true:N \l_stex_allow_semantic_bool
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\_stex_invoke_symbol:nnnnnnnN}
%    \begin{macrocode}
\tl_set:Nn \l_stex_after_invokation_tl {
  \group_end:
}
\tl_set:Nn \l_stex_every_symbol_tl {
  \bool_set_false:N \l_stex_allow_semantic_bool
}

\cs_new_protected:Nn \_stex_next_symbol:n {
  \tl_set:Nx \l_stex_every_symbol_tl {
    \tl_set:Nn \exp_not:N \l_stex_every_symbol_tl  {
      \exp_args:No \exp_not:n \l_stex_every_symbol_tl
    }
    \exp_not:N \l_stex_every_symbol_tl
    \exp_not:n{ #1 }
  }
}
\cs_generate_variant:Nn \_stex_next_symbol:n {e}


\cs_new_protected:Nn \_@@_setup:nnnnnn {
  \group_begin:
  \tl_set:Nn \l_stex_current_redo_tl {
    \cs_set_eq:NN \STEXInternalSymbolAfterInvokationTL \l_stex_after_invokation_tl
    \def\comp{#1}
    \str_set:Nn \l_stex_current_symbol_str {#2} 
    \str_set:Nn \l_stex_current_arity_str{ #3 }
    \tl_set:Nn \l_stex_current_args_tl{ #4 }
    %    \seq_set_split:Nnn\STEXInternalCurrentArgnamesSeq , { #5 }
    \tl_set:Nn \l_stex_current_return_tl{ #5 }
    \tl_set:Nn \l_stex_current_type_tl{ #6 }
    \tl_clear:N \l_stex_current_term_tl
  }
  \tl_put_right:Nx \l_stex_current_redo_tl {
    \exp_args:No \exp_not:n \l_stex_every_symbol_tl
  }
  \l_stex_current_redo_tl
}

\cs_new_protected:Nn \_stex_invoke_symbol:nnnnnnnN {
  \bool_if:NTF \l_stex_allow_semantic_bool{
    \stex_if_html_backend:T{\ifvmode\indent\fi}
    \_@@_setup:nnnnnn{\_comp}{#1?#2}{#3}{#4}{#7}{#6}
    \cs_set_eq:NN \_stex_term_oms_or_omv:nn \_stex_term_oms:nn
    \tl_put_right:Nn \l_stex_current_redo_tl{
      \cs_set_eq:NN \_stex_term_oms_or_omv:nn \_stex_term_oms:nn
    }
    #8
  }{
    \msg_error:nnxx{stex}{error/notallowed}{#1?#2}{\l_stex_current_symbol_str}
  }
}
\cs_generate_variant:Nn \_stex_invoke_symbol:nnnnnnnN {ooxooooN}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\_stex_invoke_variable:nnnnnn}
%    \begin{macrocode}

\cs_new_protected:Nn \_stex_invoke_variable:nnnnnnN {
  \bool_if:NTF \l_stex_allow_semantic_bool{
    \stex_if_html_backend:T{\ifvmode\indent\fi}
    \_@@_setup:nnnnnn{\_varcomp}{#1}{#2}{#3}{#6}{#5}
    \cs_set_eq:NN \_stex_term_oms_or_omv:nn \_stex_term_omv:nn
    \tl_put_right:Nn \l_stex_current_redo_tl {
      \cs_set_eq:NN \_stex_term_oms_or_omv:nn \_stex_term_omv:nn
    }
    #7
  }{
    \msg_error:nnxx{stex}{error/notallowed}{#1}{\l_stex_current_symbol_str}
  }
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stex_invoke_symbol:}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_invoke_symbol: {
  \stex_debug:nn{expressions}{Invoking~\l_stex_current_symbol_str}
  \mode_if_math:TF \@@_invoke_math: \@@_invoke_text:
}

\cs_new_protected:Nn \@@_invoke_text: {
  \stex_debug:nn{expressions}{text~mode}
  \peek_charcode_remove:NTF ! \@@_invoke_op_custom:n \@@_invoke_custom:n
}

\cs_new_protected:Nn \@@_invoke_math: {
  \stex_debug:nn{expressions}{math~mode}
  \peek_charcode_remove:NTF ! {
    % operator
    \peek_charcode_remove:NTF * \@@_invoke_op_custom:n {
      % op notation
      \peek_charcode:NTF [ \@@_invoke_op_notation:w {
        \@@_invoke_op_notation:w []
      }
    }
  }{
    \peek_charcode_remove:NTF * \@@_invoke_custom:n {
      % normal
      \peek_charcode:NTF [ \_stex_invoke_notation:w {
        \_stex_invoke_notation:w []
      }
    }
  }
}

\cs_new:Nn \_@@_return_arg:n {
  \tl_put_right:Nn \exp_not:N \l_@@_return_args_tl {{#### #1}}
}

\cs_new_protected:Nn \@@_invoke_return_maybe:n {
  \tl_clear:N \l_@@_return_args_tl
  \tl_set:Nn \l_@@_return_this_tl {#1}
  \exp_args:Nnx \use:n {
  \cs_generate_from_arg_count:NNnn \_@@_ret_cs
    \cs_set:Npn \l_stex_current_arity_str } {
      \int_step_function:nN \l_stex_current_arity_str \_@@_return_arg:n
      \_@@_invoke_return_next:
    }
  \_@@_ret_cs
}

\cs_new_protected:Nn \_@@_invoke_return_next: {
  \peek_charcode_remove:NTF ! {
    \exp_after:wN \l_@@_return_this_tl \l_@@_return_args_tl
  }\_@@_invoke_return:
}

\cs_new_protected:Nn \@@_invoke_return: {
  \tl_put_left:Nx \l_@@_return_this_tl {
    \group_begin:\exp_args:No \exp_not:n \l_stex_current_redo_tl
  }
  \exp_args:Nnx \use:n {
  \cs_generate_from_arg_count:NNnn \_@@_ret_cs
    \cs_set:Npn \l_stex_current_arity_str } {
      \exp_args:No \exp_not:n \l_stex_current_return_tl
    }
  \stex_debug:nn{return}{
    \meaning\_@@_ret_cs^^J
    \meaning\l_@@_return_this_tl^^J
    \exp_args:No \exp_not:n \l_@@_return_args_tl^^J
  }
  \exp_args:Nnx \use:nn {
    \exp_after:wN %\exp_after:wN \exp_after:wN
    \STEXInternalSymbolAfterInvokationTL
    %\exp_after:wN
    %\l_stex_current_redo_tl
    \_@@_ret_cs
  }{
    \exp_args:No \exp_not:n \l_@@_return_args_tl
    {
      \exp_args:No \exp_not:n \l_@@_return_this_tl
      \exp_args:No \exp_not:n \l_@@_return_args_tl
    }
  }
}

\cs_new_protected:Nn \@@_invoke_op_custom:n {
  \stex_debug:nn{expressions}{custom~op}
  \TODO
}

\cs_new_protected:Npn \_@@_add_prop_arg:nnnw #1 #2 #3 #4 \_stex_args_end: {
  \prop_put:Nnn \l_@@_customs_prop {#1#2#3} {}
  \seq_put_right:Nn \l_@@_customs_seq {#1#2#3}
  \tl_if_empty:nF{#4}{\_@@_add_prop_arg:nnnw #4 \_stex_args_end:}
}

\int_new:N \l_@@_arg_counter_int
\cs_new_protected:Nn \@@_invoke_custom:n {
  \stex_debug:nn{expressions}{custom~notation}
  \prop_clear:N \l_@@_customs_prop
  \seq_clear:N \l_@@_customs_seq
  \int_zero:N \l_@@_arg_counter_int
  \tl_if_empty:NF \l_stex_current_args_tl {
    \exp_after:wN \_@@_add_prop_arg:nnnw \l_stex_current_args_tl \_stex_args_end:
    \cs_set_eq:NN \arg \_@@_arg:n
  }
  \tl_set_eq:NN \l_stex_get_symbol_args_tl \l_stex_current_args_tl
  \cs_set_eq:NN \_@@_do_ab_next:nn \_stex_term_oma:nn
  \_stex_map_args:N \_@@_check_b:nnn
  \_@@_do_ab_next:nn{}{#1}
  % TODO check that all arguments are present
  \STEXInternalSymbolAfterInvokationTL
}

\cs_new:Nn \_@@_check_b:nnn {
  \str_case:nn #2 {
    b {\cs_set_eq:NN \_@@_do_ab_next:nn \_stex_term_omb:nn}
    B {\cs_set_eq:NN \_@@_do_ab_next:nn \_stex_term_omb:nn}
  }
}

\NewDocumentCommand \_@@_arg:n {O{} m} {
  \group_begin:
    \bool_set_true:N \l_stex_allow_semantic_bool
    \tl_if_empty:nTF{#1}{
      \int_incr:N \l_@@_arg_counter_int
      \exp_args:NNe \prop_if_in:NnTF \l_@@_customs_prop {
        \seq_item:Nn \l_@@_customs_seq \l_@@_arg_counter_int
      }{
        \exp_args:Ne \str_if_eq:nnT {
          \exp_args:NNe \prop_item:Nn \l_@@_customs_prop {
            \seq_item:Nn \l_@@_customs_seq \l_@@_arg_counter_int
          }
        }{X}{
          \TODO skip
        }
      }{
        \TODO error
      }
      \cs_set:Npn \_@@_check:nnnn ##1 ##2 ##3 ##4 {
        \int_compare:nNnT{##1}=\l_@@_arg_counter_int {
          \prop_map_break:n{\_@@_arg_do:nnnNn {##1##2##3}{##1}{##2}}
        }
      }
    }{
      \cs_set:Npn \_@@_check:nnnn ##1 ##2 ##3 ##4 {
        \exp_args:No \str_if_eq:nnTF{\c_dollar_str ##3} {#1}{##4}{
          \str_if_eq:nnT{#1}{##1}{
            \prop_map_break:n{\_@@_arg_do:nnnNn {##1##2##3}{##1}{##2}}
          }
        }
      }
    }
    \prop_map_function:NN \l_@@_customs_prop \_@@_arg_check:nn
    \_@@_arg_error: {#2}
  \group_end:
}

\cs_new:Nn \_@@_arg_check:nn {
  \_@@_check:nnnn #1 {#2}
}

\cs_new_protected:Nn \_@@_arg_error: {
  \TODO error
}

\cs_new_protected:Nn \_@@_arg_do:nnnNn {
  \exp_args:Ne \str_if_eq:nnT{
    \prop_item:Nn \l_@@_customs_prop {#1}
  }{X}{
    \str_if_eq:nnTF{#3}{i}{
      \TODO error
    }{
      \str_if_eq:nnT{#3}{b}{
        \TODO error
      }
    }
  }
  \prop_put:Nnn \l_@@_customs_prop {#1}{X}
  \_stex_term_arg:nnn{#3}{#2}{#5}
}

\cs_new_protected:Npn \@@_invoke_op_notation:w [#1] {
  \stex_debug:nn{expressions}{op~notation~for~\l_stex_current_symbol_str}
  \cs_if_exist:cTF{l_stex_notation_\l_stex_current_symbol_str _op_#1_cs}{
    \STEXInternalTermMathOMSOrOMViii{#1}{\neginfprec}{\use:c{l_stex_notation_\l_stex_current_symbol_str _op_#1_cs}}
    \STEXInternalSymbolAfterInvokationTL
  }{
    \int_compare:nNnTF \l_stex_current_arity_str = 0 {
      \tl_clear:N \l_stex_current_return_tl
      \_stex_invoke_notation:w [#1]
    }{
      \msg_error:nnxx{stex}{error/noop}{\l_stex_current_symbol_str}{#1}
    }
  }
}

\cs_new_protected:Npn \_stex_invoke_notation:w [#1] {
  \stex_debug:nn{expressions}{using~notation~#1~for~\l_stex_current_symbol_str}
  \cs_if_exist:cTF{l_stex_notation_\l_stex_current_symbol_str _#1_cs}{
    \tl_if_empty:NTF \l_stex_current_return_tl {
      \use:c{l_stex_notation_\l_stex_current_symbol_str _#1_cs}
    }{
      \exp_args:Ne \@@_invoke_return_maybe:n{
        \exp_args:Nne \use:n {\exp_not:N \use:c}{l_stex_notation_\l_stex_current_symbol_str _#1_cs}
      }
    }
  }{
    \msg_error:nnxx{stex}{error/nonotation}{\l_stex_current_symbol_str}{#1}
  }
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\STEXInternalTermMathArgiiii,\STEXInternalTermMathOMSOrOMViii,\STEXInternalTermMathOMAiii,\STEXInternalTermMathOMBiii}
%    \begin{macrocode}

\cs_new_protected:Nn \_stex_term_arg:nnn {
  \stex_annotate:nn{ shtml:arg={#2}, shtml:argmode={#1}}{
    \_stex_annotate_force_break:n{ #3 }
  }
}

\cs_new_protected:Npn \STEXInternalTermMathArgiiii #1 #2 #3 #4 {
  \group_begin:
    \let \l_stex_current_symbol_str \undefined
    \int_set:Nn \l_@@_downprec { #3 }
    \bool_set_true:N \l_stex_allow_semantic_bool
    \_stex_term_arg:nnn {#1}{#2}{#4}
  \group_end:
}

% 1: argnum 2: precedence 3: argument(s) 4: macrocode 5: argmode
\cs_new_protected:Npn \STEXInternalTermMathAssocArgiiiii #1 #2 #3 #4 #5 {
  \tl_if_empty:nTF{#3}{
    \STEXInternalTermMathArgiiii{#5}{#1}{#2}{}
  }{
    \tl_clear:N \l_@@_ret_tl
    \int_compare:nNnTF {\tl_count:n{#3}} = 1 {
      \exp_args:Ne \cs_if_eq:NNTF {\exp_args:No \tl_head:n{#3}}
      \_stex_invoke_variable:nnnnnnN {
        \exp_args:Ne \cs_if_eq:NNTF {\exp_args:No\tl_item:nn{#3}{8}}
          \stex_invoke_sequence_range: {
            \exp_after:wN \exp_after:wN \exp_after:wN
            \_@@_assoc_seq:nnnnnnn \exp_after:wN
              \_@@_gobble:nnnnnnnn #3 \_@@_end:
          }{
            \_@@_assoc_simple:nnnnn{#3}
          }
      }{
        \_@@_assoc_simple:nnnnn{#3}
      }
    }{
      \_@@_assoc_simple:nnnnn{#3}
    }{#1}{#2}{#4}{#5}
  }
}

\cs_new:Npn \_@@_gobble:nnnnnnnn #1 #2 #3 #4 #5 #6 #7 #8 #9 \_@@_end: {
  {#2} #6
}

% 1: name 2: arity 3: clist 4: argnum 5: prec 6: macrocode 7: argmode
\cs_new_protected:Nn \_@@_assoc_seq:nnnnnnn {
  \cs_if_exist:cTF{l_stex_notation_#1__cs}{
    \cs_set_eq:Nc \l_@@_cs {l_stex_notation_#1__cs}
  }{
    \msg_error:nnnn{stex}{error/nonotation}{#1}{}
  }
  \tl_clear:N \l_@@_clist
  \clist_map_inline:nn{#3}{
    \tl_if_eq:nnTF{##1}{\ellipses}{
      \clist_put_right:Nn \l_@@_clist {
        \ellipses
      }
    }{
      \clist_put_right:Nn \l_@@_clist {
        \group_begin:
          \tl_clear:N \STEXInternalSymbolAfterInvokationTL
          \def\comp{\_varcomp}
          \str_set:Nn \l_stex_current_symbol_str{#1}
          \l_@@_cs ##1
        \group_end: 
      }
    }
  }
  \tl_set:Nx \l_@@_ret_tl {
    \str_set:Nn \exp_not:N \l_stex_current_symbol_str
      {\l_stex_current_symbol_str}
    \tl_if_empty:NF \l_stex_current_term_tl {
      \tl_set:Nn \exp_not:N \l_stex_current_term_tl {
        \exp_args:No \exp_not:n \l_stex_current_term_tl
      }
    }
  }
  \STEXInternalTermMathArgiiii{#7}{#4}{#5}{
    \stex_annotate:nn{
      shtml:term=OMV,
      shtml:head={#1},
      shtml:notationid={}
    }{
      \l_@@_ret_tl
      \_stex_annotate_force_break:n{\_@@_do_seq_cmd:n {#6}}
    }
  }
}

\cs_new_protected:Nn \_@@_do_seq_cmd:n {
  \int_compare:nNnTF {\clist_count:N \l_@@_clist} = 1 {
    \l_@@_clist
  }{
    \clist_pop:NN \l_@@_clist \STEXInternalAssocArgMarkerI
    \tl_set:Nn \STEXInternalAssocArgMarkerII {
      \_@@_do_seq_cmd:n {#1}
    }
    #1
  }
}

\int_new:N \l_@@_assoc_count
\cs_new_protected:Nn \_@@_assoc_simple:nnnnn {
  \group_begin:
    \int_set:Nn \l_@@_assoc_count {1}
    \_@@_assoc_simple_inner:nnnnn{#2}{#3}{#1}{#4}{#5}
  \group_end:
}

\quark_new:N \_@@_end:
\cs_new:Npn \_@@_head:w #1,#2\_@@_end:{\exp_after:wN\exp_not:n\exp_after:wN{\exp_not:n{#1}}}
\cs_new:Npn \_@@_tail:w #1,#2\_@@_end:{\exp_after:wN\exp_not:n\exp_after:wN{#2}}

\newtoks\l_stex_assoc_toks_i
\newtoks\l_stex_assoc_toks_ii

\cs_new_protected:Nn \_@@_assoc_simple_inner:nnnnn {
  \int_compare:nNnTF {\clist_count:n {#3}} = 1 {
    \STEXInternalTermMathArgiiii{#5\int_use:N\l_@@_assoc_count}{#1}{#2}{#3}
  }{
    \group_begin:
    \exp_args:Nx \l_stex_assoc_toks_i {
      \STEXInternalTermMathArgiiii{#5\int_use:N\l_@@_assoc_count}{#1}{#2}{
        \_@@_head:w #3 \_@@_end:
      }
    }
    \exp_args:Nx \l_stex_assoc_toks_ii {
      \_@@_assoc_simple_inner:nnnnn{#1}{#2}
        {\_@@_tail:w#3\_@@_end:}{\exp_not:n{#4}}{#5}
    }
    %\stex_pseudogroup_with:nn{\STEXInternalAssocArgMarkerI\STEXInternalAssocArgMarkerII}{
      \cs_set:Npn \STEXInternalAssocArgMarkerI {
        \the \l_stex_assoc_toks_i
      }
      \int_incr:N \l_@@_assoc_count
      \cs_set:Npn \STEXInternalAssocArgMarkerII {
        \the \l_stex_assoc_toks_ii
      }
      #4
    %}
    \group_end:
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\dobrackets}
%    \begin{macrocode}
\int_new:N \l_@@_downprec
\int_set_eq:NN \l_@@_downprec \infprec
\tl_set:Nn \l_@@_left_bracket_str (
\tl_set:Nn \l_@@_right_bracket_str )
\bool_new:N \l_@@_brackets_done_bool

\cs_new_protected:Nn \_stex_maybe_brackets:nn {
  \bool_if:NTF \l_@@_brackets_done_bool {
    \bool_set_false:N \l_@@_brackets_done_bool
    #2
  } {
    \int_compare:nNnTF { #1 } > \l_@@_downprec {
      \bool_if:NTF \l_stex_inparray_bool { #2 }{
        \stex_debug:nn{dobrackets}{ #1 > \l_@@_downprec;~\tl_to_str:n{#2}}
        \dobrackets { #2 }
      }
    }{ #2 }
  }
}

%\RequirePackage{scalerel}
\cs_new_protected:Npn \dobrackets #1 {
  %\ThisStyle{\if D\m@switch
  %    \exp_args:Nnx \use:nn
  %    { \exp_after:wN \left\l_@@_left_bracket_str #1 } 
  %    { \exp_not:N\right\l_@@_right_bracket_str }
  %  \else
  \stex_pseudogroup_with:nn{\l_@@_brackets_done_bool\l_@@_downprec}{ 
    \bool_set_true:N \l_@@_brackets_done_bool
    \int_set:Nn \l_@@_downprec \infprec
    \mathopen{\comp\l_@@_left_bracket_str} 
    #1
  }
  \mathclose{\comp\l_@@_right_bracket_str}
  %\fi}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\withbrackets}
%    \begin{macrocode}
\cs_new_protected:Npn \withbrackets #1 #2 #3 {
  \stex_pseudogroup_with:nn{\l_@@_left_bracket_str\l_@@_right_bracket_str}{
    \tl_set:Nn \l_@@_left_bracket_str { #1 }
    \tl_set:Nn \l_@@_right_bracket_str { #2 }
    #3
  }
}
%    \end{macrocode}
% \end{macro}
%

% \begin{macro}{\dowithbrackets}
%    \begin{macrocode}
\cs_new_protected:Npn \dowithbrackets #1 #2 #3 {
  \withbrackets{#1}{#2}{\dobrackets{#3}}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\STEXinvisible}
%    \begin{macrocode}
\cs_new_protected:Npn \STEXinvisible #1 {
  \stex_annotate_invisible:n { #1 }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\symuse}
%    \begin{macrocode}
\cs_new_protected:Npn \symuse #1 {
  \stex_get_symbol:n{#1}
  \_stex_invoke_symbol:ooxooooN
  \l_stex_get_symbol_mod_str
  \l_stex_get_symbol_name_str
  {\int_use:N \l_stex_get_symbol_arity_int}
  \l_stex_get_symbol_args_tl
  \l_stex_get_symbol_def_tl
  \l_stex_get_symbol_type_tl
  \l_stex_get_symbol_return_tl
  \l_stex_get_symbol_invoke_cs
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\symname,\sn,\sns,\Symname,\Sn,\Sns,\symref,\sr,\varref,\varname,\Varname}
%    \begin{macrocode}

\stex_keys_define:nnnn{symname}{
  \tl_clear:N \l_stex_key_pre_tl
  \tl_clear:N \l_stex_key_post_tl
  %\tl_clear:N \l_stex_key_proot_tl
}{
  pre    .tl_set:N   = \l_stex_key_pre_tl ,
  post   .tl_set:N   = \l_stex_key_post_tl ,
  root   .code:n     = {}%.tl_set:N   = \l_stex_key_root_tl
}{}

\NewDocumentCommand \symref { O{} m m} {
  \group_begin:
  \stex_keys_set:nn{symname}{#1}
  \stex_get_symbol:n{#2}
  \_@@_do_ref:nNn{#3}\symrefemph@uri\_stex_term_oms:nn
}
\let\sr\symref

\NewDocumentCommand \symname { O{} m} {
  \group_begin:
  \stex_keys_set:nn{symname}{#1}
  \stex_get_symbol:n{#2}
  \_@@_do_ref:nNn{
    \l_stex_key_pre_tl\l_stex_get_symbol_name_str\l_stex_key_post_tl
  }\symrefemph@uri\_stex_term_oms:nn
}
\let\sn\symname
\protected\def\sns{\symname[post=s]}

\NewDocumentCommand \Symname { O{} m} {
  \group_begin:
  \stex_keys_set:nn{symname}{#1}
  \stex_get_symbol:n{#2}
  \_@@_do_ref:nNn{
    \l_stex_key_pre_tl\exp_after:wN\_stex_capitalize:n\l_stex_get_symbol_name_str\l_stex_key_post_tl
  }\symrefemph@uri\_stex_term_oms:nn
}
\cs_new_protected:Nn \_stex_capitalize:n {
  \uppercase{#1}
}
\let\Sn\Symname
\protected\def\Sns{\Symname[post=s]}

\cs_new:Npn \_stex_split_slash: #1/#2/#3\_stex_args_end: {
 \tl_if_empty:nTF{#3}{
  #2
 }{
  \_stex_split_slash: #2 / #3 \_stex_args_end:
 }
}

\NewDocumentCommand \varref { O{} m m} {
  \group_begin:
  \stex_keys_set:nn{symname}{#1}
  \stex_get_var:n{#2}
  \_@@_do_ref:nNn{#3}\varemph@uri{
    \str_set_eq:NN \l_stex_current_symbol_str\l_stex_get_symbol_name_str
    \def\comp{\_varcomp}
    \_stex_term_omv:nn
  }
}

\NewDocumentCommand \varname { O{} m} {
  \group_begin:
  \stex_keys_set:nn{symname}{#1}
  \stex_get_var:n{#2}
  \_@@_do_ref:nNn{
    \l_stex_key_pre_tl\l_stex_get_symbol_name_str\l_stex_key_post_tl
  }\varemph@uri{
    \str_set_eq:NN \l_stex_current_symbol_str\l_stex_get_symbol_name_str
    \def\comp{\_varcomp}
    \_stex_term_omv:nn
  }
}

\NewDocumentCommand \Varname { O{} m} {
  \group_begin:
  \stex_keys_set:nn{symname}{#1}
  \stex_get_var:n{#2}
  \_@@_do_ref:nNn{
    \l_stex_key_pre_tl\exp_after:wN\_stex_capitalize:n\l_stex_get_symbol_name_str\l_stex_key_post_tl
  }\varemph@uri{
    \str_set_eq:NN \l_stex_current_symbol_str\l_stex_get_symbol_name_str
    \def\comp{\_varcomp}
    \_stex_term_omv:nn
  }
}


\cs_new_protected:Nn \_@@_do_ref:nNn {
  \stex_if_html_backend:T{\ifvmode\indent\fi}
  \bool_if:NTF \l_stex_allow_semantic_bool{
    \str_set:Nx\l_stex_current_symbol_str
      {\l_stex_get_symbol_mod_str ? \l_stex_get_symbol_name_str}
    \str_if_in:NnT \l_stex_get_symbol_name_str / {
      \str_set:Nx \l_stex_get_symbol_name_str {
        \exp_after:wN \_stex_split_slash: \l_stex_get_symbol_name_str
        /\_stex_args_end:
      }
    }
    \tl_clear:N \l_stex_current_term_tl
    \def\comp{\_comp}
    \let\compemph@uri#2
    #3{}{\comp{#1}}
  }{
    \msg_error:nnnx{stex}{error/notallowed}{#1}{\l_stex_current_symbol_str}
  }
  \group_end:
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{sfragment}{Highlighting}
%    \begin{macrocode}
%<@@=stex_notationcomps>
%    \end{macrocode}
%
% \begin{macro}{\comp,\compemph@uri,\compemph,\defemph,\defemph@uri,\symrefemph,\symrefemph@uri,\varemph,\varemph@uri}
%    \begin{macrocode}
\cs_new_protected:Nn \_do_comp:nNn {
  \str_if_empty:NTF \l_stex_current_symbol_str {
    #3
  }{
    \stex_if_html_backend:TF {
      \stex_annotate:nn { shtml:#1 = \l_stex_current_symbol_str}{ #3 }
    }{
      \exp_args:Nno #2 { #3 } \l_stex_current_symbol_str
    }
  }
}

\cs_new_protected:Npn \_comp {
  \_do_comp:nNn {comp}\compemph@uri
}

\cs_new_protected:Npn \_varcomp {
  \_do_comp:nNn {varcomp}\varemph@uri
}

\cs_new_protected:Npn \_defcomp {
  \_do_comp:nNn {definiendum}\defemph@uri
}

\cs_new_protected:Npn \comp {}

\cs_new_protected:Npn \compemph@uri #1 #2 {
    \compemph{ #1 }
}

\cs_new_protected:Npn \compemph #1 {
    #1
}

\cs_new_protected:Npn \defemph@uri #1 #2 {
    \defemph{#1}
}

\cs_new_protected:Npn \defemph #1 {
    \ifmmode\else\expandafter\textbf\fi{#1}
}

\cs_new_protected:Npn \symrefemph@uri #1 #2 {
    \symrefemph{#1}
}

\cs_new_protected:Npn \symrefemph #1 {
    \emph{#1}
}

\cs_new_protected:Npn \varemph@uri #1 #2 {
    \varemph{#1}
}

\cs_new_protected:Npn \varemph #1 {
    #1
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \end{sfragment}
%
% \end{sfragment}
%
% \begin{sfragment}{Mathematical Structures}
%    \begin{macrocode}
%<@@=stex_structures>
%    \end{macrocode}
%
% \begin{environment}{mathstructure}
%    \begin{macrocode}
\stex_new_stylable_env:nnnnnnn {mathstructure}{m O{}}{
  \_@@_begin:nn{#1}{#2}
  \stex_smsmode_do:
}{
  \stex_structural_feature_module_end:
  \_@@_do_externals:
}{}{}{}

\cs_new_protected:Nn \_@@_begin:nn {
  \tl_if_empty:nTF {#2} {
    \str_set:Nn \l_@@_name_str {#1}
  }{
    \str_set:Nn \l_@@_name_str {#2}
  }

  \exp_args:Nne \use:nn { \stex_module_add_symbol:nnnnnnnN }
    { {#1}{\l_@@_name_str}{0}{}{defed}{
      \l_stex_current_module_str / \l_@@_name_str-module
    }}
    {}\stex_invoke_structure:
  \str_set:Nx \l_stex_macroname_str {#1}
  \exp_args:No \stex_structural_feature_module:nn
    {\l_@@_name_str}{structure}
}

\stex_sms_allow_env:n{mathstructure}
\stex_deactivate_macro:Nn \mathstructure {module~environments}
\stex_every_module:n {\stex_reactivate_macro:N \mathstructure}

\cs_new_protected:Nn \_@@_do_externals: {
  \tl_set:Nn \l_@@_replace_this_tl {####1}
  \exp_args:No \stex_iterate_symbols:nn{\g_stex_last_feature_str}{
    \_@@_external_decl:nnnn{##5}{##4}{##3}{##8}
  }
}

\cs_new_protected:Nn \_@@_external_decl:nnnn {
  \stex_debug:nn{structure}{
    Generating~external~declaration~\l_@@_name_str/#3~in~
    \l_stex_current_module_str^^J
    \tl_to_str:n{#1}^^J\tl_to_str:n{#2}^^J\tl_to_str:n{#4}
  }
  \tl_set:Nn \l_stex_get_symbol_args_tl {#1}
  \exp_args:Nnx \use:nn {\stex_module_add_symbol:nnnnnnnN} {
    {}{\l_@@_name_str/#3}{\int_eval:n{#2 + 1}}
    {1i{\tl_to_str:n{$this}}\tl_if_empty:nF{#1}{\_stex_map_args:N \_@@_shift_argls:nnn}}
    {defed}{typed}
  }{#4}\stex_invoke_outer_field:
}
\iffalse$\fi

\cs_new:Nn \_@@_shift_argls:nnn {
  \int_eval:n{#1+1}#2{#3}
}
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\stex_get_mathstructure:n}
%    \begin{macrocode}
\cs_new_protected:Nn \stex_get_mathstructure:n {
  \_stex_get_mathstructure:n{#1}
  \str_if_empty:NT \l_stex_get_structure_module_str {
    \TODOg Error
  }
}
\cs_new_protected:Nn \_stex_get_mathstructure:n {
  \str_clear:N \l_stex_get_structure_module_str
  \stex_get_symbol:n{#1}
  \exp_args:No \tl_if_eq:NNT \l_stex_get_symbol_invoke_cs \stex_invoke_structure: {
    \str_set_eq:NN \l_stex_get_structure_module_str \l_stex_get_symbol_type_tl
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{extstructure}
%    \begin{macrocode}
\stex_new_stylable_env:nnnnnnn {extstructure}{m O{} m}{
  \_@@_begin:nn{#1}{#2}
  \clist_map_inline:nn{#3}{
    \stex_get_mathstructure:n{##1}
    \stex_if_do_html:T {
      \stex_annotate_invisible:nn 
        {shtml:import=\l_stex_get_structure_module_str} {}
    }
    \stex_module_add_morphism:nonn
      {}{\l_stex_get_structure_module_str}{import}{}
    \stex_execute_in_module:x{ 
      \stex_activate_module:n{\l_stex_get_structure_module_str}
    }
  }
  \stex_smsmode_do:
}{
  \stex_structural_feature_module_end:
  \_@@_do_externals:
}{}{}{}

\stex_sms_allow_env:n{extstructure}
\stex_deactivate_macro:Nn \extstructure {module~environments}
\stex_every_module:n {
  \stex_reactivate_macro:N \extstructure
}

\stex_new_stylable_env:nnnnnnn {extstructure*}{m}{
  \str_clear:N \l_@@_exstruct_name_str
  \_@@_new_extstruct_name:n {1}
  \stex_get_mathstructure:n{#1}

  \stex_execute_in_module:x{
    \tl_set:cn{#1}{
      \_stex_invoke_symbol:nnnnnnnN
      {\l_stex_get_symbol_mod_str}
      {\l_stex_get_symbol_name_str}
      {0}{}{defed}{
        \l_stex_current_module_str/\l_@@_exstruct_name_str -module,
        \l_stex_get_symbol_type_tl
      }{}\stex_invoke_structure:
    }
  }

  \exp_args:No \_@@_begin:nn\l_@@_exstruct_name_str{}
  
  \stex_if_do_html:T {
    \stex_annotate_invisible:nn 
      {shtml:import= \l_stex_get_structure_module_str} {}
  }
  \stex_module_add_morphism:nonn
    {}{\l_stex_get_structure_module_str}{import}{}
  \stex_execute_in_module:x{ 
    \stex_activate_module:n{\l_stex_get_structure_module_str}
  }

  \stex_smsmode_do:
}{
  \prop_map_inline:cn{
    c_stex_module_ \l_stex_current_module_str _symbols_prop
  }{
    \_@@_check_def:nnnnnnnn ##2
  }
  \stex_structural_feature_module_end:
  \_@@_do_externals:
}{}{}{}

\stex_sms_allow_env:n{extstructure*}
\exp_after:wN \stex_deactivate_macro:Nn 
  \cs:w extstructure*\cs_end: {module~environments}
\stex_every_module:n {
  \exp_after:wN \stex_reactivate_macro:N \cs:w extstructure*\cs_end:
}

\cs_new_protected:Nn \_@@_check_def:nnnnnnnn {
  \tl_if_empty:nT{#5}{
    \TODOh error
  }
}

\cs_new_protected:Nn \_@@_new_extstruct_name:n {
  \prop_map_inline:cn
    {c_stex_module_ \l_stex_current_module_str _symbols_prop}{
      \_@@_name_check:nnnnnnnnn{#1}##2
  }
  \str_if_empty:NT \l_@@_exstruct_name_str {
    \str_set:Nn \l_@@_exstruct_name_str {EXTSTRUCT_#1}
  }
}
\cs_new:Nn \_@@_name_check:nnnnnnnnn {
  \str_if_eq:nnT{EXTSTRUCT_#1}{#3}{
    \prop_map_break:n{
      \exp_args:Ne \_@@_new_extstruct_name:n {\int_eval:n{#1+1}}
    }
  }
}

%    \end{macrocode}
% \end{environment}
%
% Invoking structures:
%    \begin{macrocode}
\cs_new_protected:Nn \stex_invoke_structure: {
  \_@@_invoke_top:n {}% \l_stex_current_type_tl
}

\cs_new_protected:Nn \_@@_invoke_top:n {
  \stex_debug:nn{structure}{
    invoking~structure~{\l_stex_current_type_tl}<\tl_to_str:n{#1}>
  }
  \peek_charcode:NTF [ {
    \_@@_merge:nw{#1}
  }{
    \_@@_invokation_term:n {#1}
    \peek_charcode_remove:NTF ! {
      \tl_set:Nn \l_stex_structure_this_tl {}
      \peek_charcode:NTF [ {
        \_@@_maybe_notation:w
      }{
        \_@@_maybe_notation:w []
      }
    }{
      \_@@_invoke_this:n
    }
  }
}

\cs_new_protected:Npn \_@@_merge:nw #1 [ #2 ] {
  \tl_if_empty:nTF{#1}{
    \_@@_invoke_top:n{#2}
  }{
    \tl_if_empty:nTF{#2}{
      \_@@_invoke_top:n{#1}
    }{
      \_@@_invoke_top:n{#1,#2}
    }
  }
}

\cs_new_protected:Nn \_@@_invokation_term:n {
  \_@@_do_assign_list:n{#1}
  \clist_if_empty:NTF \l_@@_fields_clist {
    \int_compare:nNnF {\clist_count:N \l_stex_current_type_tl}
      = 1 {
        \exp_args:No \_@@_make_term:n \l_stex_current_type_tl
    }
  }{
    \int_compare:nNnTF {\clist_count:N \l_stex_current_type_tl}
      = 1 {
        \_@@_make_term:n {}
      }{
        \exp_args:No \_@@_make_term:n \l_stex_current_type_tl
    }
  }
}

\cs_new_protected:Nn \_@@_do_assign_list:n {
  \clist_clear:N \l_@@_fields_clist
  \tl_if_empty:nF {#1} {
    \keyval_parse:NNn\TODO\_@@_do_assign:nn{#1}
  }
}

\cs_new_protected:Nn \_@@_do_assign:nn {
  \clist_put_right:Nn \l_@@_fields_clist {{#1}{#2}}
}

\cs_new:Nn \_@@_make_oml:n {
  \_@@_make_oml:nn #1
}
\cs_new:Nn \_@@_make_oml:nn {
  ,\stex_annotate:nn{
    shtml:term=OML,
    shtml:head={#1}
  }{
    \_stex_annotate_force_break:n{
      \stex_annotate:nn{shtml:definiens={}}{#2!}
    }
  }
}

\cs_new_protected:Nn \_@@_make_term:n {
  \tl_if_empty:nTF{#1}{
    \seq_clear:N \l_tmpa_seq
  }{
    \seq_set_split:Nnn \l_tmpa_seq ,{#1}
    \seq_pop_right:NN \l_tmpa_seq \l_tmpa_tl
    \seq_reverse:N \l_tmpa_seq
  }
  \tl_set:Nx \l_stex_current_term_tl {
    \symuse{Metatheory?module~type~merge}{
      {\_@@_current_term:}
      \seq_map_function:NN \l_tmpa_seq \_@@_make_mod:n
      \clist_if_empty:NF \l_@@_fields_clist {
        ,\symuse{Metatheory?anonymous~record}{
          \exp_args:Ne \tl_tail:n{
            \clist_map_function:NN \l_@@_fields_clist \_@@_make_oml:n
          }
        }
      }
    }
  }
}


\cs_new:Nn \_@@_current_term: {
  \exp_args:No \exp_not:n \l_stex_current_redo_tl
  \tl_set:Nn \exp_not:N \l_stex_current_term_tl {
    \exp_args:No\exp_not:n\l_stex_current_term_tl
  }
  \_stex_term_oms_or_omv:nn{}{}
}

\cs_new:Nn \_@@_make_mod:n {
  ,\symuse{Metatheory?module~type}{
    \stex_annotate:nn{shtml:term=OMMOD,shtml:head={#1}}{}
  }
}

\cs_new_protected:Nn \_@@_invoke_this:n {
  \peek_charcode_remove:NTF ! {
    \exp_args:Nne\use:nn{
      \STEXInternalSymbolAfterInvokationTL\symuse{Metatheory?of~type}{#1}}{
      {\_@@_current_term:}
    }
  }{
    \_@@_invoke_maybe_field:nn{#1}
  }
}

\cs_new_protected:Nn \_@@_invoke_maybe_field:nn {
  \_@@_make_prop:
  \_@@_set_this:n{#1}
  \tl_if_empty:nTF{#2}{
    \_@@_present:
  }{
    \_@@_invoke_field:n{#2}
  }
}

\cs_new_protected:Nn \_@@_invoke_field:n {
  \prop_if_in:cnTF {l_@@_ \l_stex_current_symbol_str _prop} {#1}{
    \tl_put_right:Nn \l_stex_current_redo_tl {
      \bool_set_true:N \l_stex_allow_semantic_bool
    }
    \tl_clear:N \l_@@_more_nextsymbol_tl
    \exp_args:NNe \seq_if_in:NnF \l_@@_assigned_seq {\tl_to_str:n{#1}}{
      \tl_set:Nn \l_@@_more_nextsymbol_tl {
        \exp_not:n{\edef\comp {\_thiscomp{\comp}}}
      }
    }
    \exp_args:Nnx \use:nn {\STEXInternalSymbolAfterInvokationTL} {
      \exp_args:No \exp_not:n \l_stex_current_redo_tl
      \tl_set:Nn \exp_not:N \l_stex_structure_this_tl {
        \exp_args:No \exp_not:n \l_stex_structure_this_tl
      }
      \_stex_next_symbol:n {
        \tl_set:Nn \exp_not:N \l_stex_current_term_tl {
          \symuse{Metatheory?record~field}{
            \exp_args:No \exp_not:n \l_stex_current_term_tl
          }{
            \stex_annotate:nn{shtml:term=OML,shtml:head={#1}}{}
          }
        }
        \l_@@_more_nextsymbol_tl
      }
      \exp_not:N \use_ii:nn
      \prop_item:cn {l_@@_ \l_stex_current_symbol_str _prop} {#1}
    }
  }{
    \TODOi #1 error1
  }
}

\cs_new_protected:Nn \_@@_set_this:n {
  \tl_if_empty:nTF{#1}{
    \tl_clear:N \l_stex_structure_this_tl
    \tl_put_right:Nn \l_stex_current_redo_tl {
      \tl_clear:N \l_stex_structure_this_tl
    }
  }{
    \stex_debug:nn{here}{letting~this~=~\tl_to_str:n{#1}}
    \tl_set:Nn \l_stex_structure_this_tl {
      \group_begin:
        \bool_set_true:N \l_stex_allow_semantic_bool
        #1
      \group_end:
    }
    \tl_put_right:Nn \l_stex_current_redo_tl {
      \tl_set:Nn \l_stex_structure_this_tl { 
        \group_begin:
          \bool_set_true:N \l_stex_allow_semantic_bool
          #1
        \group_end:
      }
    }
    \tl_set:Nx \l_stex_current_term_tl {
      \symuse{Metatheory?of~type}{\exp_not:n{#1}}{
        \_@@_current_term:
      }
    }
    \tl_put_right:Nx \l_stex_current_redo_tl {
      \tl_set:Nn \exp_not:N \l_stex_current_term_tl {
        \exp_args:No \exp_not:n \l_stex_current_term_tl
      }
    }
  }
}

\cs_new_protected:Npn \_@@_maybe_notation:w [ #1 ] {
  \cs_if_exist:cTF{l_stex_notation_\l_stex_current_symbol_str _#1_cs}{
    \use:c{l_stex_notation_\l_stex_current_symbol_str _#1_cs}
  }{
    \_@@_make_prop:
    \_@@_present_i:w [#1]
  }
}

\cs_new_protected:Nn \_@@_present: {
  \peek_charcode:NTF [ {
    \_@@_present_i:w
  }{
    \_@@_present:nn{}{}
  }
}

\cs_new_protected:Npn \_@@_present_i:w [#1] {
  \int_compare:nNnTF{\clist_count:n{#1}} = 1 {
    \_@@_present:nn{}{#1}
  }{
    \peek_charcode:NTF [ {
      \_@@_present_ii:nw{#1}
    }{
      \_@@_present:nn{#1}{}
    }
  }
}

%First: clist, second:notation-id
\cs_new_protected:Npn \_@@_present_ii:nw #1 [#2] {
  \_@@_present:nn{#1}{#2}
}

\cs_new_protected:Npn \_thiscomp #1 #2 {
  #1{#2}_{\l_stex_structure_this_tl}
}

\cs_new_protected:Nn \_@@_present_entry:nn {
  \seq_if_in:NnTF \l_@@_assigned_seq {#1}{
    \clist_put_right:Nn \l_@@_clist {#2!}
  }{
    \clist_put_right:Nn \l_@@_clist {
      \_stex_next_symbol:n {
        \edef\comp { \_thiscomp{\comp} }
      }
      \exp_not:n{#2!}
    }
  }
}

\cs_new_protected:Nn \_@@_present:nn {
  \clist_clear:N \l_@@_clist
  \tl_if_empty:nTF{#1}{
    \cs_set:Npn \l_@@_cs ##1 ##2 ##3 {
      \tl_if_empty:nF{##2}{
        \_@@_present_entry:nn {##1}{##3}
      }
    }
  }{
    \cs_set:Npn \l_@@_cs ##1 ##2 ##3 {
      \exp_args:Ne \clist_if_in:nnT{\tl_to_str:n{#1}}{##1}{
        \_@@_present_entry:nn {##1}{##3}
      }
    }
  }
  \prop_map_inline:cn {l_@@_ \l_stex_current_symbol_str _prop} {
    \l_@@_cs {##1} ##2
  }
  \_stex_term_oms_or_omv:nn{}{
    \exp_args:Nno \use:nn{
      \bool_set_true:N \l_stex_allow_semantic_bool
      \symuse{Metatheory?mathematical~structure}[#2]
    }{\exp_after:wN{\l_@@_clist}}
  }\STEXInternalSymbolAfterInvokationTL
}

\cs_new_protected:Nn \_@@_make_prop: {
  \prop_clear:N \l_@@_prop
  \seq_clear:N \l_@@_seq
  \seq_clear:N \l_@@_assigned_seq
  \_@@_prop_do_decls:
  \_@@_prop_do_notations:
  \clist_if_empty:NF \l_@@_fields_clist {
    \clist_map_inline:Nn \l_@@_fields_clist {
      \_@@_make_prop_assign:nn ##1
    }
  }
  \prop_set_eq:cN {l_@@_ \l_stex_current_symbol_str _prop} \l_@@_prop
}

\cs_new_protected:Nn \_@@_make_prop_assign:nn {
  \prop_if_in:NnTF \l_@@_prop {#1}{
    \exp_args:NNe \seq_put_right:Nn \l_@@_assigned_seq {\tl_to_str:n{#1}}
    \exp_args:Nne \use:nn {\_@@_make_prop_assign_replace:nnnn {#1}{#2}}
    {\prop_item:Nn \l_@@_prop {#1}}
  }{
    \TODOj Error
  }
}
\cs_new_protected:Nn \_@@_make_prop_assign_replace:nnnn {
  \prop_put:Nnn \l_@@_prop {#1}{{#3}{#2}}
  \tl_if_empty:nF{#3}{
    \tl_set:cn{#1}{ #2 }
    \tl_put_right:Nn \l_stex_current_redo_tl {
      \tl_set:cn{#1}{ #2 }
    }
  }
}

\cs_new_protected:Nn \_@@_prop_do_decls: {
  \exp_args:No \stex_iterate_symbols:nn \l_stex_current_type_tl {
    \tl_if_empty:nTF{##2}{
      \_@@_do_decl_nomacro:nnnnnnnnn{##3}
    }{
      \_@@_do_decl:nnnnnnnnn{##2}
    }
    {##1}{##3}{##4}{##5}{##6}{##7}{##8}{##9}
  }
}

\cs_new_protected:Nn \_@@_do_decl_nomacro:nnnnnnnnn {
  \prop_if_in:NnF \l_@@_prop {#1} {
    \seq_put_left:Nx \l_@@_seq {\tl_to_str:n{#2?#3}}
    \prop_put:Nnn \l_@@_prop {#1}{
      {}{
        \_stex_invoke_symbol:nnnnnnnN
        {#2}
        {#3}
        {#4}{#5}{#6}{#7}{#8}#9
      }
    }
  }
}

\cs_new_protected:Nn \_@@_do_decl:nnnnnnnnn {
  \prop_if_in:NnF \l_@@_prop {#1} {
    \seq_put_left:Nx \l_@@_seq {\tl_to_str:n{#2?#3}}
    \prop_put:Nnn \l_@@_prop {#1}{
      {#3}{
        \_stex_invoke_symbol:nnnnnnnN
        {#2}
        {#3}
        {#4}{#5}{#6}{#7}{#8}#9
      }
    }
  }
  \tl_set:cn{#1}{
    \_stex_invoke_symbol:nnnnnnnN
    {#2}{#3}{#4}{#5}{#6}{#7}{#8}#9
  }
  \tl_put_right:Nn \l_stex_current_redo_tl {
    \tl_set:cn{#1}{
      \_stex_invoke_symbol:nnnnnnnN
      {#2}{#3}{#4}{#5}{#6}{#7}{#8}#9
    }
  }
}

\cs_new_protected:Nn \_@@_prop_do_notations: {
  \exp_args:No \stex_iterate_notations:nn\l_stex_current_type_tl{
    \exp_args:NNe \seq_if_in:NnT \l_@@_seq {\tl_to_str:n{##1}}{
      \tl_put_right:Nn \l_stex_current_redo_tl {
        \cs_if_exist:cF{l_stex_notation_##1 __cs}{
          \cs_generate_from_arg_count:cNnn{l_stex_notation_##1 __cs}
          \cs_set_nopar:Npn {##3}{##4}
        }
      }
      \cs_if_exist:cF{l_stex_notation_##1 __cs}{
        \cs_generate_from_arg_count:cNnn{l_stex_notation_##1 __cs}
        \cs_set_nopar:Npn {##3}{##4}
      }
      \tl_if_empty:nF{##5}{
        \tl_put_right:Nn \l_stex_current_redo_tl {
          \cs_if_exist:cF{l_stex_notation_##1 _op__cs}{
            \tl_set:cn{l_stex_notation_##1 _op__cs}{##5}
          }
        }
        \cs_if_exist:cF{l_stex_notation_##1 _op__cs}{
          \tl_set:cn{l_stex_notation_##1 _op__cs}{##5}
        }
      }
    }
  }
}
%    \end{macrocode}
%
% \begin{macro}{\usestructure}
%    \begin{macrocode}
\cs_new_protected:Npn \usestructure #1 {
  \stex_get_mathstructure:n{ #1 }
  \exp_args:No \stex_activate_module:n \l_stex_get_structure_module_str
}
%    \end{macrocode}
%
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Statements}
%    \begin{macrocode}
%<@@=stex_statements>

\stex_keys_define:nnnn{statement}{
  \str_clear:N \l_stex_key_name_str
  \str_clear:N \l_stex_key_macroname_str
  \clist_clear:N \l_stex_key_for_clist
}{
  name    .str_set:N = \l_stex_key_name_str ,
  for     .clist_set:N = \l_stex_key_for_clist ,
  macro   .str_set:N = \l_stex_key_macroname_str ,
  start   .str_set:N = \l_stex_key_title_str , % TODO remove
  judgment .code:n = {},
  from .code:n= {}, % TODO remove
  to .code:n={} % TODO remove
}{id,title,style,symargs}
%    \end{macrocode}
%
% \begin{macro}{\stex_new_statement:nn}
%    \begin{macrocode}

\cs_new_protected:Nn \_@@_setup:n {
  \str_if_empty:NF \l_stex_key_macroname_str {
    \str_if_empty:NT \l_stex_key_name_str {
      \str_set_eq:NN \l_stex_key_name_str \l_stex_key_macroname_str
    }
  }
  \seq_clear:N \l_@@_fors_seq
  \clist_map_inline:Nn \l_stex_key_for_clist {
    \exp_args:Ne\stex_get_symbol:n{\tl_to_str:n{##1}}
    \seq_put_right:Nx \l_@@_fors_seq 
      {\l_stex_get_symbol_mod_str ? \l_stex_get_symbol_name_str}
  }
  \str_if_empty:NF \l_stex_key_name_str {
    \seq_put_right:Nx \l_@@_fors_seq {
      \l_stex_current_module_str ? \l_stex_key_name_str
    }
    \str_set_eq:NN \l_stex_macroname_str \l_stex_key_macroname_str
    \stex_symdecl_do:
    \exp_args:Nnx \use:nn {\stex_module_add_symbol:nnnnnnnN}{
      {\l_stex_key_macroname_str}{\l_stex_key_name_str}
      {\int_use:N \l_stex_get_symbol_arity_int}
      {\l_stex_get_symbol_args_tl}
      {#1}{}{}\stex_invoke_symbol:
    }
    \exp_args:Ne \stex_ref_new_sym_target:n {\l_stex_current_module_str?\l_stex_key_name_str}
    \stex_if_do_html:T \_stex_symdecl_html:
  }
}

\cs_new:Nn \_@@_html_keyvals:n {
  shtml:#1={},
  \seq_if_empty:NF \l_@@_fors_seq {,
    shtml:fors={\seq_use:Nn \l_@@_fors_seq ,}
  }
  \str_if_empty:NF \l_stex_key_id_str {,
    shtml:id={\l_stex_key_id_str}
  }
  \clist_if_empty:NF \l_stex_key_style_clist {,
    shtml:styles={\l_stex_key_style_clist}
  }
}

\cs_new_protected:Nn \stex_new_statement:nnn {
  \stex_new_stylable_env:nnnnnnn {#1}{O{}}{
    \stex_keys_set:nn{statement}{##1}
    #3

    \stex_if_smsmode:F {
      \exp_args:Nne \begin{stex_annotate_env}{
        \_@@_html_keyvals:n{#1}
      }
      \tl_set_eq:NN \thistitle \l_stex_key_title_tl
      \str_set_eq:NN \thisname \l_stex_key_name_str
      \clist_set_eq:NN \thisfor \l_stex_key_for_str
      \stex_style_apply:
      \str_if_empty:NF \l_stex_key_id_str {
        \exp_args:No \stex_ref_new_doc_target:n \l_stex_key_id_str
      }
    }

    \stex_smsmode_do:
  }{
    \stex_if_smsmode:F {
      \stex_style_apply:
      \end{stex_annotate_env}
    }
  }{}{}{s}
  \stex_sms_allow_env:n{s#1}
  
  \tl_if_empty:nF{#2}{
    \exp_after:wN \NewDocumentCommand \cs:w inline#2\cs_end: { O{} m}{
      \group_begin:
        \stex_keys_set:nn{statement}{##1}
        #3

        \stex_if_smsmode:F{
          \str_if_empty:NF \l_stex_key_id_str {
            \exp_args:No \stex_ref_new_doc_target:n \l_stex_key_id_str
          }
          \exp_args:Ne \stex_annotate:nn{\_@@_html_keyvals:n{#1}}{
            \_stex_annotate_force_break:n{##2}
          }
        }
      \group_end:
      \stex_smsmode_do:
    }
    \exp_after:wN \stex_sms_allow_escape:N\cs:w inline#2\cs_end:
  }
}

\cs_new_protected:Nn \_@@_setup_def: {
  \seq_map_inline:Nn \l_@@_fors_seq {
    \stex_ref_new_sym_target:n{##1}
  }
  \str_clear:N \l_@@_uri_str
  \str_if_empty:NTF \l_stex_key_name_str {
    \int_compare:nNnT {\seq_count:N \l_@@_fors_seq} = 1 {
      \str_set:Nx \l_@@_uri_str {\seq_item:Nn \l_@@_fors_seq 1}
    }
  }{
    \str_set:Nx \l_@@_uri_str {\l_stex_current_module_str ? \l_stex_key_name_str}
  }
  \stex_reactivate_macro:N \definiendum
  \stex_reactivate_macro:N \defnotation
  \stex_reactivate_macro:N \definame
  \stex_reactivate_macro:N \Definame
}

\stex_new_statement:nnn{definition}{def}{
  \_@@_setup:n{DEFINED}
  \_@@_setup_def:
  \stex_reactivate_macro:N \definiens
}
\stex_new_statement:nnn{assertion}{ass}{\_@@_setup:n{}}
\stex_new_statement:nnn{example}{ex}{\_@@_setup:n{}}
\stex_new_statement:nnn{paragraph}{}{
  \_@@_setup:n{}\clist_if_in:NnT \l_stex_key_style_clist {symdoc}{\_@@_setup_def:}
}
%    \end{macrocode}
% \end{macro}
%

% \begin{macro}{definiendum}
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_do_defref:nn {
  \stex_if_html_backend:T{\ifvmode\indent\fi}
  \group_begin:
  \stex_get_symbol:n{#1}
  \bool_if:NTF \l_stex_allow_semantic_bool{
    \str_set:Nx\l_stex_current_symbol_str
      {\l_stex_get_symbol_mod_str ? \l_stex_get_symbol_name_str}
    \str_if_in:NnT \l_stex_get_symbol_name_str / {
      \str_set:Nx \l_stex_get_symbol_name_str {
        \exp_after:wN \_stex_split_slash: \l_stex_get_symbol_name_str
        /\_stex_args_end:
      }
    }
    \exp_args:No \stex_ref_new_sym_target:n \l_stex_current_symbol_str
    \def\comp{\_defcomp}
    \stex_annotate:nn{shtml:definiendum=\l_stex_current_symbol_str}{\comp{#2}}
  }{
    \msg_error:nnnx{stex}{error/notallowed}{#1}{\l_stex_current_symbol_str}
  }
  \group_end:
}

\NewDocumentCommand \defnotation{ m } {
  \_stex_next_symbol:n { \def\comp{\_defcomp}}#1
}
\stex_deactivate_macro:Nn \defnotation {definition~environments}

\NewDocumentCommand \definiendum { O{} m m} {
  \stex_keys_set:nn{symname}{ #1 }
  \_@@_do_defref:nn{#2}{#3}
}
\stex_deactivate_macro:Nn \definiendum {definition~environments}

\NewDocumentCommand \definame { O{} m } {
  \stex_keys_set:nn{symname}{#1}
  \_@@_do_defref:nn{#2}{
    \l_stex_key_pre_tl\l_stex_get_symbol_name_str\l_stex_key_post_tl
  }
}
\stex_deactivate_macro:Nn \definame {definition~environments}

\NewDocumentCommand \Definame { O{} m } {
  \stex_keys_set:nn{symname}{#1}
  \_@@_do_defref:nn{#2}{
    \l_stex_key_pre_tl\exp_after:wN\_stex_capitalize:n\l_stex_get_symbol_name_str\l_stex_key_post_tl
  }
}
\stex_deactivate_macro:Nn \Definame {definition~environments}


\NewDocumentCommand \definiens { O{} m }{
  \group_begin:
  \str_clear:N \l_stex_get_symbol_name_str
  \tl_if_empty:nF {#1} {
    \stex_get_symbol:n { #1 }
    \str_set:Nx \l_@@_uri_str
      {\l_stex_get_symbol_mod_str ? \l_stex_get_symbol_name_str}
  }
  \str_if_empty:NT \l_@@_uri_str {
    \TODOa error
  } 
  \stex_debug:nn{definiens}{Checking~\l_@@_uri_str}

  \exp_args:NNo \exp_args:Nno \stex_str_if_starts_with:nnT
    \l_@@_uri_str
    \l_stex_current_module_str{
    \prop_map_inline:cn{c_stex_module_\l_stex_current_module_str _symbols_prop}{
      \stex_debug:nn{definiens}{\l_@@_uri_str == \l_stex_current_module_str?##1}
      \exp_args:No \str_if_eq:noT \l_@@_uri_str {\l_stex_current_module_str?##1}{
        \prop_map_break:n{\_@@_add_definiens:nnnnnnnn ##2}
      }
    }
  }

  \stex_annotate:nn{ shtml:definiens=\l_@@_uri_str}{ #2 }
  \group_end:
}
\stex_deactivate_macro:Nn \definiens {definition~environments}

\cs_new_protected:Nn \_@@_add_definiens:nnnnnnnn {
  \stex_debug:nn{definiens}{Adding~definiens~to~\l_stex_current_module_str?#2}
  \prop_gput:cnn{c_stex_module_\l_stex_current_module_str _symbols_prop}
    {#2}{{#1}{#2}{#3}{#4}{defed}{#6}{#7}{#8}}
}

%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Proofs}
%
% We first define some keys for the \env{sproof} environment.
%    \begin{macrocode}
%<@@=stex_proof>
\stex_keys_define:nnnn{ spf }{
	\tl_clear:N \l_stex_key_for_tl
	\tl_clear:N \l_stex_key_from_tl
	\tl_set_eq:NN \l_stex_key_proofend_tl \_@@_proof_box_tl
	\tl_clear:N \l_stex_key_continues_tl
	\tl_clear:N \l_stex_key_term_tl
	\tl_clear:N \l_stex_key_functions_tl
	\tl_clear:N \l_stex_key_method_tl
  \bool_set_false:N \l_stex_key_hide_bool
}{
  for         .clist_set:N  = \l_stex_key_for_clist ,
  from        .tl_set:N     = \l_stex_key_from_tl ,
  proofend    .tl_set:N     = \l_stex_key_proofend_tl,
  continues   .tl_set:N     = \l_stex_key_continues_tl,
  functions   .tl_set:N     = \l_stex_key_functions_tl,
  term        .tl_set:N     = \l_stex_key_term_tl,
  method      .tl_set:N     = \l_stex_key_method_tl,
  hide        .bool_set:N   = \l_stex_key_hide_bool
}{id,style,title}

\bool_set_true:N \l_@@_inc_counter_bool
%    \end{macrocode}
%
% For proofs, we will have to have deeply nested structures of enumerated list-like
% environments. However, {\LaTeX} only allows |enumerate| environments up to nesting depth
% 4 and general list environments up to listing depth 6. This is not enough for us.
% Therefore we have decided to go along the route proposed by Leslie Lamport to use a
% single top-level list with dotted sequences of numbers to identify the position in the
% proof tree. Unfortunately, we could not use his |pf.sty| package directly, since it does
% not do automatic numbering, and we have to add keyword arguments all over the place, to
% accomodate semantic information.
%
%    \begin{macrocode}
\intarray_new:Nn\l_@@_counter_intarray{50}
\cs_new_protected:Npn \_@@_insert_number: {
  \int_set:Nn \l_tmpa_int {1}
  \bool_while_do:nn {
    \int_compare_p:nNn {
      \intarray_item:Nn \l_@@_counter_intarray \l_tmpa_int
    } > 0
  }{
    \intarray_item:Nn \l_@@_counter_intarray \l_tmpa_int .
    \int_incr:N \l_tmpa_int
  }
}

\cs_new_protected:Npn \_@@_inc_counter: {
  \int_set:Nn \l_tmpa_int {1}
  \bool_while_do:nn {
    \int_compare_p:nNn {
      \intarray_item:Nn \l_@@_counter_intarray \l_tmpa_int
    } > 0
  }{
    \int_incr:N \l_tmpa_int
  }
  \int_compare:nNnF \l_tmpa_int = 1 {
    \int_decr:N \l_tmpa_int
  }
  \intarray_gset:Nnn \l_@@_counter_intarray \l_tmpa_int {
    \intarray_item:Nn \l_@@_counter_intarray \l_tmpa_int + 1
  }
}

\cs_new_protected:Npn \_@@_add_counter: {
  \int_set:Nn \l_tmpa_int {1}
  \bool_while_do:nn {
    \int_compare_p:nNn {
      \intarray_item:Nn \l_@@_counter_intarray \l_tmpa_int
    } > 0
  }{
    \int_incr:N \l_tmpa_int
  }
  \intarray_gset:Nnn \l_@@_counter_intarray \l_tmpa_int { 1 }
}

\cs_new_protected:Npn \_@@_remove_counter: {
  \int_set:Nn \l_tmpa_int {1}
  \bool_while_do:nn {
    \int_compare_p:nNn {
      \intarray_item:Nn \l_@@_counter_intarray \l_tmpa_int
    } > 0
  }{
    \int_incr:N \l_tmpa_int
  }
  \int_decr:N \l_tmpa_int
  \intarray_gset:Nnn \l_@@_counter_intarray \l_tmpa_int { 0 }
}
%    \end{macrocode}
%
%\begin{macro}{\sproofend}
%    This macro places a little box at the end of the line if there is space, or at the
%    end of the next line if there isn't
%    \begin{macrocode}
\tl_set:Nn \_@@_proof_box_tl {
  \ltx@ifpackageloaded{amssymb}{$\square$}{
    \hbox{\vrule\vbox{\hrule width 6 pt\vskip 6pt\hrule}\vrule}
  }
}

\tl_set:Nn \sproofend {
  \tl_if_empty:NF \l_stex_key_proofend_tl {
    \hfil\null\nobreak\hfill\l_stex_key_proofend_tl\par\smallskip
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{spfsketch}
%    \begin{macrocode}
\stex_new_stylable_cmd:nnnn{spfsketch}{O{} m}{
  \group_begin:
  \stex_keys_set:nn{spf}{#1}
  % TODO
  #2
  \group_end:
}{}{}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\_@@_maybe_comment:,\_@@_maybe_comment_end:,\_@@_start_comment:}
%    \begin{macrocode}
\bool_set_false:N \l_@@_in_spfblock_bool

\cs_new_protected:Nn \_@@_maybe_comment: {
  \bool_if:NF \l_@@_in_spfblock_bool {
    \par \setbox \l_tmpa_box \vbox \bgroup \everypar{\_@@_start_comment:}
  }
}
\cs_new_protected:Nn \_@@_maybe_comment_end: {
  \bool_if:NF \l_@@_in_spfblock_bool { \egroup }
}
\cs_new_protected:Nn \_@@_start_comment: {
  \egroup\csname @ @ par\endcsname\item[]\bgroup\stexcommentfont
}

%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\stexcommentfont}
%    \begin{macrocode}
\cs_new_protected:Npn \stexcommentfont {
  \small\itshape
}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{sproof}
%    In this environment, we initialize the proof depth counter |\count10| to 10, and set
%    up the description environment that will take the proof steps. At the end of the
%    proof, we position the proof end into the last line.
%    \begin{macrocode}
\cs_new_protected:Nn \_@@_start_env_nolist:nnn {
  \seq_clear:N \l_tmpa_seq
  %\clist_map_inline:Nn \l_@@_spf_for_clist {
  %  \tl_if_empty:nF{ ##1 }{
  %    \stex_get_symbol:n { ##1 }
  %    \exp_args:NNo \seq_put_right:Nn \l_tmpa_seq {
  %      \l_stex_get_symbol_uri_str
  %    }
  %  }
  %}
  %\exp_args:Nnnx
  %\begin{stex_annotate_env}{#1}{\seq_use:Nn \l_tmpa_seq {,}}
  %\str_if_empty:NF \spftype {
  %  \stex_annotate_invisible:nnn{type}{\spftype}{}
  %}
  #3~#2 %{~\stex_annotate:nnn{spftitle}{}{#2}}
  \str_if_empty:NF \l_stex_key_id_str {
    \exp_args:No \stex_ref_new_doc_target:n \l_stex_key_id_str
  }
  %\begin{stex_annotate_env}{spfbody}{\bool_if:NTF \l_stex_key_hide_bool {false}{true}}
  \bool_if:NT \l_stex_key_hide_bool{
    \stex_if_html_backend:F{\setbox\l_tmpa_box\vbox\bgroup}
  }
}
\cs_new_protected:Nn \_@@_start_env:nnn {
  \_@@_start_env_nolist:nnn{#1}{#2}{#3}
  \begin{list}{}{
    \setlength\topsep{0pt}
    \setlength\parsep{0pt}
    \setlength\rightmargin{0pt}
    
  }\_@@_maybe_comment:
}
\cs_new_protected:Nn \_@@_end_env:n {
  \stex_if_smsmode:F{
    \_@@_maybe_comment_end:
    \end{list}  
    \bool_if:NT \l_stex_key_hide_bool{
      \stex_if_html_backend:F{\egroup}
    }
    %\clist_set:No \l_tmpa_clist \spftype
    #1
    %\end{stex_annotate_env}
    %\end{stex_annotate_env}
  }
}
\NewDocumentEnvironment{sproof}{O{} m}{
  \intarray_gzero:N \l_@@_counter_intarray
  \intarray_gset:Nnn \l_@@_counter_intarray 1 1
  %\stex_reactivate_macro:N \yield
  %\stex_reactivate_macro:N \eqstep
  %\stex_reactivate_macro:N \assumption
  %\stex_reactivate_macro:N \conclude
  %\stex_reactivate_macro:N \spfstep
  \stex_keys_set:nn{spf}{#1}
  \stex_if_smsmode:TF {
    \str_if_empty:NF \l_stex_key_id_str {
      \exp_args:No \stex_ref_new_doc_target:n \l_stex_key_id_str
    }
  }{
    \_@@_start_env:nnn{sproof}{#2}{
      % TODO
    }
  }
  \stex_smsmode_do:
}{\_@@_end_env:n{
  % TODO
}}

\NewDocumentEnvironment{sproof*}{O{}}{
  %\stex_reactivate_macro:N \yield
  %\stex_reactivate_macro:N \eqstep
  %\stex_reactivate_macro:N \assumption
  %\stex_reactivate_macro:N \conclude
  %\stex_reactivate_macro:N \spfstep
  \stex_keys_set:nn{spf}{#1}
  \stex_if_smsmode:TF {
    \str_if_empty:NF \l_stex_key_id_str {
      \exp_args:No \stex_ref_new_doc_target:n \l_stex_key_id_str
    }
  }{
    \_@@_start_env_nolist:nnn{sproof}{}{
      % TODO
    }
  }
  \bool_set_true:N \l_@@_in_spfblock_bool
  \stex_smsmode_do:
}{
  \stex_if_smsmode:F{
    % TODO
    %\end{stex_annotate_env}
    %\end{stex_annotate_env}
  }
}

\NewDocumentEnvironment{subproof}{s O{} m}{
  \stex_keys_set:nn{spf}{#2}
  \stex_if_smsmode:TF {
    \str_if_empty:NF \l_stex_key_id_str {
      \exp_args:No \stex_ref_new_doc_target:n \l_stex_key_id_str
    }
  }{
    \_@@_start_env:nnn{subproof}{
      \stex_if_html_backend:T{\csname @ @ par\endcsname}\item[\_@@_insert_number:]\stex_ignore_spaces_and_pars: #3}{}
  }
  \_@@_add_counter:
  \stex_smsmode_do:
}{
  \_@@_remove_counter:
  \_@@_end_env:n{}  
  \bool_if:NT \l_@@_inc_counter_bool {
    \_@@_inc_counter:
  }
  \aftergroup\_@@_maybe_comment:
}
\AddToHook{env/subproof/before}{\_@@_maybe_comment_end:}

\cs_new_protected:Nn \_@@_sproof_start: {
  \par\noindent\titleemph{
    %\tl_if_empty:NTF \spftype {
    %  \spf@proof@kw
    %}{
    %  \spftype
    %}
  }:
}
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\spfidea}
%    \begin{macrocode}
\NewDocumentCommand\spfidea{O{} +m}{
  \stex_keys_set:nn{spf}{#1}
  \titleemph{Proof~Idea:
   % \tl_if_empty:NTF \spftype {Proof~Idea}{
   %   \spftype
   % }:
  }~#2
  \sproofend
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\spfstep,\conclude,\assumption,\have,\eqstep}
%    \begin{macrocode}

\stex_keys_define:nnnn { spfsteps } {
	\clist_clear:N \l_stex_key_for_clist
  \str_clear:N \l_stex_key_name_str
	\tl_clear:N \l_stex_key_method_tl
	\tl_clear:N \l_stex_key_term_tl
}{
  for         .clist_set:N  = \l_stex_key_for_clist ,
  method      .tl_set:N     = \l_stex_key_method_tl,
  term        .tl_set:N     = \l_stex_key_term_tl,
  name        .str_set_x:N  = \l_stex_key_name_str,
  type .code:n = {} % todo: type=inline
}{id,style,title}

\cs_new_protected:Nn \_@@_make_step_macro:Nnnnn {
  \NewDocumentCommand #1 {s O{} +m} {
    \_@@_maybe_comment_end:

    \stex_keys_set:nn{spfsteps}{##2}
    %\stex_annotate:nnn{spfstep}{#2}
    {
      \bool_if:NTF \l_@@_in_spfblock_bool {
        #4
      }{
        %\stex_if_html_backend:T{\csname @ @ par\endcsname}
        \item[\IfBooleanTF ##1 {}{#3}]
      }
      \str_if_empty:NF \l_stex_key_name_str {
        %\stex_debug:nn{spfstep}{Name:\l_@@_spf_name_str}
        %\stex_annotate_invisible:nnn{spfname}{}{\l_@@_spf_name_str}
        \stex_suppress_html:n{
          %\exp_args:NNx\exp_args:Nnx\vardef{v\l_@@_spf_name_str}{\exp_not:N\comp{\l_@@_spf_name_str}}
        }
      }
      %\tl_if_empty:NF \l_@@_spf_term_tl {
      %  \stex_annotate_invisible:nnn{spfyield}{}{$\l_@@_spf_term_tl$}
      %}
      ##3%\ignorespacesandpars ##3
    }
    \bool_if:NF \l_@@_in_spfblock_bool { \IfBooleanTF ##1 {}{ #5 } }
    \_@@_maybe_comment:
  }
  %\stex_deactivate_macro:Nn #1 {sproof~environments}
}

\_@@_make_step_macro:Nnnnn \assumption {assumption} \_@@_insert_number: {} \_@@_inc_counter:
\_@@_make_step_macro:Nnnnn \conclude {conclusion} {$\Rightarrow$} {} {}
\_@@_make_step_macro:Nnnnn \spfstep {} \_@@_insert_number: {} \_@@_inc_counter:

\NewDocumentCommand \eqstep {s m}{
  \_@@_maybe_comment_end:
  \bool_if:NTF \l_@@_in_spfblock_bool {
    $=$
  }{
    \item[$=$]
  }
  $#2$%\stex_annotate:nnn{spfstep}{eq}{ #2 }$
  \_@@_maybe_comment:
}
%\stex_deactivate_macro:Nn \eqstep {sproof~environments}

\NewDocumentCommand \yield {+m}{
  #1%\stex_annotate:nnn{spfyield}{}{ #1 }
}
%\stex_deactivate_macro:Nn \yield {sproof~environments}

\NewDocumentEnvironment{spfblock}{}{
  \item[]
  \bool_set_true:N \l_@@_in_spfblock_bool
}{
  \aftergroup\_@@_maybe_comment:
}
\AddToHook{env/spfblock/before}{\_@@_maybe_comment_end:}


\newcommand\spfjust[1]{
  #1%\stex_annotate:nnn{justification}{}{#1}
}
%    \end{macrocode}
% \end{macro}
%
% \end{sfragment}
%
% \begin{sfragment}{Metatheory}
%    \begin{macrocode}

\_stex_persist_read_now:

%<@@=stex_meta>
\group_begin:
  \cs_set:Npn \_stex_persist_module:nN #1 #2 {}
  \cs_set:Npn \stex_check_term:n #1 {}
  \cs_set:Npn \_stex_sref_do_aux:n #1 { #1 }
  \bool_set_false:N \_stex_html_do_output_bool
  \bool_set_false:N \c_stex_check_terms_bool
  \stex_uri_resolve:Nn \l_stex_current_ns_uri {http://mathhub.info/sTeX/meta}
  \stex_module_setup:n{Metatheory}

  \symdef{of~type}[args=ii,invisible]{#1}
  \notation{of~type}[colon]{#1 \mathbin{\comp{:}} #2}

  \symdef{apply}[args=ia]{#1\mathopen{\comp(} #2 \mathclose{\comp)}}{##1\mathpunct{\comp{,}}}
  
  % structures
  \symdef{module~type}[args=i,op=\mathtt{MOD}]
  {\mathopen{\comp{\mathtt{MOD}(}}#1\mathclose{\comp{)}}}
  \symdef{module~type~merge}[args=a,op=\oplus]
    {#1}{##1 \mathbin{\comp{\oplus}} ##2}
  \symdef{anonymous~record}[args=a]
    {\mathopen{\comp{[[}}#1\mathclose{\comp{]]}}}
    {##1\mathpunct{\comp,}##2}
  \symdef{record~field}[args=2]{#1\comp{.}#2}
  %\symdef{in~module}[args=2,hidden]{#1}
  %\symdecl*{module~type}[args=aa]
  %\notation{module~type}{\comp{\mathtt{MOD}} #1 \comp{\oplus\{} #2 \comp\}}{##1 \comp, ##2}{##1 \comp, ##2}
  
  \symdecl{mathstruct}[name=mathematical~structure,args=a] % TODO
  \notation{mathstruct}[angle,prec=nobrackets]
    {\mathopen{\comp\langle} #1 \mathclose{\comp\rangle}}
    {##1 \mathpunct{\comp,} ##2}

  % sequences
  \symdef{ellipses}[ldots]{\ldots}
  \symdef{sequence~expression~in}[parens,args=iai]{\comp(#1\comp)\c_math_subscript_token{#2\comp\in#3}}{##1\comp,##2}
  \symdef{sequence~expression}[comma,args=a]{#1}
    {##1\mathpunct{\comp,}##2}

  % bind (\forall, \Pi, \lambda etc.)
  \symdecl{bind}[args=Bi,assoc=pre]
  \notation{bind}[depfun,prec=nobrackets,op=(\cdot)\;\to\;\cdot]
    {\mathopen{\comp(} #1 \mathclose{\comp{)}\mathbin{\comp{\to}}} #2}
    {##1 \mathpunct{\comp,} ##2}
  \notation{bind}[forall]{\comp\forall #1.\;#2}{##1 \mathpunct{\comp,} ##2}
  \notation{bind}[Pi]{\mathop{\comp\prod}\c_math_subscript_token{#1}#2}
    {##1 \mathpunct{\comp,} ##2}

  \symdecl*{integer literal}
  \notation{integer literal}{\mathbb Z}

  % propositions
  \symdef{prop}[name=proposition]{\mathtt{Prop}}

  % any object
  \symdef{object}{\mathtt{Obj}}

  % TODO DELETE

  \symdef{aseqdots}[args=a,prec=nobrackets]{#1\comp{,\ldots}}{##1\comp,##2}
  \symdef{aseqfromto}[args=ai,prec=nobrackets]{#1\comp{,\ldots,}#2}{##1\comp,##2}
  \symdef{aseqfromtovia}[args=aii,prec=nobrackets]{#1\comp{,\ldots,}#2\comp{,\ldots,}#3}{##1\comp,##2}


  \stex_close_module:
  \stex_uri_add_module:NNn \l_stex_metatheory_uri \l_stex_current_ns_uri {Metatheory}
  \global \let \l_stex_metatheory_uri \l_stex_metatheory_uri
\group_end:
%    \end{macrocode}
%
% \end{sfragment}
%
%
% \begin{sfragment}{TODO}
%    \begin{macrocode}
%<@@=todo>

\bool_new:N \l_stex_inparray_bool\bool_set_false:N \l_stex_inparray_bool
\NewDocumentCommand \parray { m m } {
  %\group_begin:
  \bool_set_true:N \l_stex_inparray_bool
  %\begin{array}{#1}
    #2
  %\end{array}
  %\group_end:
}

\NewDocumentCommand \prmatrix { m } {
  %\group_begin:
  \bool_set_true:N \l_stex_inparray_bool
  %\begin{matrix}
    #1
  %\end{matrix}
  %\group_end:
}

\def \maybephline {
  %\bool_if:NT \l_stex_inparray_bool {\hline}
}

\def \parrayline #1 #2 {
  #1 #2 %\bool_if:NT \l_stex_inparray_bool {\\}
}

\def \pmrow #1 { \parrayline{}{ #1 } }

\def \parraylineh #1 #2 {
  #1 #2 %\bool_if:NT \l_stex_inparray_bool {\\\hline}
}

\def \parraycell #1 {
  #1 %\bool_if:NT \l_stex_inparray_bool {&}
}
%    \end{macrocode}
% \end{sfragment}
%
% \begin{macro}{\MMTinclude}
%    \begin{macrocode}
\stex_new_stylable_cmd:nnnn{MMTinclude}{m}{
  \stex_annotate_invisible:nn{shtml:import={#1}}{}
}{}
\stex_deactivate_macro:Nn \MMTinclude {module~environments}
\stex_every_module:n {\stex_reactivate_macro:N \MMTinclude}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\MMTrule}
%    \begin{macrocode}
\NewDocumentCommand \MMTrule {m m}{
  \tl_if_empty:nTF{#2}{\seq_clear:N \l_tmpa_seq}{
    \seq_set_split:Nnn \l_tmpa_seq , {#2}
  }
  \int_zero:N \l_tmpa_int
  \stex_annotate_invisible:n{
    $
    \stex_annotate:nn{shtml:rule={scala://#1}}{
      \_stex_annotate_force_break:n{
        \seq_if_empty:NF \l_tmpa_seq {
          \seq_map_inline:Nn \l_tmpa_seq {
            \int_incr:N \l_tmpa_int
            \stex_annotate:nn{
              shtml:argmode=i,
              shtml:arg={\int_use:N \l_tmpa_int}
            }{ ##1 }
          }
        }
      }
    }$
  }
}
\stex_deactivate_macro:Nn \MMTrule {module~environments}
\stex_every_module:n{\stex_reactivate_macro:N \MMTrule}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{mmtinterface}
%    \begin{macrocode}
\NewDocumentEnvironment { mmtinterface } { O{} m m } {
  \TODO
}{}
%    \end{macrocode}
% \end{environment}
%
%
%    \begin{macrocode}
%\the \c_stex_deps_content
\_stex_every_file:
%</package>
%    \end{macrocode}
% \end{sfragment}
% \end{implementation}
\endinput